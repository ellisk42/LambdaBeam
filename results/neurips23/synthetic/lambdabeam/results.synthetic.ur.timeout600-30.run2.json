{
    "num_tasks": 100,
    "num_tasks_solved": 89,
    "results": [
        {
            "elapsed_time": 1.664891593158245,
            "num_unique_values": 222,
            "solution": "Map(lambda u1: (lambda v1: If((lambda v1: IsEven(v1))(v1), 1, 1))(u1), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 23.670668953687823,
                "explored_percent_lambda": 51.286449399656945,
                "explored_percent_none": 25.042881646655232,
                "kept_percent_concrete": 28.169014084507044,
                "kept_percent_lambda": 71.83098591549296,
                "num_examples": 2,
                "num_explored_concrete": 138,
                "num_explored_lambda": 299,
                "num_explored_none": 146,
                "num_inputs": 1,
                "num_kept_concrete": 60,
                "num_kept_lambda": 153,
                "num_values_explored": 583,
                "num_values_kept": 213,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 583
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9676460735499859,
            "num_unique_values": 259,
            "solution": "Scanl1(lambda u1, u2: x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 34.09378960709759,
                "explored_percent_lambda": 39.543726235741445,
                "explored_percent_none": 26.362484157160964,
                "kept_percent_concrete": 60.6425702811245,
                "kept_percent_lambda": 39.3574297188755,
                "num_examples": 3,
                "num_explored_concrete": 269,
                "num_explored_lambda": 312,
                "num_explored_none": 208,
                "num_inputs": 2,
                "num_kept_concrete": 151,
                "num_kept_lambda": 98,
                "num_values_explored": 789,
                "num_values_kept": 249,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 789
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.008184552192688,
            "num_unique_values": 163,
            "solution": "Access(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 14.3646408839779,
                "explored_percent_lambda": 66.29834254143647,
                "explored_percent_none": 19.337016574585636,
                "kept_percent_concrete": 27.272727272727273,
                "kept_percent_lambda": 72.72727272727273,
                "num_examples": 5,
                "num_explored_concrete": 52,
                "num_explored_lambda": 240,
                "num_explored_none": 70,
                "num_inputs": 1,
                "num_kept_concrete": 42,
                "num_kept_lambda": 112,
                "num_values_explored": 362,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 362
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0180336646735668,
            "num_unique_values": 155,
            "solution": "Drop(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 11.864406779661017,
                "explored_percent_lambda": 66.38418079096046,
                "explored_percent_none": 21.75141242937853,
                "kept_percent_concrete": 22.602739726027398,
                "kept_percent_lambda": 77.3972602739726,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 235,
                "num_explored_none": 77,
                "num_inputs": 1,
                "num_kept_concrete": 33,
                "num_kept_lambda": 113,
                "num_values_explored": 354,
                "num_values_kept": 146,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 354
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8776800762861967,
            "num_unique_values": 143,
            "solution": "Take(Min(x2, 3), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 30.971128608923884,
                "explored_percent_lambda": 36.22047244094488,
                "explored_percent_none": 32.808398950131235,
                "kept_percent_concrete": 51.8796992481203,
                "kept_percent_lambda": 48.1203007518797,
                "num_examples": 4,
                "num_explored_concrete": 118,
                "num_explored_lambda": 138,
                "num_explored_none": 125,
                "num_inputs": 2,
                "num_kept_concrete": 69,
                "num_kept_lambda": 64,
                "num_values_explored": 381,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 381
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9878380969166756,
            "num_unique_values": 153,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 6.936416184971098,
                "explored_percent_lambda": 74.56647398843931,
                "explored_percent_none": 18.497109826589597,
                "kept_percent_concrete": 13.286713286713287,
                "kept_percent_lambda": 86.7132867132867,
                "num_examples": 4,
                "num_explored_concrete": 24,
                "num_explored_lambda": 258,
                "num_explored_none": 64,
                "num_inputs": 2,
                "num_kept_concrete": 19,
                "num_kept_lambda": 124,
                "num_values_explored": 346,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 346
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.031146651133895,
            "num_unique_values": 151,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 12.806539509536785,
                "explored_percent_lambda": 71.38964577656675,
                "explored_percent_none": 15.803814713896458,
                "kept_percent_concrete": 16.197183098591548,
                "kept_percent_lambda": 83.80281690140845,
                "num_examples": 2,
                "num_explored_concrete": 47,
                "num_explored_lambda": 262,
                "num_explored_none": 58,
                "num_inputs": 1,
                "num_kept_concrete": 23,
                "num_kept_lambda": 119,
                "num_values_explored": 367,
                "num_values_kept": 142,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 367
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0433473531156778,
            "num_unique_values": 153,
            "solution": "Drop(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 10.773480662983426,
                "explored_percent_lambda": 67.67955801104972,
                "explored_percent_none": 21.54696132596685,
                "kept_percent_concrete": 14.583333333333334,
                "kept_percent_lambda": 85.41666666666667,
                "num_examples": 2,
                "num_explored_concrete": 39,
                "num_explored_lambda": 245,
                "num_explored_none": 78,
                "num_inputs": 1,
                "num_kept_concrete": 21,
                "num_kept_lambda": 123,
                "num_values_explored": 362,
                "num_values_kept": 144,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 362
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9599728491157293,
            "num_unique_values": 262,
            "solution": "Scanl1(lambda u1, u2: 3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 22.56637168141593,
                "explored_percent_lambda": 48.96755162241888,
                "explored_percent_none": 28.466076696165192,
                "kept_percent_concrete": 30.039525691699605,
                "kept_percent_lambda": 69.96047430830039,
                "num_examples": 4,
                "num_explored_concrete": 153,
                "num_explored_lambda": 332,
                "num_explored_none": 193,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 177,
                "num_values_explored": 678,
                "num_values_kept": 253,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 678
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.95254479162395,
            "num_unique_values": 163,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 33.08641975308642,
                "explored_percent_lambda": 39.01234567901235,
                "explored_percent_none": 27.901234567901234,
                "kept_percent_concrete": 52.287581699346404,
                "kept_percent_lambda": 47.712418300653596,
                "num_examples": 5,
                "num_explored_concrete": 134,
                "num_explored_lambda": 158,
                "num_explored_none": 113,
                "num_inputs": 2,
                "num_kept_concrete": 80,
                "num_kept_lambda": 73,
                "num_values_explored": 405,
                "num_values_kept": 153,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 405
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.9001314993947744,
            "num_unique_values": 367,
            "solution": "Head(Map(lambda u1: (lambda v1: IntDivide(v1, Add(x1, 1)))(u1), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 55.09383378016086,
                "explored_percent_lambda": 14.67828418230563,
                "explored_percent_none": 30.22788203753351,
                "kept_percent_concrete": 75.07002801120449,
                "kept_percent_lambda": 24.92997198879552,
                "num_examples": 4,
                "num_explored_concrete": 822,
                "num_explored_lambda": 219,
                "num_explored_none": 451,
                "num_inputs": 2,
                "num_kept_concrete": 268,
                "num_kept_lambda": 89,
                "num_values_explored": 1492,
                "num_values_kept": 357,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1492
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20178359746932983,
            "num_unique_values": 70,
            "solution": "Max(x1, Square(4))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 98.93617021276596,
                "explored_percent_lambda": 1.0638297872340425,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 98.36065573770492,
                "kept_percent_lambda": 1.639344262295082,
                "num_examples": 2,
                "num_explored_concrete": 93,
                "num_explored_lambda": 1,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 60,
                "num_kept_lambda": 1,
                "num_values_explored": 94,
                "num_values_kept": 61,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 94
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8399227317422628,
            "num_unique_values": 285,
            "solution": "Multiply(4, Minimum(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 29.379310344827587,
                "explored_percent_lambda": 49.6551724137931,
                "explored_percent_none": 20.96551724137931,
                "kept_percent_concrete": 54.34782608695652,
                "kept_percent_lambda": 45.65217391304348,
                "num_examples": 4,
                "num_explored_concrete": 213,
                "num_explored_lambda": 360,
                "num_explored_none": 152,
                "num_inputs": 1,
                "num_kept_concrete": 150,
                "num_kept_lambda": 126,
                "num_values_explored": 725,
                "num_values_kept": 276,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 725
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.624843092635274,
            "num_unique_values": 272,
            "solution": "Multiply(4, Count(lambda u1: (lambda v1: Equal(0, v1))(u1), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 42.813141683778234,
                "explored_percent_lambda": 38.29568788501027,
                "explored_percent_none": 18.8911704312115,
                "kept_percent_concrete": 48.28897338403042,
                "kept_percent_lambda": 51.71102661596958,
                "num_examples": 2,
                "num_explored_concrete": 417,
                "num_explored_lambda": 373,
                "num_explored_none": 184,
                "num_inputs": 1,
                "num_kept_concrete": 127,
                "num_kept_lambda": 136,
                "num_values_explored": 974,
                "num_values_kept": 263,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 974
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4973336327821016,
            "num_unique_values": 267,
            "solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 39.365671641791046,
                "explored_percent_lambda": 44.776119402985074,
                "explored_percent_none": 15.85820895522388,
                "kept_percent_concrete": 52.52918287937743,
                "kept_percent_lambda": 47.47081712062257,
                "num_examples": 5,
                "num_explored_concrete": 211,
                "num_explored_lambda": 240,
                "num_explored_none": 85,
                "num_inputs": 2,
                "num_kept_concrete": 135,
                "num_kept_lambda": 122,
                "num_values_explored": 536,
                "num_values_kept": 257,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 536
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.388252628967166,
            "num_unique_values": 786,
            "solution": "Add(2, Multiply(-1, Sum(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 56.42080517190714,
                "explored_percent_lambda": 19.424037613870116,
                "explored_percent_none": 24.155157214222744,
                "kept_percent_concrete": 60.48906048906049,
                "kept_percent_lambda": 39.51093951093951,
                "num_examples": 3,
                "num_explored_concrete": 1920,
                "num_explored_lambda": 661,
                "num_explored_none": 822,
                "num_inputs": 1,
                "num_kept_concrete": 470,
                "num_kept_lambda": 307,
                "num_values_explored": 3403,
                "num_values_kept": 777,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3403
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8456497807055712,
            "num_unique_values": 260,
            "solution": "Scanl1(lambda u1, u2: Sum(Take(4, x2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 29.05982905982906,
                "explored_percent_lambda": 48.29059829059829,
                "explored_percent_none": 22.64957264957265,
                "kept_percent_concrete": 48.0,
                "kept_percent_lambda": 52.0,
                "num_examples": 2,
                "num_explored_concrete": 204,
                "num_explored_lambda": 339,
                "num_explored_none": 159,
                "num_inputs": 2,
                "num_kept_concrete": 120,
                "num_kept_lambda": 130,
                "num_values_explored": 702,
                "num_values_kept": 250,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 702
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8891960643231869,
            "num_unique_values": 245,
            "solution": "ZipWith(lambda u1, u2: (lambda v1, v2: Min(v1, v2))(u1, u2), Sort(x1), Drop(1, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 24.813153961136024,
                "explored_percent_lambda": 44.095665171898354,
                "explored_percent_none": 31.09118086696562,
                "kept_percent_concrete": 26.271186440677965,
                "kept_percent_lambda": 73.72881355932203,
                "num_examples": 3,
                "num_explored_concrete": 166,
                "num_explored_lambda": 295,
                "num_explored_none": 208,
                "num_inputs": 1,
                "num_kept_concrete": 62,
                "num_kept_lambda": 174,
                "num_values_explored": 669,
                "num_values_kept": 236,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 669
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4405267257243395,
            "num_unique_values": 198,
            "solution": "Sum(Sort(Drop(x1, Take(4, x2))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 23.95498392282958,
                "explored_percent_lambda": 39.71061093247589,
                "explored_percent_none": 36.334405144694536,
                "kept_percent_concrete": 48.93617021276596,
                "kept_percent_lambda": 51.06382978723404,
                "num_examples": 3,
                "num_explored_concrete": 149,
                "num_explored_lambda": 247,
                "num_explored_none": 226,
                "num_inputs": 2,
                "num_kept_concrete": 92,
                "num_kept_lambda": 96,
                "num_values_explored": 622,
                "num_values_kept": 188,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 622
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9094268772751093,
            "num_unique_values": 205,
            "solution": "Map(lambda u1: Head(x2), Drop(2, x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 22.41169305724726,
                "explored_percent_lambda": 50.79171741778319,
                "explored_percent_none": 26.796589524969548,
                "kept_percent_concrete": 26.666666666666668,
                "kept_percent_lambda": 73.33333333333333,
                "num_examples": 2,
                "num_explored_concrete": 184,
                "num_explored_lambda": 417,
                "num_explored_none": 220,
                "num_inputs": 2,
                "num_kept_concrete": 52,
                "num_kept_lambda": 143,
                "num_values_explored": 821,
                "num_values_kept": 195,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 821
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.2533729039132595,
            "num_unique_values": 250,
            "solution": "Scanl1(lambda u1, u2: Head(x2), ZipWith(lambda u1, u2: Last(x2), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 30.103806228373703,
                "explored_percent_lambda": 38.86966551326413,
                "explored_percent_none": 31.02652825836217,
                "kept_percent_concrete": 43.333333333333336,
                "kept_percent_lambda": 56.666666666666664,
                "num_examples": 3,
                "num_explored_concrete": 261,
                "num_explored_lambda": 337,
                "num_explored_none": 269,
                "num_inputs": 2,
                "num_kept_concrete": 104,
                "num_kept_lambda": 136,
                "num_values_explored": 867,
                "num_values_kept": 240,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 867
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.641806012019515,
            "num_unique_values": 556,
            "solution": "Add(Minimum(x1), Count(lambda u1: (lambda v1: IsEven(v1))(u1), Drop(1, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 59.73154362416108,
                "explored_percent_lambda": 27.325023969319272,
                "explored_percent_none": 12.943432406519655,
                "kept_percent_concrete": 67.76556776556777,
                "kept_percent_lambda": 32.234432234432234,
                "num_examples": 4,
                "num_explored_concrete": 623,
                "num_explored_lambda": 285,
                "num_explored_none": 135,
                "num_inputs": 2,
                "num_kept_concrete": 370,
                "num_kept_lambda": 176,
                "num_values_explored": 1043,
                "num_values_kept": 546,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1043
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 95.41591249033809,
            "num_unique_values": 788,
            "solution": "Add(-1, Subtract(-1, Count(lambda u1: (lambda v1: IsOdd(v1))(u1), Take(Head(x1), x1))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 70.41420118343196,
                "explored_percent_lambda": 19.723865877712033,
                "explored_percent_none": 9.861932938856016,
                "kept_percent_concrete": 73.42747111681643,
                "kept_percent_lambda": 26.57252888318357,
                "num_examples": 5,
                "num_explored_concrete": 1785,
                "num_explored_lambda": 500,
                "num_explored_none": 250,
                "num_inputs": 1,
                "num_kept_concrete": 572,
                "num_kept_lambda": 207,
                "num_values_explored": 2535,
                "num_values_kept": 779,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 50522
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.5365428123623133,
            "num_unique_values": 545,
            "solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 57.03933747412008,
                "explored_percent_lambda": 33.95445134575569,
                "explored_percent_none": 9.006211180124224,
                "kept_percent_concrete": 65.60747663551402,
                "kept_percent_lambda": 34.39252336448598,
                "num_examples": 5,
                "num_explored_concrete": 551,
                "num_explored_lambda": 328,
                "num_explored_none": 87,
                "num_inputs": 2,
                "num_kept_concrete": 351,
                "num_kept_lambda": 184,
                "num_values_explored": 966,
                "num_values_kept": 535,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 966
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9660407099872828,
            "num_unique_values": 246,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, x1))(u1), Map(lambda u1: Head(x2), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 30.70063694267516,
                "explored_percent_lambda": 42.802547770700635,
                "explored_percent_none": 26.496815286624205,
                "kept_percent_concrete": 49.152542372881356,
                "kept_percent_lambda": 50.847457627118644,
                "num_examples": 2,
                "num_explored_concrete": 241,
                "num_explored_lambda": 336,
                "num_explored_none": 208,
                "num_inputs": 2,
                "num_kept_concrete": 116,
                "num_kept_lambda": 120,
                "num_values_explored": 785,
                "num_values_kept": 236,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 785
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.112431339919567,
            "num_unique_values": 154,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 33.60995850622407,
                "explored_percent_lambda": 38.58921161825726,
                "explored_percent_none": 27.800829875518673,
                "kept_percent_concrete": 47.55244755244755,
                "kept_percent_lambda": 52.44755244755245,
                "num_examples": 2,
                "num_explored_concrete": 162,
                "num_explored_lambda": 186,
                "num_explored_none": 134,
                "num_inputs": 3,
                "num_kept_concrete": 68,
                "num_kept_lambda": 75,
                "num_values_explored": 482,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 482
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 36.83248934522271,
            "num_unique_values": 1083,
            "solution": "Multiply(-1, Head(ZipWith(lambda u1, u2: (lambda v1: Subtract(Last(x1), v1))(u2), x2, Reverse(x2))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 68.81067961165049,
                "explored_percent_lambda": 17.020631067961165,
                "explored_percent_none": 14.16868932038835,
                "kept_percent_concrete": 76.88723205964585,
                "kept_percent_lambda": 23.112767940354146,
                "num_examples": 5,
                "num_explored_concrete": 2268,
                "num_explored_lambda": 561,
                "num_explored_none": 467,
                "num_inputs": 2,
                "num_kept_concrete": 825,
                "num_kept_lambda": 248,
                "num_values_explored": 3296,
                "num_values_kept": 1073,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 19337
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.523211054503918,
            "num_unique_values": 246,
            "solution": "Subtract(2, IntDivide(Subtract(Add(x1, 2), Square(3)), 4))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 24.671460451276964,
                "explored_percent_lambda": 12.47210513265559,
                "explored_percent_none": 62.856434416067444,
                "kept_percent_concrete": 83.54430379746836,
                "kept_percent_lambda": 16.455696202531644,
                "num_examples": 5,
                "num_explored_concrete": 995,
                "num_explored_lambda": 503,
                "num_explored_none": 2535,
                "num_inputs": 1,
                "num_kept_concrete": 198,
                "num_kept_lambda": 39,
                "num_values_explored": 4033,
                "num_values_kept": 237,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4033
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6769534703344107,
            "num_unique_values": 224,
            "solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 18.370607028753994,
                "explored_percent_lambda": 60.70287539936102,
                "explored_percent_none": 20.926517571884983,
                "kept_percent_concrete": 37.674418604651166,
                "kept_percent_lambda": 62.325581395348834,
                "num_examples": 3,
                "num_explored_concrete": 115,
                "num_explored_lambda": 380,
                "num_explored_none": 131,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 134,
                "num_values_explored": 626,
                "num_values_kept": 215,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 626
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4576875902712345,
            "num_unique_values": 285,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 41.776315789473685,
                "explored_percent_lambda": 26.151315789473685,
                "explored_percent_none": 32.07236842105263,
                "kept_percent_concrete": 77.45454545454545,
                "kept_percent_lambda": 22.545454545454547,
                "num_examples": 5,
                "num_explored_concrete": 254,
                "num_explored_lambda": 159,
                "num_explored_none": 195,
                "num_inputs": 2,
                "num_kept_concrete": 213,
                "num_kept_lambda": 62,
                "num_values_explored": 608,
                "num_values_kept": 275,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 608
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.183548739179969,
            "num_unique_values": 542,
            "solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), Map(lambda u1: Head(x2), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 54.746136865342166,
                "explored_percent_lambda": 33.333333333333336,
                "explored_percent_none": 11.920529801324504,
                "kept_percent_concrete": 62.03007518796993,
                "kept_percent_lambda": 37.96992481203007,
                "num_examples": 3,
                "num_explored_concrete": 744,
                "num_explored_lambda": 453,
                "num_explored_none": 162,
                "num_inputs": 2,
                "num_kept_concrete": 330,
                "num_kept_lambda": 202,
                "num_values_explored": 1359,
                "num_values_kept": 532,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1359
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.3353481609374285,
            "num_unique_values": 238,
            "solution": "Multiply(Square(4), Add(x1, 3))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 24.939290917921323,
                "explored_percent_lambda": 11.46187469645459,
                "explored_percent_none": 63.59883438562409,
                "kept_percent_concrete": 82.96943231441048,
                "kept_percent_lambda": 17.03056768558952,
                "num_examples": 2,
                "num_explored_concrete": 1027,
                "num_explored_lambda": 472,
                "num_explored_none": 2619,
                "num_inputs": 1,
                "num_kept_concrete": 190,
                "num_kept_lambda": 39,
                "num_values_explored": 4118,
                "num_values_kept": 229,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4118
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9961748104542494,
            "num_unique_values": 248,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 33.07493540051679,
                "explored_percent_lambda": 43.41085271317829,
                "explored_percent_none": 23.51421188630491,
                "kept_percent_concrete": 50.42016806722689,
                "kept_percent_lambda": 49.57983193277311,
                "num_examples": 5,
                "num_explored_concrete": 256,
                "num_explored_lambda": 336,
                "num_explored_none": 182,
                "num_inputs": 2,
                "num_kept_concrete": 120,
                "num_kept_lambda": 118,
                "num_values_explored": 774,
                "num_values_kept": 238,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 774
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.568314081057906,
            "num_unique_values": 392,
            "solution": "If(IsEven(Sum(x1)), Square(Square(3)), Square(Last(x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 41.14688128772636,
                "explored_percent_lambda": 42.756539235412475,
                "explored_percent_none": 16.096579476861166,
                "kept_percent_concrete": 50.261780104712045,
                "kept_percent_lambda": 49.738219895287955,
                "num_examples": 3,
                "num_explored_concrete": 409,
                "num_explored_lambda": 425,
                "num_explored_none": 160,
                "num_inputs": 2,
                "num_kept_concrete": 192,
                "num_kept_lambda": 190,
                "num_values_explored": 994,
                "num_values_kept": 382,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 994
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.882590651512146,
            "num_unique_values": 267,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 25.187406296851574,
                "explored_percent_lambda": 54.87256371814093,
                "explored_percent_none": 19.940029985007495,
                "kept_percent_concrete": 35.65891472868217,
                "kept_percent_lambda": 64.34108527131782,
                "num_examples": 2,
                "num_explored_concrete": 168,
                "num_explored_lambda": 366,
                "num_explored_none": 133,
                "num_inputs": 1,
                "num_kept_concrete": 92,
                "num_kept_lambda": 166,
                "num_values_explored": 667,
                "num_values_kept": 258,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 667
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.2285871133208275,
            "num_unique_values": 263,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Min(-1, (lambda v1: Multiply(v1, Add(-1, -1)))(v1)))(u2), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 27.18954248366013,
                "explored_percent_lambda": 45.22875816993464,
                "explored_percent_none": 27.58169934640523,
                "kept_percent_concrete": 30.31496062992126,
                "kept_percent_lambda": 69.68503937007874,
                "num_examples": 4,
                "num_explored_concrete": 208,
                "num_explored_lambda": 346,
                "num_explored_none": 211,
                "num_inputs": 1,
                "num_kept_concrete": 77,
                "num_kept_lambda": 177,
                "num_values_explored": 765,
                "num_values_kept": 254,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 765
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.552727721631527,
            "num_unique_values": 526,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Min(Sum(x1), (lambda v1: Max(x2, v1))(v1)))(u2), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 54.3859649122807,
                "explored_percent_lambda": 26.120857699805068,
                "explored_percent_none": 19.49317738791423,
                "kept_percent_concrete": 64.34108527131782,
                "kept_percent_lambda": 35.65891472868217,
                "num_examples": 5,
                "num_explored_concrete": 837,
                "num_explored_lambda": 402,
                "num_explored_none": 300,
                "num_inputs": 2,
                "num_kept_concrete": 332,
                "num_kept_lambda": 184,
                "num_values_explored": 1539,
                "num_values_kept": 516,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1539
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 230.00440873205662,
            "num_unique_values": 1105,
            "solution": "Subtract(x3, Sum(Scanl1(lambda u1, u2: If(IsOdd(x1), 3, Last(x2)), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 79.77814148026914,
                "explored_percent_lambda": 6.064739043462447,
                "explored_percent_none": 14.157119476268413,
                "kept_percent_concrete": 83.18098720292505,
                "kept_percent_lambda": 16.819012797074954,
                "num_examples": 2,
                "num_explored_concrete": 8774,
                "num_explored_lambda": 667,
                "num_explored_none": 1557,
                "num_inputs": 3,
                "num_kept_concrete": 910,
                "num_kept_lambda": 184,
                "num_values_explored": 10998,
                "num_values_kept": 1094,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 127587
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.905865378677845,
            "num_unique_values": 266,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 23.696682464454977,
                "explored_percent_lambda": 48.81516587677725,
                "explored_percent_none": 27.488151658767773,
                "kept_percent_concrete": 32.295719844357976,
                "kept_percent_lambda": 67.70428015564202,
                "num_examples": 2,
                "num_explored_concrete": 150,
                "num_explored_lambda": 309,
                "num_explored_none": 174,
                "num_inputs": 1,
                "num_kept_concrete": 83,
                "num_kept_lambda": 174,
                "num_values_explored": 633,
                "num_values_kept": 257,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 633
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 44.420225435867906,
            "num_unique_values": 1302,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 56.75222278141251,
                "explored_percent_lambda": 30.749874182184197,
                "explored_percent_none": 12.497903036403288,
                "kept_percent_concrete": 44.39288476411446,
                "kept_percent_lambda": 55.60711523588554,
                "num_examples": 2,
                "num_explored_concrete": 3383,
                "num_explored_lambda": 1833,
                "num_explored_none": 745,
                "num_inputs": 1,
                "num_kept_concrete": 574,
                "num_kept_lambda": 719,
                "num_values_explored": 5961,
                "num_values_kept": 1293,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 19013
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.667393449693918,
            "num_unique_values": 229,
            "solution": "Subtract(Subtract(Subtract(x1, x2), Min(x2, 1)), Min(x2, -1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 24.328940946803318,
                "explored_percent_lambda": 11.591020009760859,
                "explored_percent_none": 64.08003904343582,
                "kept_percent_concrete": 82.1917808219178,
                "kept_percent_lambda": 17.80821917808219,
                "num_examples": 2,
                "num_explored_concrete": 997,
                "num_explored_lambda": 475,
                "num_explored_none": 2626,
                "num_inputs": 2,
                "num_kept_concrete": 180,
                "num_kept_lambda": 39,
                "num_values_explored": 4098,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4098
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.646682528778911,
            "num_unique_values": 360,
            "solution": "Map(lambda u1: Add(-1, IntDivide(Add(x2, 1), 4)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 41.99864956110736,
                "explored_percent_lambda": 14.550979068197163,
                "explored_percent_none": 43.45037137069548,
                "kept_percent_concrete": 67.14285714285714,
                "kept_percent_lambda": 32.857142857142854,
                "num_examples": 4,
                "num_explored_concrete": 1244,
                "num_explored_lambda": 431,
                "num_explored_none": 1287,
                "num_inputs": 2,
                "num_kept_concrete": 235,
                "num_kept_lambda": 115,
                "num_values_explored": 2962,
                "num_values_kept": 350,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2962
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.866786636412144,
            "num_unique_values": 1045,
            "solution": "Scanl1(lambda u1, u2: Subtract(Access(1, x1), 1), Map(lambda u1: Add(Head(x1), -1), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 71.48584314708093,
                "explored_percent_lambda": 19.894763217238786,
                "explored_percent_none": 8.61939363568028,
                "kept_percent_concrete": 66.66666666666667,
                "kept_percent_lambda": 33.333333333333336,
                "num_examples": 3,
                "num_explored_concrete": 2853,
                "num_explored_lambda": 794,
                "num_explored_none": 344,
                "num_inputs": 2,
                "num_kept_concrete": 690,
                "num_kept_lambda": 345,
                "num_values_explored": 3991,
                "num_values_kept": 1035,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3991
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.054412636905909,
            "num_unique_values": 754,
            "solution": "Subtract(Add(Head(x1), Multiply(2, Square(4))), Subtract(0, Head(x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 65.1562060230791,
                "explored_percent_lambda": 16.577540106951872,
                "explored_percent_none": 18.26625386996904,
                "kept_percent_concrete": 70.33557046979865,
                "kept_percent_lambda": 29.664429530201343,
                "num_examples": 4,
                "num_explored_concrete": 2315,
                "num_explored_lambda": 589,
                "num_explored_none": 649,
                "num_inputs": 1,
                "num_kept_concrete": 524,
                "num_kept_lambda": 221,
                "num_values_explored": 3553,
                "num_values_kept": 745,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3553
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8654644098132849,
            "num_unique_values": 125,
            "solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 94.78079331941545,
                "explored_percent_lambda": 5.010438413361169,
                "explored_percent_none": 0.20876826722338204,
                "kept_percent_concrete": 79.3103448275862,
                "kept_percent_lambda": 20.689655172413794,
                "num_examples": 5,
                "num_explored_concrete": 454,
                "num_explored_lambda": 24,
                "num_explored_none": 1,
                "num_inputs": 1,
                "num_kept_concrete": 92,
                "num_kept_lambda": 24,
                "num_values_explored": 479,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 479
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8046054281294346,
            "num_unique_values": 242,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x3, Take(-1, x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 31.443298969072163,
                "explored_percent_lambda": 29.63917525773196,
                "explored_percent_none": 38.91752577319588,
                "kept_percent_concrete": 51.515151515151516,
                "kept_percent_lambda": 48.484848484848484,
                "num_examples": 2,
                "num_explored_concrete": 244,
                "num_explored_lambda": 230,
                "num_explored_none": 302,
                "num_inputs": 3,
                "num_kept_concrete": 119,
                "num_kept_lambda": 112,
                "num_values_explored": 776,
                "num_values_kept": 231,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 776
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.8465241957455873,
            "num_unique_values": 175,
            "solution": "Min(IntDivide(x1, 4), Add(4, Add(x1, x2)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 25.781990521327014,
                "explored_percent_lambda": 13.744075829383887,
                "explored_percent_none": 60.4739336492891,
                "kept_percent_concrete": 81.81818181818181,
                "kept_percent_lambda": 18.181818181818183,
                "num_examples": 2,
                "num_explored_concrete": 544,
                "num_explored_lambda": 290,
                "num_explored_none": 1276,
                "num_inputs": 2,
                "num_kept_concrete": 135,
                "num_kept_lambda": 30,
                "num_values_explored": 2110,
                "num_values_kept": 165,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2110
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7259466294199228,
            "num_unique_values": 250,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(x1, (lambda v1: Add(x1, v1))(v1)))(u2), x2, x3)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 31.882022471910112,
                "explored_percent_lambda": 37.359550561797754,
                "explored_percent_none": 30.758426966292134,
                "kept_percent_concrete": 50.62761506276151,
                "kept_percent_lambda": 49.37238493723849,
                "num_examples": 4,
                "num_explored_concrete": 227,
                "num_explored_lambda": 266,
                "num_explored_none": 219,
                "num_inputs": 3,
                "num_kept_concrete": 121,
                "num_kept_lambda": 118,
                "num_values_explored": 712,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 712
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.596383571624756,
            "num_unique_values": 505,
            "solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 58.76010781671159,
                "explored_percent_lambda": 29.290206648697215,
                "explored_percent_none": 11.949685534591195,
                "kept_percent_concrete": 66.80161943319838,
                "kept_percent_lambda": 33.19838056680162,
                "num_examples": 4,
                "num_explored_concrete": 654,
                "num_explored_lambda": 326,
                "num_explored_none": 133,
                "num_inputs": 3,
                "num_kept_concrete": 330,
                "num_kept_lambda": 164,
                "num_values_explored": 1113,
                "num_values_kept": 494,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1113
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 40.87732055038214,
            "num_unique_values": 314,
            "solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 25.368540417949134,
                "explored_percent_lambda": 9.93034181111291,
                "explored_percent_none": 64.70111777093796,
                "kept_percent_concrete": 85.19736842105263,
                "kept_percent_lambda": 14.802631578947368,
                "num_examples": 4,
                "num_explored_concrete": 1566,
                "num_explored_lambda": 613,
                "num_explored_none": 3994,
                "num_inputs": 2,
                "num_kept_concrete": 259,
                "num_kept_lambda": 45,
                "num_values_explored": 6173,
                "num_values_kept": 304,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 23412
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.0715990997850895,
            "num_unique_values": 247,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), Drop(1, Take(4, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 23.896103896103895,
                "explored_percent_lambda": 55.064935064935064,
                "explored_percent_none": 21.038961038961038,
                "kept_percent_concrete": 36.134453781512605,
                "kept_percent_lambda": 63.865546218487395,
                "num_examples": 5,
                "num_explored_concrete": 184,
                "num_explored_lambda": 424,
                "num_explored_none": 162,
                "num_inputs": 1,
                "num_kept_concrete": 86,
                "num_kept_lambda": 152,
                "num_values_explored": 770,
                "num_values_kept": 238,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 770
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6827130746096373,
            "num_unique_values": 263,
            "solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 35.3968253968254,
                "explored_percent_lambda": 40.0,
                "explored_percent_none": 24.603174603174605,
                "kept_percent_concrete": 59.523809523809526,
                "kept_percent_lambda": 40.476190476190474,
                "num_examples": 5,
                "num_explored_concrete": 223,
                "num_explored_lambda": 252,
                "num_explored_none": 155,
                "num_inputs": 3,
                "num_kept_concrete": 150,
                "num_kept_lambda": 102,
                "num_values_explored": 630,
                "num_values_kept": 252,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 630
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.3203283473849297,
            "num_unique_values": 458,
            "solution": "Reverse(ZipWith(lambda u1, u2: (lambda v1: IntDivide(v1, Add(3, 4)))(u2), x1, Reverse(x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 42.78676988036594,
                "explored_percent_lambda": 37.29767769176636,
                "explored_percent_none": 19.9155524278677,
                "kept_percent_concrete": 47.661469933184854,
                "kept_percent_lambda": 52.338530066815146,
                "num_examples": 3,
                "num_explored_concrete": 608,
                "num_explored_lambda": 530,
                "num_explored_none": 283,
                "num_inputs": 1,
                "num_kept_concrete": 214,
                "num_kept_lambda": 235,
                "num_values_explored": 1421,
                "num_values_kept": 449,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1421
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.096548413857818,
            "num_unique_values": 1258,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 62.2579637726421,
                "explored_percent_lambda": 24.656464709556527,
                "explored_percent_none": 13.085571517801375,
                "kept_percent_concrete": 51.6025641025641,
                "kept_percent_lambda": 48.3974358974359,
                "num_examples": 4,
                "num_explored_concrete": 3987,
                "num_explored_lambda": 1579,
                "num_explored_none": 838,
                "num_inputs": 2,
                "num_kept_concrete": 644,
                "num_kept_lambda": 604,
                "num_values_explored": 6404,
                "num_values_kept": 1248,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 6404
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 601.0323189962655,
            "num_unique_values": 2436,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.67522291272628,
                "explored_percent_lambda": 13.597676303701702,
                "explored_percent_none": 9.727100783572007,
                "kept_percent_concrete": 64.0,
                "kept_percent_lambda": 36.0,
                "num_examples": 5,
                "num_explored_concrete": 11351,
                "num_explored_lambda": 2013,
                "num_explored_none": 1440,
                "num_inputs": 3,
                "num_kept_concrete": 1552,
                "num_kept_lambda": 873,
                "num_values_explored": 14804,
                "num_values_kept": 2425,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 297414
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9723163098096848,
            "num_unique_values": 231,
            "solution": "ZipWith(lambda u1, u2: Sum(x1), x2, Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 26.322751322751323,
                "explored_percent_lambda": 51.71957671957672,
                "explored_percent_none": 21.95767195767196,
                "kept_percent_concrete": 39.81900452488688,
                "kept_percent_lambda": 60.18099547511312,
                "num_examples": 5,
                "num_explored_concrete": 199,
                "num_explored_lambda": 391,
                "num_explored_none": 166,
                "num_inputs": 2,
                "num_kept_concrete": 88,
                "num_kept_lambda": 133,
                "num_values_explored": 756,
                "num_values_kept": 221,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 756
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 51.50662429817021,
            "num_unique_values": 1009,
            "solution": "Min(Subtract(x1, 3), Add(Subtract(Add(x1, 1), Head(x2)), 1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 57.636134150739274,
                "explored_percent_lambda": 8.76307248467364,
                "explored_percent_none": 33.60079336458709,
                "kept_percent_concrete": 74.57457457457457,
                "kept_percent_lambda": 25.425425425425427,
                "num_examples": 5,
                "num_explored_concrete": 6393,
                "num_explored_lambda": 972,
                "num_explored_none": 3727,
                "num_inputs": 2,
                "num_kept_concrete": 745,
                "num_kept_lambda": 254,
                "num_values_explored": 11092,
                "num_values_kept": 999,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 27881
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.344726841896772,
            "num_unique_values": 646,
            "solution": "Map(lambda u1: (lambda v1: IntDivide(v1, x1))(u1), Map(lambda u1: (lambda v1: IntDivide(v1, 4))(u1), x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 52.095660749506905,
                "explored_percent_lambda": 21.055226824457595,
                "explored_percent_none": 26.849112426035504,
                "kept_percent_concrete": 56.289308176100626,
                "kept_percent_lambda": 43.710691823899374,
                "num_examples": 2,
                "num_explored_concrete": 2113,
                "num_explored_lambda": 854,
                "num_explored_none": 1089,
                "num_inputs": 2,
                "num_kept_concrete": 358,
                "num_kept_lambda": 278,
                "num_values_explored": 4056,
                "num_values_kept": 636,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4056
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 172.28988392278552,
            "num_unique_values": 505,
            "solution": "Subtract(Add(x1, Subtract(0, Square(Square(3)))), Square(3))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 30.69494584837545,
                "explored_percent_lambda": 12.274368231046932,
                "explored_percent_none": 57.03068592057762,
                "kept_percent_concrete": 80.84677419354838,
                "kept_percent_lambda": 19.153225806451612,
                "num_examples": 4,
                "num_explored_concrete": 3401,
                "num_explored_lambda": 1360,
                "num_explored_none": 6319,
                "num_inputs": 1,
                "num_kept_concrete": 401,
                "num_kept_lambda": 95,
                "num_values_explored": 11080,
                "num_values_kept": 496,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 92154
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5403627529740334,
            "num_unique_values": 219,
            "solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 23.600605143721634,
                "explored_percent_lambda": 42.360060514372165,
                "explored_percent_none": 34.039334341906205,
                "kept_percent_concrete": 43.0622009569378,
                "kept_percent_lambda": 56.9377990430622,
                "num_examples": 4,
                "num_explored_concrete": 156,
                "num_explored_lambda": 280,
                "num_explored_none": 225,
                "num_inputs": 2,
                "num_kept_concrete": 90,
                "num_kept_lambda": 119,
                "num_values_explored": 661,
                "num_values_kept": 209,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 26.803116094321012,
            "num_unique_values": 1918,
            "solution": "Subtract(Multiply(-1, Add(4, Sum(Drop(3, Reverse(x1))))), Square(3))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 85.13268156424581,
                "explored_percent_lambda": 8.282122905027933,
                "explored_percent_none": 6.585195530726257,
                "kept_percent_concrete": 83.55159769512834,
                "kept_percent_lambda": 16.44840230487166,
                "num_examples": 3,
                "num_explored_concrete": 12191,
                "num_explored_lambda": 1186,
                "num_explored_none": 943,
                "num_inputs": 1,
                "num_kept_concrete": 1595,
                "num_kept_lambda": 314,
                "num_values_explored": 14320,
                "num_values_kept": 1909,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 14320
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.603295309469104,
            "num_unique_values": 512,
            "solution": "Scanl1(lambda u1, u2: Subtract(Head(x2), 1), Map(lambda u1: Add(x1, -1), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 31.637372802960222,
                "explored_percent_lambda": 34.59759481961147,
                "explored_percent_none": 33.765032377428305,
                "kept_percent_concrete": 39.64143426294821,
                "kept_percent_lambda": 60.35856573705179,
                "num_examples": 2,
                "num_explored_concrete": 684,
                "num_explored_lambda": 748,
                "num_explored_none": 730,
                "num_inputs": 2,
                "num_kept_concrete": 199,
                "num_kept_lambda": 303,
                "num_values_explored": 2162,
                "num_values_kept": 502,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 367.75698058120906,
            "num_unique_values": 233,
            "solution": "Subtract(IntDivide(IntDivide(Subtract(x1, 3), Multiply(-1, 3)), 2), 3)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 26.608117730833136,
                "explored_percent_lambda": 11.132209826726799,
                "explored_percent_none": 62.25967244244006,
                "kept_percent_concrete": 85.26785714285714,
                "kept_percent_lambda": 14.732142857142858,
                "num_examples": 4,
                "num_explored_concrete": 1121,
                "num_explored_lambda": 469,
                "num_explored_none": 2623,
                "num_inputs": 1,
                "num_kept_concrete": 191,
                "num_kept_lambda": 33,
                "num_values_explored": 4213,
                "num_values_kept": 224,
                "temperature": 1.0,
                "total_num_restarts": 13,
                "total_num_values_explored": 207893
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 42.68556156009436,
            "num_unique_values": 1203,
            "solution": "Scanl1(lambda u1, u2: Add(-1, Add(-1, IntDivide(Last(x1), Head(x2)))), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 78.0370197542386,
                "explored_percent_lambda": 15.585627624825012,
                "explored_percent_none": 6.377352620936382,
                "kept_percent_concrete": 70.66219614417435,
                "kept_percent_lambda": 29.33780385582565,
                "num_examples": 2,
                "num_explored_concrete": 5017,
                "num_explored_lambda": 1002,
                "num_explored_none": 410,
                "num_inputs": 2,
                "num_kept_concrete": 843,
                "num_kept_lambda": 350,
                "num_values_explored": 6429,
                "num_values_kept": 1193,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 21740
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 425.3313788846135,
            "num_unique_values": 746,
            "solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 64.67554791577138,
                "explored_percent_lambda": 18.392780403953587,
                "explored_percent_none": 16.93167168027503,
                "kept_percent_concrete": 72.28260869565217,
                "kept_percent_lambda": 27.717391304347824,
                "num_examples": 5,
                "num_explored_concrete": 1505,
                "num_explored_lambda": 428,
                "num_explored_none": 394,
                "num_inputs": 2,
                "num_kept_concrete": 532,
                "num_kept_lambda": 204,
                "num_values_explored": 2327,
                "num_values_kept": 736,
                "temperature": 1.0,
                "total_num_restarts": 15,
                "total_num_values_explored": 218905
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.459645688533783,
            "num_unique_values": 538,
            "solution": "Scanl1(lambda u1, u2: Subtract(1, 4), Map(lambda u1: Subtract(Minimum(x1), 4), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 65.13761467889908,
                "explored_percent_lambda": 28.964613368283093,
                "explored_percent_none": 5.897771952817824,
                "kept_percent_concrete": 57.46691871455577,
                "kept_percent_lambda": 42.53308128544423,
                "num_examples": 3,
                "num_explored_concrete": 994,
                "num_explored_lambda": 442,
                "num_explored_none": 90,
                "num_inputs": 1,
                "num_kept_concrete": 304,
                "num_kept_lambda": 225,
                "num_values_explored": 1526,
                "num_values_kept": 529,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1526
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.2346830908209085,
            "num_unique_values": 783,
            "solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 69.30348258706468,
                "explored_percent_lambda": 22.238805970149254,
                "explored_percent_none": 8.457711442786069,
                "kept_percent_concrete": 72.83311772315653,
                "kept_percent_lambda": 27.166882276843467,
                "num_examples": 5,
                "num_explored_concrete": 1393,
                "num_explored_lambda": 447,
                "num_explored_none": 170,
                "num_inputs": 2,
                "num_kept_concrete": 563,
                "num_kept_lambda": 210,
                "num_values_explored": 2010,
                "num_values_kept": 773,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2010
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 215.13939416222274,
            "num_unique_values": 752,
            "solution": "Reverse(Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), Reverse(x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 44.1976679622432,
                "explored_percent_lambda": 46.196557468073294,
                "explored_percent_none": 9.60577456968351,
                "kept_percent_concrete": 31.628532974427994,
                "kept_percent_lambda": 68.371467025572,
                "num_examples": 2,
                "num_explored_concrete": 796,
                "num_explored_lambda": 832,
                "num_explored_none": 173,
                "num_inputs": 1,
                "num_kept_concrete": 235,
                "num_kept_lambda": 508,
                "num_values_explored": 1801,
                "num_values_kept": 743,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 90218
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8502048160880804,
            "num_unique_values": 250,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u1), x2, x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 26.495726495726494,
                "explored_percent_lambda": 39.173789173789174,
                "explored_percent_none": 34.33048433048433,
                "kept_percent_concrete": 49.37238493723849,
                "kept_percent_lambda": 50.62761506276151,
                "num_examples": 4,
                "num_explored_concrete": 186,
                "num_explored_lambda": 275,
                "num_explored_none": 241,
                "num_inputs": 3,
                "num_kept_concrete": 118,
                "num_kept_lambda": 121,
                "num_values_explored": 702,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 702
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.444874204695225,
            "num_unique_values": 743,
            "solution": "Map(lambda u1: Add(1, Multiply(3, IntDivide(Head(x1), 4))), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 40.99048233586062,
                "explored_percent_lambda": 26.52040651718019,
                "explored_percent_none": 32.48911114695919,
                "kept_percent_concrete": 38.14713896457766,
                "kept_percent_lambda": 61.85286103542234,
                "num_examples": 2,
                "num_explored_concrete": 2541,
                "num_explored_lambda": 1644,
                "num_explored_none": 2014,
                "num_inputs": 1,
                "num_kept_concrete": 280,
                "num_kept_lambda": 454,
                "num_values_explored": 6199,
                "num_values_kept": 734,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 6199
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.9035067111254,
            "num_unique_values": 2526,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 88.24309658748342,
                "explored_percent_lambda": 5.510671650789822,
                "explored_percent_none": 6.246231761726757,
                "kept_percent_concrete": 88.5089463220676,
                "kept_percent_lambda": 11.491053677932406,
                "num_examples": 4,
                "num_explored_concrete": 14636,
                "num_explored_lambda": 914,
                "num_explored_none": 1036,
                "num_inputs": 3,
                "num_kept_concrete": 2226,
                "num_kept_lambda": 289,
                "num_values_explored": 16586,
                "num_values_kept": 2515,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 332553
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 423.9285934548825,
            "num_unique_values": 475,
            "solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(Add(4, 4), (lambda v1: Add(4, v1))(v1)))(u2), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 32.3036187113857,
                "explored_percent_lambda": 49.86760812003531,
                "explored_percent_none": 17.828773168578994,
                "kept_percent_concrete": 27.896995708154506,
                "kept_percent_lambda": 72.1030042918455,
                "num_examples": 3,
                "num_explored_concrete": 366,
                "num_explored_lambda": 565,
                "num_explored_none": 202,
                "num_inputs": 1,
                "num_kept_concrete": 130,
                "num_kept_lambda": 336,
                "num_values_explored": 1133,
                "num_values_kept": 466,
                "temperature": 1.0,
                "total_num_restarts": 15,
                "total_num_values_explored": 173633
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3540540467948,
            "num_unique_values": 735,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.93623120575674,
                "explored_percent_lambda": 9.407359737904406,
                "explored_percent_none": 60.65640905633885,
                "kept_percent_concrete": 89.39393939393939,
                "kept_percent_lambda": 10.606060606060606,
                "num_examples": 4,
                "num_explored_concrete": 5117,
                "num_explored_lambda": 1608,
                "num_explored_none": 10368,
                "num_inputs": 1,
                "num_kept_concrete": 649,
                "num_kept_lambda": 77,
                "num_values_explored": 17093,
                "num_values_kept": 726,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 343168
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.276877695694566,
            "num_unique_values": 794,
            "solution": "Scanl1(lambda u1, u2: Square(Sum(Scanl1(lambda u1, u2: 4, x1))), Map(lambda u1: (lambda v1: Square(v1))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 63.34716459197787,
                "explored_percent_lambda": 26.210235131396956,
                "explored_percent_none": 10.442600276625173,
                "kept_percent_concrete": 46.87898089171974,
                "kept_percent_lambda": 53.12101910828026,
                "num_examples": 2,
                "num_explored_concrete": 1832,
                "num_explored_lambda": 758,
                "num_explored_none": 302,
                "num_inputs": 1,
                "num_kept_concrete": 368,
                "num_kept_lambda": 417,
                "num_values_explored": 2892,
                "num_values_kept": 785,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2892
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.778754042461514,
            "num_unique_values": 1736,
            "solution": "Map(lambda u1: If(IsOdd(Sum(x1)), Square(3), Sum(Drop(1, x1))), x3)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 80.6358626536668,
                "explored_percent_lambda": 11.640525646460365,
                "explored_percent_none": 7.723611699872827,
                "kept_percent_concrete": 74.20289855072464,
                "kept_percent_lambda": 25.797101449275363,
                "num_examples": 5,
                "num_explored_concrete": 9511,
                "num_explored_lambda": 1373,
                "num_explored_none": 911,
                "num_inputs": 3,
                "num_kept_concrete": 1280,
                "num_kept_lambda": 445,
                "num_values_explored": 11795,
                "num_values_kept": 1725,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 28362
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.475729539990425,
            "num_unique_values": 251,
            "solution": "Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), Take(3, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 33.531157270029674,
                "explored_percent_lambda": 40.85064292779426,
                "explored_percent_none": 25.618199802176065,
                "kept_percent_concrete": 34.439834024896264,
                "kept_percent_lambda": 65.56016597510373,
                "num_examples": 2,
                "num_explored_concrete": 339,
                "num_explored_lambda": 413,
                "num_explored_none": 259,
                "num_inputs": 2,
                "num_kept_concrete": 83,
                "num_kept_lambda": 158,
                "num_values_explored": 1011,
                "num_values_kept": 241,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1011
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 98.55269366316497,
            "num_unique_values": 660,
            "solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 39.190657251493754,
                "explored_percent_lambda": 34.68223791417708,
                "explored_percent_none": 26.12710483432917,
                "kept_percent_concrete": 31.797235023041473,
                "kept_percent_lambda": 68.20276497695852,
                "num_examples": 3,
                "num_explored_concrete": 1443,
                "num_explored_lambda": 1277,
                "num_explored_none": 962,
                "num_inputs": 1,
                "num_kept_concrete": 207,
                "num_kept_lambda": 444,
                "num_values_explored": 3682,
                "num_values_kept": 651,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 44837
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 584.0542230177671,
            "num_unique_values": 1839,
            "solution": "Min(IntDivide(Sum(x1), Head(x1)), Sum(Map(lambda u1: x2, Drop(2, x1))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 89.16316289163163,
                "explored_percent_lambda": 6.8086260680862605,
                "explored_percent_none": 4.028211040282111,
                "kept_percent_concrete": 86.2144420131291,
                "kept_percent_lambda": 13.785557986870897,
                "num_examples": 5,
                "num_explored_concrete": 6574,
                "num_explored_lambda": 502,
                "num_explored_none": 297,
                "num_inputs": 3,
                "num_kept_concrete": 1576,
                "num_kept_lambda": 252,
                "num_values_explored": 7373,
                "num_values_kept": 1828,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 323738
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.200551066547632,
            "num_unique_values": 740,
            "solution": "Scanl1(lambda u1, u2: Min(-1, IntDivide(x1, Head(x3))), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 61.44473455178416,
                "explored_percent_lambda": 12.387583405860168,
                "explored_percent_none": 26.167682042355672,
                "kept_percent_concrete": 71.60493827160494,
                "kept_percent_lambda": 28.395061728395063,
                "num_examples": 4,
                "num_explored_concrete": 2118,
                "num_explored_lambda": 427,
                "num_explored_none": 902,
                "num_inputs": 3,
                "num_kept_concrete": 522,
                "num_kept_lambda": 207,
                "num_values_explored": 3447,
                "num_values_kept": 729,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3447
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.630461525171995,
            "num_unique_values": 525,
            "solution": "Scanl1(lambda u1, u2: 0, ZipWith(lambda u1, u2: Subtract(4, Access(1, x1)), x1, Take(-1, x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 47.484276729559745,
                "explored_percent_lambda": 36.729559748427675,
                "explored_percent_none": 15.786163522012579,
                "kept_percent_concrete": 50.1937984496124,
                "kept_percent_lambda": 49.8062015503876,
                "num_examples": 2,
                "num_explored_concrete": 755,
                "num_explored_lambda": 584,
                "num_explored_none": 251,
                "num_inputs": 1,
                "num_kept_concrete": 259,
                "num_kept_lambda": 257,
                "num_values_explored": 1590,
                "num_values_kept": 516,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1590
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.63268834911287,
            "num_unique_values": 768,
            "solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 75.56366047745358,
                "explored_percent_lambda": 14.058355437665783,
                "explored_percent_none": 10.377984084880637,
                "kept_percent_concrete": 77.30870712401055,
                "kept_percent_lambda": 22.691292875989447,
                "num_examples": 3,
                "num_explored_concrete": 2279,
                "num_explored_lambda": 424,
                "num_explored_none": 313,
                "num_inputs": 2,
                "num_kept_concrete": 586,
                "num_kept_lambda": 172,
                "num_values_explored": 3016,
                "num_values_kept": 758,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 177967
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3672104254365,
            "num_unique_values": 784,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.969524412105876,
                "explored_percent_lambda": 6.142570916376674,
                "explored_percent_none": 60.887904671517454,
                "kept_percent_concrete": 93.66925064599484,
                "kept_percent_lambda": 6.330749354005168,
                "num_examples": 4,
                "num_explored_concrete": 6253,
                "num_explored_lambda": 1165,
                "num_explored_none": 11548,
                "num_inputs": 2,
                "num_kept_concrete": 725,
                "num_kept_lambda": 49,
                "num_values_explored": 18966,
                "num_values_kept": 774,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 375691
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.58997027762234,
            "num_unique_values": 589,
            "solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Multiply(2, v1))(u1), x1))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 57.142857142857146,
                "explored_percent_lambda": 28.71500358937545,
                "explored_percent_none": 14.142139267767408,
                "kept_percent_concrete": 73.44827586206897,
                "kept_percent_lambda": 26.551724137931036,
                "num_examples": 5,
                "num_explored_concrete": 796,
                "num_explored_lambda": 400,
                "num_explored_none": 197,
                "num_inputs": 1,
                "num_kept_concrete": 426,
                "num_kept_lambda": 154,
                "num_values_explored": 1393,
                "num_values_kept": 580,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 173068
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 154.55849660001695,
            "num_unique_values": 454,
            "solution": "Subtract(0, Square(Multiply(Subtract(-1, x2), Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 60.24636058230683,
                "explored_percent_lambda": 9.518477043673013,
                "explored_percent_none": 30.235162374020156,
                "kept_percent_concrete": 86.03603603603604,
                "kept_percent_lambda": 13.963963963963964,
                "num_examples": 4,
                "num_explored_concrete": 1614,
                "num_explored_lambda": 255,
                "num_explored_none": 810,
                "num_inputs": 2,
                "num_kept_concrete": 382,
                "num_kept_lambda": 62,
                "num_values_explored": 2679,
                "num_values_kept": 444,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 93303
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 235.1436150930822,
            "num_unique_values": 650,
            "solution": "Add(4, Multiply(4, Multiply(3, Min(1, Subtract(2, Square(x1))))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 27.50791618944957,
                "explored_percent_lambda": 10.105773765411305,
                "explored_percent_none": 62.386310045139126,
                "kept_percent_concrete": 88.76755070202807,
                "kept_percent_lambda": 11.232449297971918,
                "num_examples": 3,
                "num_explored_concrete": 4083,
                "num_explored_lambda": 1500,
                "num_explored_none": 9260,
                "num_inputs": 1,
                "num_kept_concrete": 569,
                "num_kept_lambda": 72,
                "num_values_explored": 14843,
                "num_values_kept": 641,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 139728
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.3722669072449207,
            "num_unique_values": 487,
            "solution": "Map(lambda u1: Add(2, Square(Add(3, 4))), Drop(3, Take(4, x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 51.847437425506556,
                "explored_percent_lambda": 24.97020262216925,
                "explored_percent_none": 23.182359952324195,
                "kept_percent_concrete": 57.65199161425576,
                "kept_percent_lambda": 42.34800838574424,
                "num_examples": 3,
                "num_explored_concrete": 870,
                "num_explored_lambda": 419,
                "num_explored_none": 389,
                "num_inputs": 2,
                "num_kept_concrete": 275,
                "num_kept_lambda": 202,
                "num_values_explored": 1678,
                "num_values_kept": 477,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1678
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.10468838736415,
            "num_unique_values": 504,
            "solution": "Filter(lambda u1: IsEven(Last(x1)), Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 43.28644501278772,
                "explored_percent_lambda": 41.94373401534527,
                "explored_percent_none": 14.769820971867007,
                "kept_percent_concrete": 44.44444444444444,
                "kept_percent_lambda": 55.55555555555556,
                "num_examples": 5,
                "num_explored_concrete": 677,
                "num_explored_lambda": 656,
                "num_explored_none": 231,
                "num_inputs": 1,
                "num_kept_concrete": 220,
                "num_kept_lambda": 275,
                "num_values_explored": 1564,
                "num_values_kept": 495,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 143038
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 41.885853657498956,
            "num_unique_values": 1257,
            "solution": "Multiply(3, IntDivide(Max(-1, Max(Sum(x1), Last(x1))), 3))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 73.93959399240799,
                "explored_percent_lambda": 12.84040270671728,
                "explored_percent_none": 13.220003300874732,
                "kept_percent_concrete": 77.24358974358974,
                "kept_percent_lambda": 22.756410256410255,
                "num_examples": 5,
                "num_explored_concrete": 4480,
                "num_explored_lambda": 778,
                "num_explored_none": 801,
                "num_inputs": 1,
                "num_kept_concrete": 964,
                "num_kept_lambda": 284,
                "num_values_explored": 6059,
                "num_values_kept": 1248,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 21972
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.657365515828133,
            "num_unique_values": 705,
            "solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 58.03048065650645,
                "explored_percent_lambda": 20.328253223915592,
                "explored_percent_none": 21.64126611957796,
                "kept_percent_concrete": 63.36206896551724,
                "kept_percent_lambda": 36.63793103448276,
                "num_examples": 2,
                "num_explored_concrete": 2475,
                "num_explored_lambda": 867,
                "num_explored_none": 923,
                "num_inputs": 1,
                "num_kept_concrete": 441,
                "num_kept_lambda": 255,
                "num_values_explored": 4265,
                "num_values_kept": 696,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4265
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 13.553567180410028,
            "num_unique_values": 1264,
            "solution": "Scanl1(lambda u1, u2: Add(3, Max(Head(x1), Square(4))), Take(2, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 61.33963750985028,
                "explored_percent_lambda": 21.513002364066192,
                "explored_percent_none": 17.14736012608353,
                "kept_percent_concrete": 63.02788844621514,
                "kept_percent_lambda": 36.97211155378486,
                "num_examples": 4,
                "num_explored_concrete": 3892,
                "num_explored_lambda": 1365,
                "num_explored_none": 1088,
                "num_inputs": 1,
                "num_kept_concrete": 791,
                "num_kept_lambda": 464,
                "num_values_explored": 6345,
                "num_values_kept": 1255,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 6345
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.6578563600779,
            "num_unique_values": 1176,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.915471350770886,
                "explored_percent_lambda": 26.048937639027383,
                "explored_percent_none": 28.035591010201735,
                "kept_percent_concrete": 35.56126820908312,
                "kept_percent_lambda": 64.43873179091688,
                "num_examples": 2,
                "num_explored_concrete": 5986,
                "num_explored_lambda": 3396,
                "num_explored_none": 3655,
                "num_inputs": 1,
                "num_kept_concrete": 415,
                "num_kept_lambda": 752,
                "num_values_explored": 13037,
                "num_values_kept": 1167,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 263434
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.581563673913479,
            "num_unique_values": 450,
            "solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 37.645275391611925,
                "explored_percent_lambda": 37.645275391611925,
                "explored_percent_none": 24.70944921677615,
                "kept_percent_concrete": 28.798185941043084,
                "kept_percent_lambda": 71.20181405895691,
                "num_examples": 2,
                "num_explored_concrete": 745,
                "num_explored_lambda": 745,
                "num_explored_none": 489,
                "num_inputs": 1,
                "num_kept_concrete": 127,
                "num_kept_lambda": 314,
                "num_values_explored": 1979,
                "num_values_kept": 441,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1979
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3403766192496,
            "num_unique_values": 653,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.93345873501058,
                "explored_percent_lambda": 10.909945920526686,
                "explored_percent_none": 53.15659534446273,
                "kept_percent_concrete": 84.00621118012423,
                "kept_percent_lambda": 15.993788819875776,
                "num_examples": 2,
                "num_explored_concrete": 6113,
                "num_explored_lambda": 1856,
                "num_explored_none": 9043,
                "num_inputs": 1,
                "num_kept_concrete": 541,
                "num_kept_lambda": 103,
                "num_values_explored": 17012,
                "num_values_kept": 644,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 337072
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.369663529098,
            "num_unique_values": 729,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.746454556665434,
                "explored_percent_lambda": 14.132445431002589,
                "explored_percent_none": 52.12110001233198,
                "kept_percent_concrete": 81.52777777777777,
                "kept_percent_lambda": 18.47222222222222,
                "num_examples": 2,
                "num_explored_concrete": 5473,
                "num_explored_lambda": 2292,
                "num_explored_none": 8453,
                "num_inputs": 1,
                "num_kept_concrete": 587,
                "num_kept_lambda": 133,
                "num_values_explored": 16218,
                "num_values_kept": 720,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 313405
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.612322010099888,
            "num_unique_values": 463,
            "solution": "Subtract(If(IsEven(IntDivide(x1, 3)), 0, Add(x1, Square(3))), 4)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 25.54675493557158,
                "explored_percent_lambda": 20.55798557749143,
                "explored_percent_none": 53.89525948693699,
                "kept_percent_concrete": 64.23841059602648,
                "kept_percent_lambda": 35.76158940397351,
                "num_examples": 2,
                "num_explored_concrete": 2161,
                "num_explored_lambda": 1739,
                "num_explored_none": 4559,
                "num_inputs": 2,
                "num_kept_concrete": 291,
                "num_kept_lambda": 162,
                "num_values_explored": 8459,
                "num_values_kept": 453,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 8459
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3796843048185,
            "num_unique_values": 749,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.264723740133576,
                "explored_percent_lambda": 13.485124468731026,
                "explored_percent_none": 54.250151791135394,
                "kept_percent_concrete": 74.42489851150204,
                "kept_percent_lambda": 25.57510148849797,
                "num_examples": 2,
                "num_explored_concrete": 5314,
                "num_explored_lambda": 2221,
                "num_explored_none": 8935,
                "num_inputs": 2,
                "num_kept_concrete": 550,
                "num_kept_lambda": 189,
                "num_values_explored": 16470,
                "num_values_kept": 739,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 323281
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3614370189607,
            "num_unique_values": 708,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.598269314573866,
                "explored_percent_lambda": 15.239992529415426,
                "explored_percent_none": 54.161738156010706,
                "kept_percent_concrete": 75.78796561604585,
                "kept_percent_lambda": 24.212034383954155,
                "num_examples": 2,
                "num_explored_concrete": 4915,
                "num_explored_lambda": 2448,
                "num_explored_none": 8700,
                "num_inputs": 2,
                "num_kept_concrete": 529,
                "num_kept_lambda": 169,
                "num_values_explored": 16063,
                "num_values_kept": 698,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 315610
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3515317607671,
            "num_unique_values": 675,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.611605464343903,
                "explored_percent_lambda": 13.585662363704724,
                "explored_percent_none": 55.80273217195137,
                "kept_percent_concrete": 73.6842105263158,
                "kept_percent_lambda": 26.31578947368421,
                "num_examples": 2,
                "num_explored_concrete": 4885,
                "num_explored_lambda": 2168,
                "num_explored_none": 8905,
                "num_inputs": 2,
                "num_kept_concrete": 490,
                "num_kept_lambda": 175,
                "num_values_explored": 15958,
                "num_values_kept": 665,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 318790
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.6771946754307,
            "num_unique_values": 1182,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.60871138123146,
                "explored_percent_lambda": 25.294841183705955,
                "explored_percent_none": 27.096447435062586,
                "kept_percent_concrete": 36.65814151747656,
                "kept_percent_lambda": 63.34185848252344,
                "num_examples": 2,
                "num_explored_concrete": 6580,
                "num_explored_lambda": 3496,
                "num_explored_none": 3745,
                "num_inputs": 1,
                "num_kept_concrete": 430,
                "num_kept_lambda": 743,
                "num_values_explored": 13821,
                "num_values_kept": 1173,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 272745
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 23.24220617301762,
            "num_unique_values": 541,
            "solution": "Add(3, Max(Add(x1, x1), Multiply(Square(4), Add(3, 4))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 31.86270844238391,
                "explored_percent_lambda": 11.71764002093771,
                "explored_percent_none": 56.41965153667838,
                "kept_percent_concrete": 90.22556390977444,
                "kept_percent_lambda": 9.774436090225564,
                "num_examples": 3,
                "num_explored_concrete": 4261,
                "num_explored_lambda": 1567,
                "num_explored_none": 7545,
                "num_inputs": 1,
                "num_kept_concrete": 480,
                "num_kept_lambda": 52,
                "num_values_explored": 13373,
                "num_values_kept": 532,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 13373
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.89
}