{
    "num_tasks": 100,
    "num_tasks_solved": 81,
    "results": [
        {
            "elapsed_time": 1.93993316963315,
            "num_unique_values": 217,
            "solution": "Map(lambda u1: 1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 21.246458923512748,
                "explored_percent_lambda": 55.94900849858357,
                "explored_percent_none": 22.804532577903682,
                "kept_percent_concrete": 32.21153846153846,
                "kept_percent_lambda": 67.78846153846153,
                "num_examples": 2,
                "num_explored_concrete": 150,
                "num_explored_lambda": 395,
                "num_explored_none": 161,
                "num_inputs": 1,
                "num_kept_concrete": 67,
                "num_kept_lambda": 141,
                "num_values_explored": 706,
                "num_values_kept": 208,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8098814450204372,
            "num_unique_values": 256,
            "solution": "Scanl1(lambda u1, u2: x2, Map(lambda u1: (lambda v1: Max(v1, IntDivide(4, x2)))(u1), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 32.84182305630027,
                "explored_percent_lambda": 43.16353887399464,
                "explored_percent_none": 23.994638069705093,
                "kept_percent_concrete": 59.75609756097561,
                "kept_percent_lambda": 40.24390243902439,
                "num_examples": 3,
                "num_explored_concrete": 245,
                "num_explored_lambda": 322,
                "num_explored_none": 179,
                "num_inputs": 2,
                "num_kept_concrete": 147,
                "num_kept_lambda": 99,
                "num_values_explored": 746,
                "num_values_kept": 246,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.004496080800891,
            "num_unique_values": 163,
            "solution": "Access(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 14.088397790055248,
                "explored_percent_lambda": 67.67955801104972,
                "explored_percent_none": 18.23204419889503,
                "kept_percent_concrete": 26.623376623376622,
                "kept_percent_lambda": 73.37662337662337,
                "num_examples": 5,
                "num_explored_concrete": 51,
                "num_explored_lambda": 245,
                "num_explored_none": 66,
                "num_inputs": 1,
                "num_kept_concrete": 41,
                "num_kept_lambda": 113,
                "num_values_explored": 362,
                "num_values_kept": 154,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0014593359082937,
            "num_unique_values": 155,
            "solution": "Drop(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 12.359550561797754,
                "explored_percent_lambda": 67.97752808988764,
                "explored_percent_none": 19.662921348314608,
                "kept_percent_concrete": 21.91780821917808,
                "kept_percent_lambda": 78.08219178082192,
                "num_examples": 5,
                "num_explored_concrete": 44,
                "num_explored_lambda": 242,
                "num_explored_none": 70,
                "num_inputs": 1,
                "num_kept_concrete": 32,
                "num_kept_lambda": 114,
                "num_values_explored": 356,
                "num_values_kept": 146,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8588027693331242,
            "num_unique_values": 143,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 24.585635359116022,
                "explored_percent_lambda": 44.751381215469614,
                "explored_percent_none": 30.662983425414364,
                "kept_percent_concrete": 43.609022556390975,
                "kept_percent_lambda": 56.390977443609025,
                "num_examples": 4,
                "num_explored_concrete": 89,
                "num_explored_lambda": 162,
                "num_explored_none": 111,
                "num_inputs": 2,
                "num_kept_concrete": 58,
                "num_kept_lambda": 75,
                "num_values_explored": 362,
                "num_values_kept": 133,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9653281345963478,
            "num_unique_values": 153,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 7.267441860465116,
                "explored_percent_lambda": 73.25581395348837,
                "explored_percent_none": 19.476744186046513,
                "kept_percent_concrete": 15.384615384615385,
                "kept_percent_lambda": 84.61538461538461,
                "num_examples": 4,
                "num_explored_concrete": 25,
                "num_explored_lambda": 252,
                "num_explored_none": 67,
                "num_inputs": 2,
                "num_kept_concrete": 22,
                "num_kept_lambda": 121,
                "num_values_explored": 344,
                "num_values_kept": 143,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.029312839731574,
            "num_unique_values": 151,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 12.32876712328767,
                "explored_percent_lambda": 74.52054794520548,
                "explored_percent_none": 13.150684931506849,
                "kept_percent_concrete": 16.197183098591548,
                "kept_percent_lambda": 83.80281690140845,
                "num_examples": 2,
                "num_explored_concrete": 45,
                "num_explored_lambda": 272,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 23,
                "num_kept_lambda": 119,
                "num_values_explored": 365,
                "num_values_kept": 142,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0558600798249245,
            "num_unique_values": 152,
            "solution": "Drop(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 10.497237569060774,
                "explored_percent_lambda": 70.1657458563536,
                "explored_percent_none": 19.337016574585636,
                "kept_percent_concrete": 12.587412587412587,
                "kept_percent_lambda": 87.41258741258741,
                "num_examples": 2,
                "num_explored_concrete": 38,
                "num_explored_lambda": 254,
                "num_explored_none": 70,
                "num_inputs": 1,
                "num_kept_concrete": 18,
                "num_kept_lambda": 125,
                "num_values_explored": 362,
                "num_values_kept": 143,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.960502127185464,
            "num_unique_values": 255,
            "solution": "Scanl1(lambda u1, u2: 3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 22.63083451202263,
                "explored_percent_lambda": 47.24186704384724,
                "explored_percent_none": 30.127298444130126,
                "kept_percent_concrete": 30.48780487804878,
                "kept_percent_lambda": 69.51219512195122,
                "num_examples": 4,
                "num_explored_concrete": 160,
                "num_explored_lambda": 334,
                "num_explored_none": 213,
                "num_inputs": 1,
                "num_kept_concrete": 75,
                "num_kept_lambda": 171,
                "num_values_explored": 707,
                "num_values_kept": 246,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9126576371490955,
            "num_unique_values": 163,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 32.66832917705736,
                "explored_percent_lambda": 38.15461346633416,
                "explored_percent_none": 29.17705735660848,
                "kept_percent_concrete": 52.94117647058823,
                "kept_percent_lambda": 47.05882352941177,
                "num_examples": 5,
                "num_explored_concrete": 131,
                "num_explored_lambda": 153,
                "num_explored_none": 117,
                "num_inputs": 2,
                "num_kept_concrete": 81,
                "num_kept_lambda": 72,
                "num_values_explored": 401,
                "num_values_kept": 153,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.539663651958108,
            "num_unique_values": 378,
            "solution": "Head(Map(lambda u1: (lambda v1: IntDivide(v1, x1))(u1), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 49.46325350949628,
                "explored_percent_lambda": 21.139554087530968,
                "explored_percent_none": 29.39719240297275,
                "kept_percent_concrete": 67.3913043478261,
                "kept_percent_lambda": 32.608695652173914,
                "num_examples": 4,
                "num_explored_concrete": 599,
                "num_explored_lambda": 256,
                "num_explored_none": 356,
                "num_inputs": 2,
                "num_kept_concrete": 248,
                "num_kept_lambda": 120,
                "num_values_explored": 1211,
                "num_values_kept": 368,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1881717722862959,
            "num_unique_values": 70,
            "solution": "Max(x1, Square(4))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 100.0,
                "explored_percent_lambda": 0.0,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 100.0,
                "kept_percent_lambda": 0.0,
                "num_examples": 2,
                "num_explored_concrete": 90,
                "num_explored_lambda": 0,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 61,
                "num_kept_lambda": 0,
                "num_values_explored": 90,
                "num_values_kept": 61,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7902596350759268,
            "num_unique_values": 291,
            "solution": "Multiply(4, Minimum(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 28.631284916201118,
                "explored_percent_lambda": 49.44134078212291,
                "explored_percent_none": 21.92737430167598,
                "kept_percent_concrete": 55.319148936170215,
                "kept_percent_lambda": 44.680851063829785,
                "num_examples": 4,
                "num_explored_concrete": 205,
                "num_explored_lambda": 354,
                "num_explored_none": 157,
                "num_inputs": 1,
                "num_kept_concrete": 156,
                "num_kept_lambda": 126,
                "num_values_explored": 716,
                "num_values_kept": 282,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.448645131662488,
            "num_unique_values": 262,
            "solution": "Subtract(4, Sum(Drop(2, x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 41.8848167539267,
                "explored_percent_lambda": 38.7434554973822,
                "explored_percent_none": 19.3717277486911,
                "kept_percent_concrete": 49.40711462450593,
                "kept_percent_lambda": 50.59288537549407,
                "num_examples": 2,
                "num_explored_concrete": 400,
                "num_explored_lambda": 370,
                "num_explored_none": 185,
                "num_inputs": 1,
                "num_kept_concrete": 125,
                "num_kept_lambda": 128,
                "num_values_explored": 955,
                "num_values_kept": 253,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.3843688033521175,
            "num_unique_values": 265,
            "solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 37.5,
                "explored_percent_lambda": 43.65384615384615,
                "explored_percent_none": 18.846153846153847,
                "kept_percent_concrete": 52.549019607843135,
                "kept_percent_lambda": 47.450980392156865,
                "num_examples": 5,
                "num_explored_concrete": 195,
                "num_explored_lambda": 227,
                "num_explored_none": 98,
                "num_inputs": 2,
                "num_kept_concrete": 134,
                "num_kept_lambda": 121,
                "num_values_explored": 520,
                "num_values_kept": 255,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.668430022895336,
            "num_unique_values": 472,
            "solution": "Sum(Map(lambda u1: (lambda v1: Subtract(1, v1))(u1), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 37.28287841191067,
                "explored_percent_lambda": 32.07196029776675,
                "explored_percent_none": 30.64516129032258,
                "kept_percent_concrete": 48.16414686825054,
                "kept_percent_lambda": 51.83585313174946,
                "num_examples": 3,
                "num_explored_concrete": 601,
                "num_explored_lambda": 517,
                "num_explored_none": 494,
                "num_inputs": 1,
                "num_kept_concrete": 223,
                "num_kept_lambda": 240,
                "num_values_explored": 1612,
                "num_values_kept": 463,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8448384888470173,
            "num_unique_values": 261,
            "solution": "Scanl1(lambda u1, u2: Sum(Sort(Take(3, x2))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 27.03488372093023,
                "explored_percent_lambda": 52.18023255813954,
                "explored_percent_none": 20.78488372093023,
                "kept_percent_concrete": 46.21513944223108,
                "kept_percent_lambda": 53.78486055776892,
                "num_examples": 2,
                "num_explored_concrete": 186,
                "num_explored_lambda": 359,
                "num_explored_none": 143,
                "num_inputs": 2,
                "num_kept_concrete": 116,
                "num_kept_lambda": 135,
                "num_values_explored": 688,
                "num_values_kept": 251,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8176041077822447,
            "num_unique_values": 249,
            "solution": "ZipWith(lambda u1, u2: (lambda v1, v2: Min(v1, v2))(u1, u2), Sort(x1), Drop(1, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 21.865443425076453,
                "explored_percent_lambda": 46.17737003058104,
                "explored_percent_none": 31.95718654434251,
                "kept_percent_concrete": 25.833333333333332,
                "kept_percent_lambda": 74.16666666666667,
                "num_examples": 3,
                "num_explored_concrete": 143,
                "num_explored_lambda": 302,
                "num_explored_none": 209,
                "num_inputs": 1,
                "num_kept_concrete": 62,
                "num_kept_lambda": 178,
                "num_values_explored": 654,
                "num_values_kept": 240,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.3451612573117018,
            "num_unique_values": 197,
            "solution": "Sum(Reverse(Drop(x1, Take(4, x2))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 24.262295081967213,
                "explored_percent_lambda": 39.67213114754098,
                "explored_percent_none": 36.0655737704918,
                "kept_percent_concrete": 52.94117647058823,
                "kept_percent_lambda": 47.05882352941177,
                "num_examples": 3,
                "num_explored_concrete": 148,
                "num_explored_lambda": 242,
                "num_explored_none": 220,
                "num_inputs": 2,
                "num_kept_concrete": 99,
                "num_kept_lambda": 88,
                "num_values_explored": 610,
                "num_values_kept": 187,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9348129741847515,
            "num_unique_values": 209,
            "solution": "Map(lambda u1: Head(x2), Drop(2, x2))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 21.618357487922705,
                "explored_percent_lambda": 53.38164251207729,
                "explored_percent_none": 25.0,
                "kept_percent_concrete": 24.623115577889447,
                "kept_percent_lambda": 75.37688442211055,
                "num_examples": 2,
                "num_explored_concrete": 179,
                "num_explored_lambda": 442,
                "num_explored_none": 207,
                "num_inputs": 2,
                "num_kept_concrete": 49,
                "num_kept_lambda": 150,
                "num_values_explored": 828,
                "num_values_kept": 199,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.2277852185070515,
            "num_unique_values": 251,
            "solution": "Scanl1(lambda u1, u2: Head(x2), ZipWith(lambda u1, u2: Last(x2), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 28.914285714285715,
                "explored_percent_lambda": 38.17142857142857,
                "explored_percent_none": 32.91428571428571,
                "kept_percent_concrete": 42.32365145228216,
                "kept_percent_lambda": 57.67634854771784,
                "num_examples": 3,
                "num_explored_concrete": 253,
                "num_explored_lambda": 334,
                "num_explored_none": 288,
                "num_inputs": 2,
                "num_kept_concrete": 102,
                "num_kept_lambda": 139,
                "num_values_explored": 875,
                "num_values_kept": 241,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.061544632539153,
            "num_unique_values": 613,
            "solution": "Min(Add(1, 4), Add(Minimum(x1), Count(lambda u1: (lambda v1: IsEven(v1))(u1), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 60.76146076146076,
                "explored_percent_lambda": 25.485625485625487,
                "explored_percent_none": 13.752913752913752,
                "kept_percent_concrete": 71.80762852404644,
                "kept_percent_lambda": 28.192371475953564,
                "num_examples": 4,
                "num_explored_concrete": 782,
                "num_explored_lambda": 328,
                "num_explored_none": 177,
                "num_inputs": 2,
                "num_kept_concrete": 433,
                "num_kept_lambda": 170,
                "num_values_explored": 1287,
                "num_values_kept": 603,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.7047090623527765,
            "num_unique_values": 721,
            "solution": "Sum(Map(lambda u1: (lambda v1: IntDivide(Add(3, 4), v1))(u1), Take(2, x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 67.98878205128206,
                "explored_percent_lambda": 20.272435897435898,
                "explored_percent_none": 11.738782051282051,
                "kept_percent_concrete": 71.62921348314607,
                "kept_percent_lambda": 28.370786516853933,
                "num_examples": 5,
                "num_explored_concrete": 1697,
                "num_explored_lambda": 506,
                "num_explored_none": 293,
                "num_inputs": 1,
                "num_kept_concrete": 510,
                "num_kept_lambda": 202,
                "num_values_explored": 2496,
                "num_values_kept": 712,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.6131624653935432,
            "num_unique_values": 545,
            "solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), Sort(Scanl1(lambda u1, u2: (lambda v1: Square(v1))(u2), x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 56.75675675675676,
                "explored_percent_lambda": 34.63463463463464,
                "explored_percent_none": 8.608608608608609,
                "kept_percent_concrete": 65.04672897196262,
                "kept_percent_lambda": 34.953271028037385,
                "num_examples": 5,
                "num_explored_concrete": 567,
                "num_explored_lambda": 346,
                "num_explored_none": 86,
                "num_inputs": 2,
                "num_kept_concrete": 348,
                "num_kept_lambda": 187,
                "num_values_explored": 999,
                "num_values_kept": 535,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.0497126914560795,
            "num_unique_values": 245,
            "solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 29.368932038834952,
                "explored_percent_lambda": 44.05339805825243,
                "explored_percent_none": 26.57766990291262,
                "kept_percent_concrete": 49.787234042553195,
                "kept_percent_lambda": 50.212765957446805,
                "num_examples": 2,
                "num_explored_concrete": 242,
                "num_explored_lambda": 363,
                "num_explored_none": 219,
                "num_inputs": 2,
                "num_kept_concrete": 117,
                "num_kept_lambda": 118,
                "num_values_explored": 824,
                "num_values_kept": 235,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.1120166257023811,
            "num_unique_values": 152,
            "solution": "Drop(IntDivide(x1, Add(x3, 2)), x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 37.02970297029703,
                "explored_percent_lambda": 35.04950495049505,
                "explored_percent_none": 27.92079207920792,
                "kept_percent_concrete": 48.226950354609926,
                "kept_percent_lambda": 51.773049645390074,
                "num_examples": 2,
                "num_explored_concrete": 187,
                "num_explored_lambda": 177,
                "num_explored_none": 141,
                "num_inputs": 3,
                "num_kept_concrete": 68,
                "num_kept_lambda": 73,
                "num_values_explored": 505,
                "num_values_kept": 141,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.87916656397283,
            "num_unique_values": 1366,
            "solution": "Head(ZipWith(lambda u1, u2: (lambda v1: Subtract(Last(x2), v1))(u2), x2, Reverse(x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 76.64804469273743,
                "explored_percent_lambda": 12.327746741154563,
                "explored_percent_none": 11.024208566108008,
                "kept_percent_concrete": 80.08849557522124,
                "kept_percent_lambda": 19.911504424778762,
                "num_examples": 5,
                "num_explored_concrete": 4116,
                "num_explored_lambda": 662,
                "num_explored_none": 592,
                "num_inputs": 2,
                "num_kept_concrete": 1086,
                "num_kept_lambda": 270,
                "num_values_explored": 5370,
                "num_values_kept": 1356,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.2784283980727196,
            "num_unique_values": 133,
            "solution": "Add(4, IntDivide(Subtract(2, x1), 4))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 21.558441558441558,
                "explored_percent_lambda": 11.220779220779221,
                "explored_percent_none": 67.22077922077922,
                "kept_percent_concrete": 90.3225806451613,
                "kept_percent_lambda": 9.67741935483871,
                "num_examples": 5,
                "num_explored_concrete": 415,
                "num_explored_lambda": 216,
                "num_explored_none": 1294,
                "num_inputs": 1,
                "num_kept_concrete": 112,
                "num_kept_lambda": 12,
                "num_values_explored": 1925,
                "num_values_kept": 124,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5846148449927568,
            "num_unique_values": 225,
            "solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 19.49685534591195,
                "explored_percent_lambda": 59.905660377358494,
                "explored_percent_none": 20.59748427672956,
                "kept_percent_concrete": 37.5,
                "kept_percent_lambda": 62.5,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 381,
                "num_explored_none": 131,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 135,
                "num_values_explored": 636,
                "num_values_kept": 216,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.2460432089865208,
            "num_unique_values": 666,
            "solution": "Head(ZipWith(lambda u1, u2: (lambda v1: Subtract(v1, Square(x1)))(u2), x2, Reverse(x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 74.79312539783578,
                "explored_percent_lambda": 15.977084659452577,
                "explored_percent_none": 9.22978994271165,
                "kept_percent_concrete": 80.64024390243902,
                "kept_percent_lambda": 19.359756097560975,
                "num_examples": 5,
                "num_explored_concrete": 1175,
                "num_explored_lambda": 251,
                "num_explored_none": 145,
                "num_inputs": 2,
                "num_kept_concrete": 529,
                "num_kept_lambda": 127,
                "num_values_explored": 1571,
                "num_values_kept": 656,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.055237613618374,
            "num_unique_values": 538,
            "solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), Map(lambda u1: Head(x2), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 56.81655960028551,
                "explored_percent_lambda": 30.47822983583155,
                "explored_percent_none": 12.705210563882941,
                "kept_percent_concrete": 65.15151515151516,
                "kept_percent_lambda": 34.84848484848485,
                "num_examples": 3,
                "num_explored_concrete": 796,
                "num_explored_lambda": 427,
                "num_explored_none": 178,
                "num_inputs": 2,
                "num_kept_concrete": 344,
                "num_kept_lambda": 184,
                "num_values_explored": 1401,
                "num_values_kept": 528,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6197084188461304,
            "num_unique_values": 180,
            "solution": "Max(Square(4), Multiply(Square(x1), Add(x1, 3)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 24.939817043813193,
                "explored_percent_lambda": 11.844005777563794,
                "explored_percent_none": 63.21617717862301,
                "kept_percent_concrete": 85.96491228070175,
                "kept_percent_lambda": 14.035087719298245,
                "num_examples": 2,
                "num_explored_concrete": 518,
                "num_explored_lambda": 246,
                "num_explored_none": 1313,
                "num_inputs": 1,
                "num_kept_concrete": 147,
                "num_kept_lambda": 24,
                "num_values_explored": 2077,
                "num_values_kept": 171,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9458266105502844,
            "num_unique_values": 250,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 35.13513513513514,
                "explored_percent_lambda": 41.05534105534105,
                "explored_percent_none": 23.80952380952381,
                "kept_percent_concrete": 53.75,
                "kept_percent_lambda": 46.25,
                "num_examples": 5,
                "num_explored_concrete": 273,
                "num_explored_lambda": 319,
                "num_explored_none": 185,
                "num_inputs": 2,
                "num_kept_concrete": 129,
                "num_kept_lambda": 111,
                "num_values_explored": 777,
                "num_values_kept": 240,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.4594431333243847,
            "num_unique_values": 582,
            "solution": "Square(Min(Last(x2), Sum(Take(Last(x1), x1))))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 60.53130929791271,
                "explored_percent_lambda": 27.514231499051235,
                "explored_percent_none": 11.954459203036054,
                "kept_percent_concrete": 65.9090909090909,
                "kept_percent_lambda": 34.09090909090909,
                "num_examples": 3,
                "num_explored_concrete": 957,
                "num_explored_lambda": 435,
                "num_explored_none": 189,
                "num_inputs": 2,
                "num_kept_concrete": 377,
                "num_kept_lambda": 195,
                "num_values_explored": 1581,
                "num_values_kept": 572,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8637894373387098,
            "num_unique_values": 268,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 25.19083969465649,
                "explored_percent_lambda": 55.87786259541985,
                "explored_percent_none": 18.931297709923665,
                "kept_percent_concrete": 36.67953667953668,
                "kept_percent_lambda": 63.32046332046332,
                "num_examples": 2,
                "num_explored_concrete": 165,
                "num_explored_lambda": 366,
                "num_explored_none": 124,
                "num_inputs": 1,
                "num_kept_concrete": 95,
                "num_kept_lambda": 164,
                "num_values_explored": 655,
                "num_values_kept": 259,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.559694178402424,
            "num_unique_values": 255,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 24.571428571428573,
                "explored_percent_lambda": 50.628571428571426,
                "explored_percent_none": 24.8,
                "kept_percent_concrete": 32.520325203252035,
                "kept_percent_lambda": 67.47967479674797,
                "num_examples": 4,
                "num_explored_concrete": 215,
                "num_explored_lambda": 443,
                "num_explored_none": 217,
                "num_inputs": 1,
                "num_kept_concrete": 80,
                "num_kept_lambda": 166,
                "num_values_explored": 875,
                "num_values_kept": 246,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.591802256181836,
            "num_unique_values": 521,
            "solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), Scanl1(lambda u1, u2: (lambda v1: Multiply(3, v1))(u2), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 57.106918238993714,
                "explored_percent_lambda": 24.528301886792452,
                "explored_percent_none": 18.364779874213838,
                "kept_percent_concrete": 66.53620352250489,
                "kept_percent_lambda": 33.46379647749511,
                "num_examples": 5,
                "num_explored_concrete": 908,
                "num_explored_lambda": 390,
                "num_explored_none": 292,
                "num_inputs": 2,
                "num_kept_concrete": 340,
                "num_kept_lambda": 171,
                "num_values_explored": 1590,
                "num_values_kept": 511,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.01198727265,
            "num_unique_values": 10119,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 84.38238836597225,
                "explored_percent_lambda": 2.6981011434774205,
                "explored_percent_none": 12.919510490550326,
                "kept_percent_concrete": 94.85555995251286,
                "kept_percent_lambda": 5.144440047487139,
                "num_examples": 2,
                "num_explored_concrete": 226992,
                "num_explored_lambda": 7258,
                "num_explored_none": 34754,
                "num_inputs": 3,
                "num_kept_concrete": 9588,
                "num_kept_lambda": 520,
                "num_values_explored": 269004,
                "num_values_kept": 10108,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.258217975497246,
            "num_unique_values": 264,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide((lambda v1: Multiply(2, v1))(v1), 4))(u1), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 20.840064620355413,
                "explored_percent_lambda": 51.21163166397415,
                "explored_percent_none": 27.948303715670438,
                "kept_percent_concrete": 30.980392156862745,
                "kept_percent_lambda": 69.01960784313725,
                "num_examples": 2,
                "num_explored_concrete": 129,
                "num_explored_lambda": 317,
                "num_explored_none": 173,
                "num_inputs": 1,
                "num_kept_concrete": 79,
                "num_kept_lambda": 176,
                "num_values_explored": 619,
                "num_values_kept": 255,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 33.44357269257307,
            "num_unique_values": 2084,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 57.439900525006905,
                "explored_percent_lambda": 29.414202818458136,
                "explored_percent_none": 13.145896656534955,
                "kept_percent_concrete": 45.01204819277108,
                "kept_percent_lambda": 54.98795180722892,
                "num_examples": 2,
                "num_explored_concrete": 8315,
                "num_explored_lambda": 4258,
                "num_explored_none": 1903,
                "num_inputs": 1,
                "num_kept_concrete": 934,
                "num_kept_lambda": 1141,
                "num_values_explored": 14476,
                "num_values_kept": 2075,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.390353877097368,
            "num_unique_values": 212,
            "solution": "Add(Subtract(x1, x2), Square(Min(x2, 0)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 25.61386615310544,
                "explored_percent_lambda": 9.942224362060664,
                "explored_percent_none": 64.4439094848339,
                "kept_percent_concrete": 84.65346534653466,
                "kept_percent_lambda": 15.346534653465346,
                "num_examples": 2,
                "num_explored_concrete": 1064,
                "num_explored_lambda": 413,
                "num_explored_none": 2677,
                "num_inputs": 2,
                "num_kept_concrete": 171,
                "num_kept_lambda": 31,
                "num_values_explored": 4154,
                "num_values_kept": 202,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.2159099020063877,
            "num_unique_values": 180,
            "solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 27.057793345008758,
                "explored_percent_lambda": 19.877408056042032,
                "explored_percent_none": 53.06479859894921,
                "kept_percent_concrete": 56.470588235294116,
                "kept_percent_lambda": 43.529411764705884,
                "num_examples": 4,
                "num_explored_concrete": 309,
                "num_explored_lambda": 227,
                "num_explored_none": 606,
                "num_inputs": 2,
                "num_kept_concrete": 96,
                "num_kept_lambda": 74,
                "num_values_explored": 1142,
                "num_values_kept": 170,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 18.179959962144494,
            "num_unique_values": 1686,
            "solution": "Scanl1(lambda u1, u2: Add(-1, Access(1, x1)), Map(lambda u1: Add(Head(x1), -1), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 78.5071189279732,
                "explored_percent_lambda": 15.536013400335008,
                "explored_percent_none": 5.956867671691792,
                "kept_percent_concrete": 71.00238663484487,
                "kept_percent_lambda": 28.997613365155132,
                "num_examples": 3,
                "num_explored_concrete": 7499,
                "num_explored_lambda": 1484,
                "num_explored_none": 569,
                "num_inputs": 2,
                "num_kept_concrete": 1190,
                "num_kept_lambda": 486,
                "num_values_explored": 9552,
                "num_values_kept": 1676,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 13.331587996333838,
            "num_unique_values": 1133,
            "solution": "Add(Head(x1), Subtract(Square(Add(2, 4)), Subtract(4, Head(x1))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 74.89889834053828,
                "explored_percent_lambda": 11.407056198577605,
                "explored_percent_none": 13.694045460884116,
                "kept_percent_concrete": 76.42348754448399,
                "kept_percent_lambda": 23.576512455516013,
                "num_examples": 4,
                "num_explored_concrete": 5371,
                "num_explored_lambda": 818,
                "num_explored_none": 982,
                "num_inputs": 1,
                "num_kept_concrete": 859,
                "num_kept_lambda": 265,
                "num_values_explored": 7171,
                "num_values_kept": 1124,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9276412669569254,
            "num_unique_values": 131,
            "solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 91.42300194931774,
                "explored_percent_lambda": 6.822612085769981,
                "explored_percent_none": 1.7543859649122806,
                "kept_percent_concrete": 79.50819672131148,
                "kept_percent_lambda": 20.491803278688526,
                "num_examples": 5,
                "num_explored_concrete": 469,
                "num_explored_lambda": 35,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 97,
                "num_kept_lambda": 25,
                "num_values_explored": 513,
                "num_values_kept": 122,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7944614682346582,
            "num_unique_values": 246,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x3, Take(-1, x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 31.457800511508953,
                "explored_percent_lambda": 30.562659846547316,
                "explored_percent_none": 37.97953964194373,
                "kept_percent_concrete": 49.787234042553195,
                "kept_percent_lambda": 50.212765957446805,
                "num_examples": 2,
                "num_explored_concrete": 246,
                "num_explored_lambda": 239,
                "num_explored_none": 297,
                "num_inputs": 3,
                "num_kept_concrete": 117,
                "num_kept_lambda": 118,
                "num_values_explored": 782,
                "num_values_kept": 235,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.428175954148173,
            "num_unique_values": 211,
            "solution": "If(IsOdd(x1), IntDivide(x1, 4), Subtract(x1, x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 37.2695174578266,
                "explored_percent_lambda": 12.75009807767752,
                "explored_percent_none": 49.98038446449588,
                "kept_percent_concrete": 78.60696517412936,
                "kept_percent_lambda": 21.393034825870647,
                "num_examples": 2,
                "num_explored_concrete": 950,
                "num_explored_lambda": 325,
                "num_explored_none": 1274,
                "num_inputs": 2,
                "num_kept_concrete": 158,
                "num_kept_lambda": 43,
                "num_values_explored": 2549,
                "num_values_kept": 201,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.2012785114347935,
            "num_unique_values": 464,
            "solution": "Reverse(Drop(Sum(x2), Map(lambda u1: (lambda v1: Add(x1, v1))(u1), Reverse(x3))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 51.444291609353506,
                "explored_percent_lambda": 28.61072902338377,
                "explored_percent_none": 19.944979367262725,
                "kept_percent_concrete": 52.317880794701985,
                "kept_percent_lambda": 47.682119205298015,
                "num_examples": 4,
                "num_explored_concrete": 748,
                "num_explored_lambda": 416,
                "num_explored_none": 290,
                "num_inputs": 3,
                "num_kept_concrete": 237,
                "num_kept_lambda": 216,
                "num_values_explored": 1454,
                "num_values_kept": 453,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.5199838280677795,
            "num_unique_values": 505,
            "solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 58.110516934046345,
                "explored_percent_lambda": 28.966131907308377,
                "explored_percent_none": 12.923351158645277,
                "kept_percent_concrete": 66.39676113360323,
                "kept_percent_lambda": 33.60323886639676,
                "num_examples": 4,
                "num_explored_concrete": 652,
                "num_explored_lambda": 325,
                "num_explored_none": 145,
                "num_inputs": 3,
                "num_kept_concrete": 328,
                "num_kept_lambda": 166,
                "num_values_explored": 1122,
                "num_values_kept": 494,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.51805267482996,
            "num_unique_values": 144,
            "solution": "Subtract(IntDivide(Multiply(Add(x1, 2), Add(x2, 1)), x2), 2)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 22.893954410307234,
                "explored_percent_lambda": 13.330029732408326,
                "explored_percent_none": 63.77601585728444,
                "kept_percent_concrete": 83.58208955223881,
                "kept_percent_lambda": 16.417910447761194,
                "num_examples": 4,
                "num_explored_concrete": 462,
                "num_explored_lambda": 269,
                "num_explored_none": 1287,
                "num_inputs": 2,
                "num_kept_concrete": 112,
                "num_kept_lambda": 22,
                "num_values_explored": 2018,
                "num_values_kept": 134,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.46499378606677,
            "num_unique_values": 1013,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), Take(3, Drop(1, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 65.96378638551455,
                "explored_percent_lambda": 28.69585147834059,
                "explored_percent_none": 5.340362136144854,
                "kept_percent_concrete": 49.800796812749006,
                "kept_percent_lambda": 50.199203187250994,
                "num_examples": 5,
                "num_explored_concrete": 2878,
                "num_explored_lambda": 1252,
                "num_explored_none": 233,
                "num_inputs": 1,
                "num_kept_concrete": 500,
                "num_kept_lambda": 504,
                "num_values_explored": 4363,
                "num_values_kept": 1004,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6220706775784492,
            "num_unique_values": 261,
            "solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Less(x2, v1))(u1), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 36.54743390357698,
                "explored_percent_lambda": 33.59253499222395,
                "explored_percent_none": 29.860031104199066,
                "kept_percent_concrete": 63.6,
                "kept_percent_lambda": 36.4,
                "num_examples": 5,
                "num_explored_concrete": 235,
                "num_explored_lambda": 216,
                "num_explored_none": 192,
                "num_inputs": 3,
                "num_kept_concrete": 159,
                "num_kept_lambda": 91,
                "num_values_explored": 643,
                "num_values_kept": 250,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0103361420333,
            "num_unique_values": 12734,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.73614930192127,
                "explored_percent_lambda": 27.539516400858627,
                "explored_percent_none": 5.7243342972201035,
                "kept_percent_concrete": 48.2671905697446,
                "kept_percent_lambda": 51.7328094302554,
                "num_examples": 3,
                "num_explored_concrete": 150474,
                "num_explored_lambda": 62095,
                "num_explored_none": 12907,
                "num_inputs": 1,
                "num_kept_concrete": 6142,
                "num_kept_lambda": 6583,
                "num_values_explored": 225476,
                "num_values_kept": 12725,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.2807537224143744,
            "num_unique_values": 245,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 27.21518987341772,
                "explored_percent_lambda": 43.41772151898734,
                "explored_percent_none": 29.367088607594937,
                "kept_percent_concrete": 45.1063829787234,
                "kept_percent_lambda": 54.8936170212766,
                "num_examples": 4,
                "num_explored_concrete": 215,
                "num_explored_lambda": 343,
                "num_explored_none": 232,
                "num_inputs": 2,
                "num_kept_concrete": 106,
                "num_kept_lambda": 129,
                "num_values_explored": 790,
                "num_values_kept": 235,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0114192478359,
            "num_unique_values": 16141,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 79.12128236568186,
                "explored_percent_lambda": 14.492844420975379,
                "explored_percent_none": 6.3858732133427605,
                "kept_percent_concrete": 73.37259764414135,
                "kept_percent_lambda": 26.62740235585865,
                "num_examples": 5,
                "num_explored_concrete": 176806,
                "num_explored_lambda": 32386,
                "num_explored_none": 14270,
                "num_inputs": 3,
                "num_kept_concrete": 11835,
                "num_kept_lambda": 4295,
                "num_values_explored": 223462,
                "num_values_kept": 16130,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.1554258055984974,
            "num_unique_values": 229,
            "solution": "ZipWith(lambda u1, u2: Sum(x1), Drop(3, x2), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 25.741239892183287,
                "explored_percent_lambda": 53.6388140161725,
                "explored_percent_none": 20.619946091644206,
                "kept_percent_concrete": 41.0958904109589,
                "kept_percent_lambda": 58.9041095890411,
                "num_examples": 5,
                "num_explored_concrete": 191,
                "num_explored_lambda": 398,
                "num_explored_none": 153,
                "num_inputs": 2,
                "num_kept_concrete": 90,
                "num_kept_lambda": 129,
                "num_values_explored": 742,
                "num_values_kept": 219,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.227454347535968,
            "num_unique_values": 262,
            "solution": "Min(Subtract(x1, 3), Subtract(Add(x1, 2), Head(x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 44.35897435897436,
                "explored_percent_lambda": 15.064102564102564,
                "explored_percent_none": 40.57692307692308,
                "kept_percent_concrete": 76.19047619047619,
                "kept_percent_lambda": 23.80952380952381,
                "num_examples": 5,
                "num_explored_concrete": 692,
                "num_explored_lambda": 235,
                "num_explored_none": 633,
                "num_inputs": 2,
                "num_kept_concrete": 192,
                "num_kept_lambda": 60,
                "num_values_explored": 1560,
                "num_values_kept": 252,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.684405600652099,
            "num_unique_values": 823,
            "solution": "Sort(Scanl1(lambda u1, u2: Multiply(Add(x1, 3), IntDivide(4, x1)), Map(lambda u1: 1, x2)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 55.712806351398,
                "explored_percent_lambda": 20.05522954780808,
                "explored_percent_none": 24.231964100793924,
                "kept_percent_concrete": 55.84255842558426,
                "kept_percent_lambda": 44.15744157441574,
                "num_examples": 2,
                "num_explored_concrete": 3228,
                "num_explored_lambda": 1162,
                "num_explored_none": 1404,
                "num_inputs": 2,
                "num_kept_concrete": 454,
                "num_kept_lambda": 359,
                "num_values_explored": 5794,
                "num_values_kept": 813,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 36.53298716433346,
            "num_unique_values": 778,
            "solution": "Subtract(Add(3, Subtract(x1, Multiply(3, 4))), Square(Square(3)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 33.78991029227356,
                "explored_percent_lambda": 10.54306935468313,
                "explored_percent_none": 55.66702035304331,
                "kept_percent_concrete": 90.11703511053317,
                "kept_percent_lambda": 9.882964889466841,
                "num_examples": 4,
                "num_explored_concrete": 7006,
                "num_explored_lambda": 2186,
                "num_explored_none": 11542,
                "num_inputs": 1,
                "num_kept_concrete": 693,
                "num_kept_lambda": 76,
                "num_values_explored": 20734,
                "num_values_kept": 769,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.490705257281661,
            "num_unique_values": 217,
            "solution": "Map(lambda u1: (lambda v1: If(IsOdd(x2), v1, 3))(u1), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 28.699551569506728,
                "explored_percent_lambda": 34.828101644245145,
                "explored_percent_none": 36.47234678624813,
                "kept_percent_concrete": 53.6231884057971,
                "kept_percent_lambda": 46.3768115942029,
                "num_examples": 4,
                "num_explored_concrete": 192,
                "num_explored_lambda": 233,
                "num_explored_none": 244,
                "num_inputs": 2,
                "num_kept_concrete": 111,
                "num_kept_lambda": 96,
                "num_values_explored": 669,
                "num_values_kept": 207,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.855286583304405,
            "num_unique_values": 992,
            "solution": "Add(-1, Subtract(4, Add(Square(4), Sum(Drop(3, Reverse(x1))))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 79.25568573397656,
                "explored_percent_lambda": 14.403859407305307,
                "explored_percent_none": 6.340454858718125,
                "kept_percent_concrete": 76.90742624618515,
                "kept_percent_lambda": 23.092573753814854,
                "num_examples": 3,
                "num_explored_concrete": 3450,
                "num_explored_lambda": 627,
                "num_explored_none": 276,
                "num_inputs": 1,
                "num_kept_concrete": 756,
                "num_kept_lambda": 227,
                "num_values_explored": 4353,
                "num_values_kept": 983,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.121064612641931,
            "num_unique_values": 512,
            "solution": "Scanl1(lambda u1, u2: Subtract(Head(x2), 1), Map(lambda u1: Add(x1, -1), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 31.60892263882297,
                "explored_percent_lambda": 33.79212149976269,
                "explored_percent_none": 34.59895586141433,
                "kept_percent_concrete": 41.235059760956176,
                "kept_percent_lambda": 58.764940239043824,
                "num_examples": 2,
                "num_explored_concrete": 666,
                "num_explored_lambda": 712,
                "num_explored_none": 729,
                "num_inputs": 2,
                "num_kept_concrete": 207,
                "num_kept_lambda": 295,
                "num_values_explored": 2107,
                "num_values_kept": 502,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 281.5004298966378,
            "num_unique_values": 4023,
            "solution": "IntDivide(Add(Add(-1, Square(4)), x1), Multiply(-1, Add(2, 4)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 39.343429554474895,
                "explored_percent_lambda": 8.323286780542649,
                "explored_percent_none": 52.33328366498246,
                "kept_percent_concrete": 94.61883408071749,
                "kept_percent_lambda": 5.381165919282512,
                "num_examples": 4,
                "num_explored_concrete": 58089,
                "num_explored_lambda": 12289,
                "num_explored_none": 77268,
                "num_inputs": 1,
                "num_kept_concrete": 3798,
                "num_kept_lambda": 216,
                "num_values_explored": 147646,
                "num_values_kept": 4014,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 24.417945809662342,
            "num_unique_values": 1727,
            "solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 82.51295336787565,
                "explored_percent_lambda": 11.726607741542212,
                "explored_percent_none": 5.760438890582139,
                "kept_percent_concrete": 74.5486313337216,
                "kept_percent_lambda": 25.45136866627839,
                "num_examples": 2,
                "num_explored_concrete": 10829,
                "num_explored_lambda": 1539,
                "num_explored_none": 756,
                "num_inputs": 2,
                "num_kept_concrete": 1280,
                "num_kept_lambda": 437,
                "num_values_explored": 13124,
                "num_values_kept": 1717,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0395831726491,
            "num_unique_values": 14924,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 89.28698165400418,
                "explored_percent_lambda": 2.523803619603836,
                "explored_percent_none": 8.189214726391983,
                "kept_percent_concrete": 94.79683518841357,
                "kept_percent_lambda": 5.203164811586429,
                "num_examples": 5,
                "num_explored_concrete": 208836,
                "num_explored_lambda": 5903,
                "num_explored_none": 19154,
                "num_inputs": 2,
                "num_kept_concrete": 14138,
                "num_kept_lambda": 776,
                "num_values_explored": 233893,
                "num_values_kept": 14914,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.3833903577178717,
            "num_unique_values": 542,
            "solution": "Scanl1(lambda u1, u2: Subtract(-1, 2), Map(lambda u1: Multiply(-1, Subtract(4, Minimum(x1))), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 66.75693974272173,
                "explored_percent_lambda": 27.352742044685172,
                "explored_percent_none": 5.890318212593094,
                "kept_percent_concrete": 60.22514071294559,
                "kept_percent_lambda": 39.77485928705441,
                "num_examples": 3,
                "num_explored_concrete": 986,
                "num_explored_lambda": 404,
                "num_explored_none": 87,
                "num_inputs": 1,
                "num_kept_concrete": 321,
                "num_kept_lambda": 212,
                "num_values_explored": 1477,
                "num_values_kept": 533,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.276723688468337,
            "num_unique_values": 504,
            "solution": "Map(lambda u1: Max(Add(2, 4), Multiply(2, Access(1, x2))), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 50.86294416243655,
                "explored_percent_lambda": 36.954314720812185,
                "explored_percent_none": 12.182741116751268,
                "kept_percent_concrete": 68.01619433198381,
                "kept_percent_lambda": 31.983805668016196,
                "num_examples": 5,
                "num_explored_concrete": 501,
                "num_explored_lambda": 364,
                "num_explored_none": 120,
                "num_inputs": 2,
                "num_kept_concrete": 336,
                "num_kept_lambda": 158,
                "num_values_explored": 985,
                "num_values_kept": 494,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 186.60883532091975,
            "num_unique_values": 6575,
            "solution": "Map(lambda u1: (lambda v1: Min(Min(4, Maximum(x1)), (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 58.91050188937638,
                "explored_percent_lambda": 32.594912632192944,
                "explored_percent_none": 8.494585478430677,
                "kept_percent_concrete": 38.01401157477917,
                "kept_percent_lambda": 61.98598842522083,
                "num_examples": 2,
                "num_explored_concrete": 46458,
                "num_explored_lambda": 25705,
                "num_explored_none": 6699,
                "num_inputs": 1,
                "num_kept_concrete": 2496,
                "num_kept_lambda": 4070,
                "num_values_explored": 78862,
                "num_values_kept": 6566,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8242293801158667,
            "num_unique_values": 250,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 26.869806094182824,
                "explored_percent_lambda": 37.53462603878116,
                "explored_percent_none": 35.59556786703601,
                "kept_percent_concrete": 49.37238493723849,
                "kept_percent_lambda": 50.62761506276151,
                "num_examples": 4,
                "num_explored_concrete": 194,
                "num_explored_lambda": 271,
                "num_explored_none": 257,
                "num_inputs": 3,
                "num_kept_concrete": 118,
                "num_kept_lambda": 121,
                "num_values_explored": 722,
                "num_values_kept": 239,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.219572134315968,
            "num_unique_values": 754,
            "solution": "Map(lambda u1: Add(1, Multiply(3, IntDivide(Head(x1), 4))), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 40.9373060211049,
                "explored_percent_lambda": 26.675977653631286,
                "explored_percent_none": 32.38671632526381,
                "kept_percent_concrete": 37.718120805369125,
                "kept_percent_lambda": 62.281879194630875,
                "num_examples": 2,
                "num_explored_concrete": 2638,
                "num_explored_lambda": 1719,
                "num_explored_none": 2087,
                "num_inputs": 1,
                "num_kept_concrete": 281,
                "num_kept_lambda": 464,
                "num_values_explored": 6444,
                "num_values_kept": 745,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0223571434617,
            "num_unique_values": 14169,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 90.17169101170386,
                "explored_percent_lambda": 2.4668932612566876,
                "explored_percent_none": 7.36141572703945,
                "kept_percent_concrete": 94.85803079531007,
                "kept_percent_lambda": 5.141969204689928,
                "num_examples": 4,
                "num_explored_concrete": 227358,
                "num_explored_lambda": 6220,
                "num_explored_none": 18561,
                "num_inputs": 3,
                "num_kept_concrete": 13430,
                "num_kept_lambda": 728,
                "num_values_explored": 252139,
                "num_values_kept": 14158,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.2545797917992,
            "num_unique_values": 12018,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.87413282274421,
                "explored_percent_lambda": 35.40261071964936,
                "explored_percent_none": 5.723256457606432,
                "kept_percent_concrete": 39.19560329752685,
                "kept_percent_lambda": 60.80439670247315,
                "num_examples": 3,
                "num_explored_concrete": 129758,
                "num_explored_lambda": 78027,
                "num_explored_none": 12614,
                "num_inputs": 1,
                "num_kept_concrete": 4707,
                "num_kept_lambda": 7302,
                "num_values_explored": 220399,
                "num_values_kept": 12009,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3425815925002,
            "num_unique_values": 7375,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.967260017194484,
                "explored_percent_lambda": 8.107479599171283,
                "explored_percent_none": 50.92526038363424,
                "kept_percent_concrete": 94.02660874287265,
                "kept_percent_lambda": 5.973391257127342,
                "num_examples": 4,
                "num_explored_concrete": 116270,
                "num_explored_lambda": 23010,
                "num_explored_none": 144532,
                "num_inputs": 1,
                "num_kept_concrete": 6926,
                "num_kept_lambda": 440,
                "num_values_explored": 283812,
                "num_values_kept": 7366,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.49605591967702,
            "num_unique_values": 1020,
            "solution": "Scanl1(lambda u1, u2: Square(Sum(Scanl1(lambda u1, u2: 4, x1))), Map(lambda u1: (lambda v1: Square(v1))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 67.17791411042944,
                "explored_percent_lambda": 23.049956178790534,
                "explored_percent_none": 9.772129710780018,
                "kept_percent_concrete": 50.84075173095945,
                "kept_percent_lambda": 49.15924826904055,
                "num_examples": 2,
                "num_explored_concrete": 3066,
                "num_explored_lambda": 1052,
                "num_explored_none": 446,
                "num_inputs": 1,
                "num_kept_concrete": 514,
                "num_kept_lambda": 497,
                "num_values_explored": 4564,
                "num_values_kept": 1011,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 24.163371738046408,
            "num_unique_values": 1925,
            "solution": "Map(lambda u1: If(IsOdd(Sum(x1)), Square(3), Sum(Drop(1, x1))), x3)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 81.13662960795787,
                "explored_percent_lambda": 10.98595669982446,
                "explored_percent_none": 7.877413692217671,
                "kept_percent_concrete": 74.08568443051202,
                "kept_percent_lambda": 25.914315569487982,
                "num_examples": 5,
                "num_explored_concrete": 11093,
                "num_explored_lambda": 1502,
                "num_explored_none": 1077,
                "num_inputs": 3,
                "num_kept_concrete": 1418,
                "num_kept_lambda": 496,
                "num_values_explored": 13672,
                "num_values_kept": 1914,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.585204195231199,
            "num_unique_values": 510,
            "solution": "Scanl1(lambda u1, u2: Last(x2), Take(3, Map(lambda u1: Add(-1, -1), x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 53.014354066985646,
                "explored_percent_lambda": 30.717703349282296,
                "explored_percent_none": 16.267942583732058,
                "kept_percent_concrete": 45.0,
                "kept_percent_lambda": 55.0,
                "num_examples": 2,
                "num_explored_concrete": 1108,
                "num_explored_lambda": 642,
                "num_explored_none": 340,
                "num_inputs": 2,
                "num_kept_concrete": 225,
                "num_kept_lambda": 275,
                "num_values_explored": 2090,
                "num_values_kept": 500,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 357.9519232120365,
            "num_unique_values": 5137,
            "solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 58.00284017557449,
                "explored_percent_lambda": 18.79098889749548,
                "explored_percent_none": 23.206170926930028,
                "kept_percent_concrete": 66.22464898595943,
                "kept_percent_lambda": 33.77535101404056,
                "num_examples": 3,
                "num_explored_concrete": 89858,
                "num_explored_lambda": 29111,
                "num_explored_none": 35951,
                "num_inputs": 1,
                "num_kept_concrete": 3396,
                "num_kept_lambda": 1732,
                "num_values_explored": 154920,
                "num_values_kept": 5128,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.124585242942,
            "num_unique_values": 18571,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 92.5981805683269,
                "explored_percent_lambda": 2.011373679840733,
                "explored_percent_none": 5.3904457518323765,
                "kept_percent_concrete": 95.17241379310344,
                "kept_percent_lambda": 4.827586206896552,
                "num_examples": 5,
                "num_explored_concrete": 207444,
                "num_explored_lambda": 4506,
                "num_explored_none": 12076,
                "num_inputs": 3,
                "num_kept_concrete": 17664,
                "num_kept_lambda": 896,
                "num_values_explored": 224026,
                "num_values_kept": 18560,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 21.258534850552678,
            "num_unique_values": 1525,
            "solution": "Scanl1(lambda u1, u2: Min(-1, IntDivide(x1, Head(x3))), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 72.23749785186457,
                "explored_percent_lambda": 9.340092799450078,
                "explored_percent_none": 18.422409348685342,
                "kept_percent_concrete": 74.76882430647292,
                "kept_percent_lambda": 25.23117569352708,
                "num_examples": 4,
                "num_explored_concrete": 8407,
                "num_explored_lambda": 1087,
                "num_explored_none": 2144,
                "num_inputs": 3,
                "num_kept_concrete": 1132,
                "num_kept_lambda": 382,
                "num_values_explored": 11638,
                "num_values_kept": 1514,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.768138026818633,
            "num_unique_values": 1344,
            "solution": "Take(-1, Scanl1(lambda u1, u2: 0, Map(lambda u1: Subtract(4, Access(1, x1)), x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 70.23156203988756,
                "explored_percent_lambda": 23.785303172266097,
                "explored_percent_none": 5.983134787846339,
                "kept_percent_concrete": 55.28089887640449,
                "kept_percent_lambda": 44.71910112359551,
                "num_examples": 2,
                "num_explored_concrete": 5247,
                "num_explored_lambda": 1777,
                "num_explored_none": 447,
                "num_inputs": 1,
                "num_kept_concrete": 738,
                "num_kept_lambda": 597,
                "num_values_explored": 7471,
                "num_values_kept": 1335,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0404070932418,
            "num_unique_values": 14606,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 91.92627518904311,
                "explored_percent_lambda": 3.93722886445829,
                "explored_percent_none": 4.136495946498592,
                "kept_percent_concrete": 93.53247465058921,
                "kept_percent_lambda": 6.467525349410797,
                "num_examples": 3,
                "num_explored_concrete": 229277,
                "num_explored_lambda": 9820,
                "num_explored_none": 10317,
                "num_inputs": 2,
                "num_kept_concrete": 13652,
                "num_kept_lambda": 944,
                "num_values_explored": 249414,
                "num_values_kept": 14596,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.2794355601072,
            "num_unique_values": 7885,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.444837295887446,
                "explored_percent_lambda": 5.373805960404592,
                "explored_percent_none": 54.18135674370796,
                "kept_percent_concrete": 97.73968253968253,
                "kept_percent_lambda": 2.2603174603174603,
                "num_examples": 4,
                "num_explored_concrete": 120797,
                "num_explored_lambda": 16050,
                "num_explored_none": 161824,
                "num_inputs": 2,
                "num_kept_concrete": 7697,
                "num_kept_lambda": 178,
                "num_values_explored": 298671,
                "num_values_kept": 7875,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 274.42566472291946,
            "num_unique_values": 9565,
            "solution": "Min(2, Multiply(Sum(Take(Minimum(Drop(1, x1)), x1)), Square(4)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 92.30916869926827,
                "explored_percent_lambda": 3.439561757767204,
                "explored_percent_none": 4.251269542964533,
                "kept_percent_concrete": 93.2084554206781,
                "kept_percent_lambda": 6.791544579321892,
                "num_examples": 5,
                "num_explored_concrete": 115428,
                "num_explored_lambda": 4301,
                "num_explored_none": 5316,
                "num_inputs": 1,
                "num_kept_concrete": 8907,
                "num_kept_lambda": 649,
                "num_values_explored": 125045,
                "num_values_kept": 9556,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.186629679054,
            "num_unique_values": 10902,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 86.86011279122026,
                "explored_percent_lambda": 1.7926265276831408,
                "explored_percent_none": 11.347260681096598,
                "kept_percent_concrete": 95.98788101358795,
                "kept_percent_lambda": 4.0121189864120455,
                "num_examples": 4,
                "num_explored_concrete": 239654,
                "num_explored_lambda": 4946,
                "num_explored_none": 31308,
                "num_inputs": 2,
                "num_kept_concrete": 10455,
                "num_kept_lambda": 437,
                "num_values_explored": 275908,
                "num_values_kept": 10892,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.2202388718724,
            "num_unique_values": 7128,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.43976227083382,
                "explored_percent_lambda": 7.51575022428853,
                "explored_percent_none": 53.04448750487765,
                "kept_percent_concrete": 97.6401179941003,
                "kept_percent_lambda": 2.359882005899705,
                "num_examples": 3,
                "num_explored_concrete": 118255,
                "num_explored_lambda": 22535,
                "num_explored_none": 159047,
                "num_inputs": 1,
                "num_kept_concrete": 6951,
                "num_kept_lambda": 168,
                "num_values_explored": 299837,
                "num_values_kept": 7119,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6027093585580587,
            "num_unique_values": 481,
            "solution": "Map(lambda u1: Multiply(3, Add(1, Square(4))), Drop(3, Take(4, x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 50.25996533795494,
                "explored_percent_lambda": 24.89890236857308,
                "explored_percent_none": 24.841132293471983,
                "kept_percent_concrete": 57.53715498938429,
                "kept_percent_lambda": 42.46284501061571,
                "num_examples": 3,
                "num_explored_concrete": 870,
                "num_explored_lambda": 431,
                "num_explored_none": 430,
                "num_inputs": 2,
                "num_kept_concrete": 271,
                "num_kept_lambda": 200,
                "num_values_explored": 1731,
                "num_values_kept": 471,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0178337525576,
            "num_unique_values": 12060,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 64.30522038743719,
                "explored_percent_lambda": 30.199983235466693,
                "explored_percent_none": 5.494796377096118,
                "kept_percent_concrete": 38.87644178906315,
                "kept_percent_lambda": 61.12355821093685,
                "num_examples": 5,
                "num_explored_concrete": 145760,
                "num_explored_lambda": 68454,
                "num_explored_none": 12455,
                "num_inputs": 1,
                "num_kept_concrete": 4685,
                "num_kept_lambda": 7366,
                "num_values_explored": 226669,
                "num_values_kept": 12051,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.853321086615324,
            "num_unique_values": 1630,
            "solution": "Multiply(3, IntDivide(Max(-1, Max(Sum(x1), Last(x1))), 3))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 77.16643741403026,
                "explored_percent_lambda": 9.245431322460208,
                "explored_percent_none": 13.58813126350953,
                "kept_percent_concrete": 80.07402837754472,
                "kept_percent_lambda": 19.925971622455275,
                "num_examples": 5,
                "num_explored_concrete": 7854,
                "num_explored_lambda": 941,
                "num_explored_none": 1383,
                "num_inputs": 1,
                "num_kept_concrete": 1298,
                "num_kept_lambda": 323,
                "num_values_explored": 10178,
                "num_values_kept": 1621,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.290794251486659,
            "num_unique_values": 527,
            "solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 45.20084566596194,
                "explored_percent_lambda": 29.978858350951374,
                "explored_percent_none": 24.82029598308668,
                "kept_percent_concrete": 52.7027027027027,
                "kept_percent_lambda": 47.2972972972973,
                "num_examples": 2,
                "num_explored_concrete": 1069,
                "num_explored_lambda": 709,
                "num_explored_none": 587,
                "num_inputs": 1,
                "num_kept_concrete": 273,
                "num_kept_lambda": 245,
                "num_values_explored": 2365,
                "num_values_kept": 518,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.349015487357974,
            "num_unique_values": 1031,
            "solution": "Scanl1(lambda u1, u2: Add(3, Max(Head(x1), Square(4))), Take(2, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 57.98074770539512,
                "explored_percent_lambda": 22.878889635101856,
                "explored_percent_none": 19.140362659503023,
                "kept_percent_concrete": 63.013698630136986,
                "kept_percent_lambda": 36.986301369863014,
                "num_examples": 4,
                "num_explored_concrete": 2590,
                "num_explored_lambda": 1022,
                "num_explored_none": 855,
                "num_inputs": 1,
                "num_kept_concrete": 644,
                "num_kept_lambda": 378,
                "num_values_explored": 4467,
                "num_values_kept": 1022,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0275614857674,
            "num_unique_values": 6334,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.774539726297135,
                "explored_percent_lambda": 21.69617012897509,
                "explored_percent_none": 20.529290144727774,
                "kept_percent_concrete": 44.426877470355734,
                "kept_percent_lambda": 55.573122529644266,
                "num_examples": 2,
                "num_explored_concrete": 146704,
                "num_explored_lambda": 55092,
                "num_explored_none": 52129,
                "num_inputs": 1,
                "num_kept_concrete": 2810,
                "num_kept_lambda": 3515,
                "num_values_explored": 253925,
                "num_values_kept": 6325,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.276672281324863,
            "num_unique_values": 677,
            "solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 47.33662822624931,
                "explored_percent_lambda": 31.768259198242724,
                "explored_percent_none": 20.895112575507962,
                "kept_percent_concrete": 33.68263473053892,
                "kept_percent_lambda": 66.31736526946108,
                "num_examples": 2,
                "num_explored_concrete": 1724,
                "num_explored_lambda": 1157,
                "num_explored_none": 761,
                "num_inputs": 1,
                "num_kept_concrete": 225,
                "num_kept_lambda": 443,
                "num_values_explored": 3642,
                "num_values_kept": 668,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0247042402625,
            "num_unique_values": 5556,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.77926820632656,
                "explored_percent_lambda": 9.575160423389612,
                "explored_percent_none": 50.645571370283825,
                "kept_percent_concrete": 90.28303587524788,
                "kept_percent_lambda": 9.716964124752119,
                "num_examples": 2,
                "num_explored_concrete": 117969,
                "num_explored_lambda": 28396,
                "num_explored_none": 150194,
                "num_inputs": 1,
                "num_kept_concrete": 5008,
                "num_kept_lambda": 539,
                "num_values_explored": 296559,
                "num_values_kept": 5547,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 43.05624516308308,
            "num_unique_values": 931,
            "solution": "Subtract(If(IsEven(x1), Multiply(-1, Square(3)), Add(x1, x1)), 2)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 32.337395710479186,
                "explored_percent_lambda": 14.71192067444197,
                "explored_percent_none": 52.950683615078844,
                "kept_percent_concrete": 79.60954446854664,
                "kept_percent_lambda": 20.390455531453362,
                "num_examples": 2,
                "num_explored_concrete": 7403,
                "num_explored_lambda": 3368,
                "num_explored_none": 12122,
                "num_inputs": 1,
                "num_kept_concrete": 734,
                "num_kept_lambda": 188,
                "num_values_explored": 22893,
                "num_values_kept": 922,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.747702680528164,
            "num_unique_values": 452,
            "solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 25.86044318717586,
                "explored_percent_lambda": 21.44035832154644,
                "explored_percent_none": 52.6991984912777,
                "kept_percent_concrete": 65.61085972850678,
                "kept_percent_lambda": 34.38914027149321,
                "num_examples": 2,
                "num_explored_concrete": 2194,
                "num_explored_lambda": 1819,
                "num_explored_none": 4471,
                "num_inputs": 2,
                "num_kept_concrete": 290,
                "num_kept_lambda": 152,
                "num_values_explored": 8484,
                "num_values_kept": 442,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0138895399868,
            "num_unique_values": 4839,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.88744073425273,
                "explored_percent_lambda": 10.4862327613611,
                "explored_percent_none": 47.62632650438617,
                "kept_percent_concrete": 88.15489749430525,
                "kept_percent_lambda": 11.845102505694761,
                "num_examples": 2,
                "num_explored_concrete": 123862,
                "num_explored_lambda": 31008,
                "num_explored_none": 140832,
                "num_inputs": 2,
                "num_kept_concrete": 4257,
                "num_kept_lambda": 572,
                "num_values_explored": 295702,
                "num_values_kept": 4829,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0996732711792,
            "num_unique_values": 4507,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.283623194916224,
                "explored_percent_lambda": 10.833439878918142,
                "explored_percent_none": 46.88293692616564,
                "kept_percent_concrete": 88.70358016455415,
                "kept_percent_lambda": 11.296419835445853,
                "num_examples": 2,
                "num_explored_concrete": 122365,
                "num_explored_lambda": 31351,
                "num_explored_none": 135675,
                "num_inputs": 2,
                "num_kept_concrete": 3989,
                "num_kept_lambda": 508,
                "num_values_explored": 289391,
                "num_values_kept": 4497,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0939045734704,
            "num_unique_values": 4589,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.609240417927616,
                "explored_percent_lambda": 9.952483328084133,
                "explored_percent_none": 47.43827625398825,
                "kept_percent_concrete": 86.43808691854116,
                "kept_percent_lambda": 13.561913081458833,
                "num_examples": 2,
                "num_explored_concrete": 124465,
                "num_explored_lambda": 29072,
                "num_explored_none": 138571,
                "num_inputs": 2,
                "num_kept_concrete": 3958,
                "num_kept_lambda": 621,
                "num_values_explored": 292108,
                "num_values_kept": 4579,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.1039220113307,
            "num_unique_values": 6432,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.71207227112077,
                "explored_percent_lambda": 24.130132846615993,
                "explored_percent_none": 21.157794882263236,
                "kept_percent_concrete": 44.683169858321655,
                "kept_percent_lambda": 55.316830141678345,
                "num_examples": 2,
                "num_explored_concrete": 136691,
                "num_explored_lambda": 60286,
                "num_explored_none": 52860,
                "num_inputs": 1,
                "num_kept_concrete": 2870,
                "num_kept_lambda": 3553,
                "num_values_explored": 249837,
                "num_values_kept": 6423,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 102.93739325366914,
            "num_unique_values": 1632,
            "solution": "Add(3, Max(Add(x1, x1), Multiply(Square(4), Add(3, 4))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 38.36095081793636,
                "explored_percent_lambda": 10.358762595514143,
                "explored_percent_none": 51.280286586549494,
                "kept_percent_concrete": 91.92852741836106,
                "kept_percent_lambda": 8.07147258163894,
                "num_examples": 3,
                "num_explored_concrete": 21738,
                "num_explored_lambda": 5870,
                "num_explored_none": 29059,
                "num_inputs": 1,
                "num_kept_concrete": 1492,
                "num_kept_lambda": 131,
                "num_values_explored": 56667,
                "num_values_kept": 1623,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.81
}