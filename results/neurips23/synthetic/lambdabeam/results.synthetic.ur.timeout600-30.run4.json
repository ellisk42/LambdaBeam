{
    "num_tasks": 100,
    "num_tasks_solved": 90,
    "results": [
        {
            "elapsed_time": 1.9819398447871208,
            "num_unique_values": 217,
            "solution": "Map(lambda u1: (lambda v1: If((lambda v1: Less(1, v1))(v1), 1, 1))(u1), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 20.21709633649932,
                "explored_percent_lambda": 53.18860244233379,
                "explored_percent_none": 26.594301221166894,
                "kept_percent_concrete": 31.73076923076923,
                "kept_percent_lambda": 68.26923076923077,
                "num_examples": 2,
                "num_explored_concrete": 149,
                "num_explored_lambda": 392,
                "num_explored_none": 196,
                "num_inputs": 1,
                "num_kept_concrete": 66,
                "num_kept_lambda": 142,
                "num_values_explored": 737,
                "num_values_kept": 208,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 737
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7340295892208815,
            "num_unique_values": 252,
            "solution": "Scanl1(lambda u1, u2: x2, ZipWith(lambda u1, u2: (lambda v1: Max(1, v1))(u2), x1, x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 35.57692307692308,
                "explored_percent_lambda": 40.10989010989011,
                "explored_percent_none": 24.313186813186814,
                "kept_percent_concrete": 66.11570247933884,
                "kept_percent_lambda": 33.88429752066116,
                "num_examples": 3,
                "num_explored_concrete": 259,
                "num_explored_lambda": 292,
                "num_explored_none": 177,
                "num_inputs": 2,
                "num_kept_concrete": 160,
                "num_kept_lambda": 82,
                "num_values_explored": 728,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 728
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9735293611884117,
            "num_unique_values": 164,
            "solution": "Access(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 14.325068870523417,
                "explored_percent_lambda": 65.0137741046832,
                "explored_percent_none": 20.66115702479339,
                "kept_percent_concrete": 27.741935483870968,
                "kept_percent_lambda": 72.25806451612904,
                "num_examples": 5,
                "num_explored_concrete": 52,
                "num_explored_lambda": 236,
                "num_explored_none": 75,
                "num_inputs": 1,
                "num_kept_concrete": 43,
                "num_kept_lambda": 112,
                "num_values_explored": 363,
                "num_values_kept": 155,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 363
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0048514064401388,
            "num_unique_values": 154,
            "solution": "Drop(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 11.764705882352942,
                "explored_percent_lambda": 69.74789915966386,
                "explored_percent_none": 18.48739495798319,
                "kept_percent_concrete": 20.0,
                "kept_percent_lambda": 80.0,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 249,
                "num_explored_none": 66,
                "num_inputs": 1,
                "num_kept_concrete": 29,
                "num_kept_lambda": 116,
                "num_values_explored": 357,
                "num_values_kept": 145,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 357
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8603189811110497,
            "num_unique_values": 143,
            "solution": "Take(IntDivide(x2, 2), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 26.881720430107528,
                "explored_percent_lambda": 43.81720430107527,
                "explored_percent_none": 29.301075268817204,
                "kept_percent_concrete": 45.11278195488722,
                "kept_percent_lambda": 54.88721804511278,
                "num_examples": 4,
                "num_explored_concrete": 100,
                "num_explored_lambda": 163,
                "num_explored_none": 109,
                "num_inputs": 2,
                "num_kept_concrete": 60,
                "num_kept_lambda": 73,
                "num_values_explored": 372,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 372
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0037655718624592,
            "num_unique_values": 153,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 8.450704225352112,
                "explored_percent_lambda": 72.95774647887323,
                "explored_percent_none": 18.591549295774648,
                "kept_percent_concrete": 13.986013986013987,
                "kept_percent_lambda": 86.01398601398601,
                "num_examples": 4,
                "num_explored_concrete": 30,
                "num_explored_lambda": 259,
                "num_explored_none": 66,
                "num_inputs": 2,
                "num_kept_concrete": 20,
                "num_kept_lambda": 123,
                "num_values_explored": 355,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 355
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0470329336822033,
            "num_unique_values": 151,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 9.444444444444445,
                "explored_percent_lambda": 77.22222222222223,
                "explored_percent_none": 13.333333333333334,
                "kept_percent_concrete": 13.380281690140846,
                "kept_percent_lambda": 86.61971830985915,
                "num_examples": 2,
                "num_explored_concrete": 34,
                "num_explored_lambda": 278,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 123,
                "num_values_explored": 360,
                "num_values_kept": 142,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 360
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0358456410467625,
            "num_unique_values": 152,
            "solution": "Drop(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 9.97229916897507,
                "explored_percent_lambda": 67.03601108033241,
                "explored_percent_none": 22.991689750692522,
                "kept_percent_concrete": 15.384615384615385,
                "kept_percent_lambda": 84.61538461538461,
                "num_examples": 2,
                "num_explored_concrete": 36,
                "num_explored_lambda": 242,
                "num_explored_none": 83,
                "num_inputs": 1,
                "num_kept_concrete": 22,
                "num_kept_lambda": 121,
                "num_values_explored": 361,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 361
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.02616566978395,
            "num_unique_values": 256,
            "solution": "Scanl1(lambda u1, u2: 3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 22.510231923601637,
                "explored_percent_lambda": 46.65757162346521,
                "explored_percent_none": 30.83219645293315,
                "kept_percent_concrete": 31.17408906882591,
                "kept_percent_lambda": 68.82591093117409,
                "num_examples": 4,
                "num_explored_concrete": 165,
                "num_explored_lambda": 342,
                "num_explored_none": 226,
                "num_inputs": 1,
                "num_kept_concrete": 77,
                "num_kept_lambda": 170,
                "num_values_explored": 733,
                "num_values_kept": 247,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 733
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9280183874070644,
            "num_unique_values": 163,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 27.131782945736433,
                "explored_percent_lambda": 45.47803617571059,
                "explored_percent_none": 27.39018087855297,
                "kept_percent_concrete": 46.40522875816993,
                "kept_percent_lambda": 53.59477124183007,
                "num_examples": 5,
                "num_explored_concrete": 105,
                "num_explored_lambda": 176,
                "num_explored_none": 106,
                "num_inputs": 2,
                "num_kept_concrete": 71,
                "num_kept_lambda": 82,
                "num_values_explored": 387,
                "num_values_kept": 153,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 387
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.110424667596817,
            "num_unique_values": 278,
            "solution": "IntDivide(Head(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 43.687374749499,
                "explored_percent_lambda": 15.330661322645291,
                "explored_percent_none": 40.98196392785571,
                "kept_percent_concrete": 79.85074626865672,
                "kept_percent_lambda": 20.149253731343283,
                "num_examples": 4,
                "num_explored_concrete": 436,
                "num_explored_lambda": 153,
                "num_explored_none": 409,
                "num_inputs": 2,
                "num_kept_concrete": 214,
                "num_kept_lambda": 54,
                "num_values_explored": 998,
                "num_values_kept": 268,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 998
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18950490839779377,
            "num_unique_values": 70,
            "solution": "Max(x1, Square(4))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 98.91304347826087,
                "explored_percent_lambda": 1.0869565217391304,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 98.36065573770492,
                "kept_percent_lambda": 1.639344262295082,
                "num_examples": 2,
                "num_explored_concrete": 91,
                "num_explored_lambda": 1,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 60,
                "num_kept_lambda": 1,
                "num_values_explored": 92,
                "num_values_kept": 61,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 92
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.85622744448483,
            "num_unique_values": 286,
            "solution": "Multiply(4, Minimum(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 28.969359331476323,
                "explored_percent_lambda": 49.860724233983284,
                "explored_percent_none": 21.16991643454039,
                "kept_percent_concrete": 53.79061371841155,
                "kept_percent_lambda": 46.20938628158845,
                "num_examples": 4,
                "num_explored_concrete": 208,
                "num_explored_lambda": 358,
                "num_explored_none": 152,
                "num_inputs": 1,
                "num_kept_concrete": 149,
                "num_kept_lambda": 128,
                "num_values_explored": 718,
                "num_values_kept": 277,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 718
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.412566402927041,
            "num_unique_values": 271,
            "solution": "Multiply(4, Count(lambda u1: (lambda v1: Equal(0, v1))(u1), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 41.77215189873418,
                "explored_percent_lambda": 38.81856540084388,
                "explored_percent_none": 19.40928270042194,
                "kept_percent_concrete": 51.14503816793893,
                "kept_percent_lambda": 48.85496183206107,
                "num_examples": 2,
                "num_explored_concrete": 396,
                "num_explored_lambda": 368,
                "num_explored_none": 184,
                "num_inputs": 1,
                "num_kept_concrete": 134,
                "num_kept_lambda": 128,
                "num_values_explored": 948,
                "num_values_kept": 262,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 948
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4592759869992733,
            "num_unique_values": 265,
            "solution": "Scanl1(lambda u1, u2: Minimum(x1), Map(lambda u1: Head(x2), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 38.446969696969695,
                "explored_percent_lambda": 44.128787878787875,
                "explored_percent_none": 17.424242424242426,
                "kept_percent_concrete": 52.549019607843135,
                "kept_percent_lambda": 47.450980392156865,
                "num_examples": 5,
                "num_explored_concrete": 203,
                "num_explored_lambda": 233,
                "num_explored_none": 92,
                "num_inputs": 2,
                "num_kept_concrete": 134,
                "num_kept_lambda": 121,
                "num_values_explored": 528,
                "num_values_kept": 255,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 528
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.459660332649946,
            "num_unique_values": 273,
            "solution": "Subtract(2, Sum(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 20.521172638436482,
                "explored_percent_lambda": 42.99674267100977,
                "explored_percent_none": 36.48208469055375,
                "kept_percent_concrete": 32.196969696969695,
                "kept_percent_lambda": 67.8030303030303,
                "num_examples": 3,
                "num_explored_concrete": 189,
                "num_explored_lambda": 396,
                "num_explored_none": 336,
                "num_inputs": 1,
                "num_kept_concrete": 85,
                "num_kept_lambda": 179,
                "num_values_explored": 921,
                "num_values_kept": 264,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 921
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8561640605330467,
            "num_unique_values": 260,
            "solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 26.956521739130434,
                "explored_percent_lambda": 49.130434782608695,
                "explored_percent_none": 23.91304347826087,
                "kept_percent_concrete": 46.4,
                "kept_percent_lambda": 53.6,
                "num_examples": 2,
                "num_explored_concrete": 186,
                "num_explored_lambda": 339,
                "num_explored_none": 165,
                "num_inputs": 2,
                "num_kept_concrete": 116,
                "num_kept_lambda": 134,
                "num_values_explored": 690,
                "num_values_kept": 250,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 690
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9344278033822775,
            "num_unique_values": 251,
            "solution": "ZipWith(lambda u1, u2: (lambda v1, v2: Min(v1, v2))(u1, u2), Sort(x1), Drop(1, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 25.0,
                "explored_percent_lambda": 44.49404761904762,
                "explored_percent_none": 30.50595238095238,
                "kept_percent_concrete": 27.68595041322314,
                "kept_percent_lambda": 72.31404958677686,
                "num_examples": 3,
                "num_explored_concrete": 168,
                "num_explored_lambda": 299,
                "num_explored_none": 205,
                "num_inputs": 1,
                "num_kept_concrete": 67,
                "num_kept_lambda": 175,
                "num_values_explored": 672,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 672
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.371205335482955,
            "num_unique_values": 196,
            "solution": "Sum(Sort(Drop(x1, Take(4, x2))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 25.326797385620914,
                "explored_percent_lambda": 36.111111111111114,
                "explored_percent_none": 38.56209150326797,
                "kept_percent_concrete": 54.83870967741935,
                "kept_percent_lambda": 45.16129032258065,
                "num_examples": 3,
                "num_explored_concrete": 155,
                "num_explored_lambda": 221,
                "num_explored_none": 236,
                "num_inputs": 2,
                "num_kept_concrete": 102,
                "num_kept_lambda": 84,
                "num_values_explored": 612,
                "num_values_kept": 186,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 612
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8871724847704172,
            "num_unique_values": 204,
            "solution": "Map(lambda u1: Head(x2), Drop(2, x2))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 22.303030303030305,
                "explored_percent_lambda": 51.27272727272727,
                "explored_percent_none": 26.424242424242426,
                "kept_percent_concrete": 26.804123711340207,
                "kept_percent_lambda": 73.19587628865979,
                "num_examples": 2,
                "num_explored_concrete": 184,
                "num_explored_lambda": 423,
                "num_explored_none": 218,
                "num_inputs": 2,
                "num_kept_concrete": 52,
                "num_kept_lambda": 142,
                "num_values_explored": 825,
                "num_values_kept": 194,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 825
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.16748696193099,
            "num_unique_values": 254,
            "solution": "Scanl1(lambda u1, u2: Head(x2), ZipWith(lambda u1, u2: Last(x2), x1, Take(2, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 28.72467222884386,
                "explored_percent_lambda": 41.12038140643623,
                "explored_percent_none": 30.154946364719905,
                "kept_percent_concrete": 41.80327868852459,
                "kept_percent_lambda": 58.19672131147541,
                "num_examples": 3,
                "num_explored_concrete": 241,
                "num_explored_lambda": 345,
                "num_explored_none": 253,
                "num_inputs": 2,
                "num_kept_concrete": 102,
                "num_kept_lambda": 142,
                "num_values_explored": 839,
                "num_values_kept": 244,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 839
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.012963367626071,
            "num_unique_values": 875,
            "solution": "Min(Add(1, 4), Add(Minimum(x1), Count(lambda u1: (lambda v1: IsEven(v1))(u1), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 67.93957196810743,
                "explored_percent_lambda": 18.25430130088124,
                "explored_percent_none": 13.80612673101133,
                "kept_percent_concrete": 75.49132947976878,
                "kept_percent_lambda": 24.508670520231213,
                "num_examples": 4,
                "num_explored_concrete": 1619,
                "num_explored_lambda": 435,
                "num_explored_none": 329,
                "num_inputs": 2,
                "num_kept_concrete": 653,
                "num_kept_lambda": 212,
                "num_values_explored": 2383,
                "num_values_kept": 865,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2383
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 126.8130807261914,
            "num_unique_values": 967,
            "solution": "Sum(Map(lambda u1: (lambda v1: IntDivide(Add(3, 4), v1))(u1), Take(2, x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 75.51311288483467,
                "explored_percent_lambda": 16.647662485746864,
                "explored_percent_none": 7.839224629418472,
                "kept_percent_concrete": 73.38204592901879,
                "kept_percent_lambda": 26.61795407098121,
                "num_examples": 5,
                "num_explored_concrete": 2649,
                "num_explored_lambda": 584,
                "num_explored_none": 275,
                "num_inputs": 1,
                "num_kept_concrete": 703,
                "num_kept_lambda": 255,
                "num_values_explored": 3508,
                "num_values_kept": 958,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 66159
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.750739350914955,
            "num_unique_values": 545,
            "solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 59.32047750229568,
                "explored_percent_lambda": 32.13957759412305,
                "explored_percent_none": 8.539944903581267,
                "kept_percent_concrete": 63.925233644859816,
                "kept_percent_lambda": 36.074766355140184,
                "num_examples": 5,
                "num_explored_concrete": 646,
                "num_explored_lambda": 350,
                "num_explored_none": 93,
                "num_inputs": 2,
                "num_kept_concrete": 342,
                "num_kept_lambda": 193,
                "num_values_explored": 1089,
                "num_values_kept": 535,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1089
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.1296242643147707,
            "num_unique_values": 250,
            "solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 25.357142857142858,
                "explored_percent_lambda": 45.23809523809524,
                "explored_percent_none": 29.404761904761905,
                "kept_percent_concrete": 45.0,
                "kept_percent_lambda": 55.0,
                "num_examples": 2,
                "num_explored_concrete": 213,
                "num_explored_lambda": 380,
                "num_explored_none": 247,
                "num_inputs": 2,
                "num_kept_concrete": 108,
                "num_kept_lambda": 132,
                "num_values_explored": 840,
                "num_values_kept": 240,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 840
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.1614215970039368,
            "num_unique_values": 153,
            "solution": "Drop(Min(-1, IntDivide(x1, x3)), x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 38.814531548757174,
                "explored_percent_lambda": 34.41682600382409,
                "explored_percent_none": 26.76864244741874,
                "kept_percent_concrete": 47.88732394366197,
                "kept_percent_lambda": 52.11267605633803,
                "num_examples": 2,
                "num_explored_concrete": 203,
                "num_explored_lambda": 180,
                "num_explored_none": 140,
                "num_inputs": 3,
                "num_kept_concrete": 68,
                "num_kept_lambda": 74,
                "num_values_explored": 523,
                "num_values_kept": 142,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 523
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 96.78057435527444,
            "num_unique_values": 1079,
            "solution": "Multiply(-1, Head(ZipWith(lambda u1, u2: (lambda v1: Subtract(Last(x1), v1))(u2), x1, Reverse(x2))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 72.26255293405929,
                "explored_percent_lambda": 15.124016938898972,
                "explored_percent_none": 12.613430127041742,
                "kept_percent_concrete": 79.13938260056128,
                "kept_percent_lambda": 20.860617399438727,
                "num_examples": 5,
                "num_explored_concrete": 2389,
                "num_explored_lambda": 500,
                "num_explored_none": 417,
                "num_inputs": 2,
                "num_kept_concrete": 846,
                "num_kept_lambda": 223,
                "num_values_explored": 3306,
                "num_values_kept": 1069,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 50425
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 27.077592320740223,
            "num_unique_values": 636,
            "solution": "Add(4, Subtract(Subtract(Square(4), IntDivide(x1, 4)), Square(4)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 31.126650111096588,
                "explored_percent_lambda": 8.123121160632596,
                "explored_percent_none": 60.75022872827081,
                "kept_percent_concrete": 90.9090909090909,
                "kept_percent_lambda": 9.090909090909092,
                "num_examples": 5,
                "num_explored_concrete": 4763,
                "num_explored_lambda": 1243,
                "num_explored_none": 9296,
                "num_inputs": 1,
                "num_kept_concrete": 570,
                "num_kept_lambda": 57,
                "num_values_explored": 15302,
                "num_values_kept": 627,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 15302
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.944397261366248,
            "num_unique_values": 464,
            "solution": "Reverse(Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), Reverse(x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 39.33729821580289,
                "explored_percent_lambda": 45.964316057774,
                "explored_percent_none": 14.69838572642311,
                "kept_percent_concrete": 47.252747252747255,
                "kept_percent_lambda": 52.747252747252745,
                "num_examples": 3,
                "num_explored_concrete": 463,
                "num_explored_lambda": 541,
                "num_explored_none": 173,
                "num_inputs": 1,
                "num_kept_concrete": 215,
                "num_kept_lambda": 240,
                "num_values_explored": 1177,
                "num_values_kept": 455,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1177
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 32.578817730769515,
            "num_unique_values": 567,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 68.42105263157895,
                "explored_percent_lambda": 18.37488457987073,
                "explored_percent_none": 13.204062788550322,
                "kept_percent_concrete": 80.96947935368043,
                "kept_percent_lambda": 19.03052064631957,
                "num_examples": 5,
                "num_explored_concrete": 741,
                "num_explored_lambda": 199,
                "num_explored_none": 143,
                "num_inputs": 2,
                "num_kept_concrete": 451,
                "num_kept_lambda": 106,
                "num_values_explored": 1083,
                "num_values_kept": 557,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 16496
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.161407992243767,
            "num_unique_values": 538,
            "solution": "Scanl1(lambda u1, u2: Multiply(-1, Last(x1)), Map(lambda u1: Head(x2), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 53.82865807429871,
                "explored_percent_lambda": 33.73768006065201,
                "explored_percent_none": 12.43366186504928,
                "kept_percent_concrete": 63.63636363636363,
                "kept_percent_lambda": 36.36363636363637,
                "num_examples": 3,
                "num_explored_concrete": 710,
                "num_explored_lambda": 445,
                "num_explored_none": 164,
                "num_inputs": 2,
                "num_kept_concrete": 336,
                "num_kept_lambda": 192,
                "num_values_explored": 1319,
                "num_values_kept": 528,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1319
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.7348223756998777,
            "num_unique_values": 151,
            "solution": "Multiply(Square(x1), Max(4, Add(x1, 3)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 20.153061224489797,
                "explored_percent_lambda": 13.877551020408163,
                "explored_percent_none": 65.96938775510205,
                "kept_percent_concrete": 77.46478873239437,
                "kept_percent_lambda": 22.535211267605632,
                "num_examples": 2,
                "num_explored_concrete": 395,
                "num_explored_lambda": 272,
                "num_explored_none": 1293,
                "num_inputs": 1,
                "num_kept_concrete": 110,
                "num_kept_lambda": 32,
                "num_values_explored": 1960,
                "num_values_kept": 142,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1960
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.072648376226425,
            "num_unique_values": 248,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 37.530266343825666,
                "explored_percent_lambda": 37.167070217917676,
                "explored_percent_none": 25.30266343825666,
                "kept_percent_concrete": 55.88235294117647,
                "kept_percent_lambda": 44.11764705882353,
                "num_examples": 5,
                "num_explored_concrete": 310,
                "num_explored_lambda": 307,
                "num_explored_none": 209,
                "num_inputs": 2,
                "num_kept_concrete": 133,
                "num_kept_lambda": 105,
                "num_values_explored": 826,
                "num_values_kept": 238,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 826
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.131926877424121,
            "num_unique_values": 327,
            "solution": "Max(Square(Last(x2)), Square(Head(x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 39.548693586698334,
                "explored_percent_lambda": 41.44893111638955,
                "explored_percent_none": 19.002375296912113,
                "kept_percent_concrete": 59.305993690851736,
                "kept_percent_lambda": 40.694006309148264,
                "num_examples": 3,
                "num_explored_concrete": 333,
                "num_explored_lambda": 349,
                "num_explored_none": 160,
                "num_inputs": 2,
                "num_kept_concrete": 188,
                "num_kept_lambda": 129,
                "num_values_explored": 842,
                "num_values_kept": 317,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 842
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9317278154194355,
            "num_unique_values": 258,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 23.891273247496425,
                "explored_percent_lambda": 58.51216022889842,
                "explored_percent_none": 17.59656652360515,
                "kept_percent_concrete": 37.75100401606426,
                "kept_percent_lambda": 62.24899598393574,
                "num_examples": 2,
                "num_explored_concrete": 167,
                "num_explored_lambda": 409,
                "num_explored_none": 123,
                "num_inputs": 1,
                "num_kept_concrete": 94,
                "num_kept_lambda": 155,
                "num_values_explored": 699,
                "num_values_kept": 249,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 699
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.908127583563328,
            "num_unique_values": 543,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: If((lambda v1: IsEven(v1))(v1), -1, Add(-1, -1)))(u2), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 37.85271851342051,
                "explored_percent_lambda": 44.11562284927736,
                "explored_percent_none": 18.031658637302133,
                "kept_percent_concrete": 36.70411985018727,
                "kept_percent_lambda": 63.29588014981273,
                "num_examples": 4,
                "num_explored_concrete": 550,
                "num_explored_lambda": 641,
                "num_explored_none": 262,
                "num_inputs": 1,
                "num_kept_concrete": 196,
                "num_kept_lambda": 338,
                "num_values_explored": 1453,
                "num_values_kept": 534,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1453
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6642931532114744,
            "num_unique_values": 524,
            "solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 52.90581162324649,
                "explored_percent_lambda": 29.993319973279892,
                "explored_percent_none": 17.100868403473616,
                "kept_percent_concrete": 62.45136186770428,
                "kept_percent_lambda": 37.54863813229572,
                "num_examples": 5,
                "num_explored_concrete": 792,
                "num_explored_lambda": 449,
                "num_explored_none": 256,
                "num_inputs": 2,
                "num_kept_concrete": 321,
                "num_kept_lambda": 193,
                "num_values_explored": 1497,
                "num_values_kept": 514,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1497
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.147108476608992,
            "num_unique_values": 496,
            "solution": "Min(Subtract(x3, Sum(x2)), Subtract(Min(x1, 0), Sum(x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 61.75702155453952,
                "explored_percent_lambda": 11.332462442847811,
                "explored_percent_none": 26.91051600261267,
                "kept_percent_concrete": 75.6701030927835,
                "kept_percent_lambda": 24.329896907216494,
                "num_examples": 2,
                "num_explored_concrete": 1891,
                "num_explored_lambda": 347,
                "num_explored_none": 824,
                "num_inputs": 3,
                "num_kept_concrete": 367,
                "num_kept_lambda": 118,
                "num_values_explored": 3062,
                "num_values_kept": 485,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3062
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6748363971710205,
            "num_unique_values": 542,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 39.84905660377358,
                "explored_percent_lambda": 42.113207547169814,
                "explored_percent_none": 18.037735849056602,
                "kept_percent_concrete": 33.771106941838646,
                "kept_percent_lambda": 66.22889305816135,
                "num_examples": 2,
                "num_explored_concrete": 528,
                "num_explored_lambda": 558,
                "num_explored_none": 239,
                "num_inputs": 1,
                "num_kept_concrete": 180,
                "num_kept_lambda": 353,
                "num_values_explored": 1325,
                "num_values_kept": 533,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1325
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.7805877197533846,
            "num_unique_values": 544,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: (lambda v1: Add(4, v1))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 50.51169590643275,
                "explored_percent_lambda": 35.23391812865497,
                "explored_percent_none": 14.25438596491228,
                "kept_percent_concrete": 44.85981308411215,
                "kept_percent_lambda": 55.14018691588785,
                "num_examples": 2,
                "num_explored_concrete": 691,
                "num_explored_lambda": 482,
                "num_explored_none": 195,
                "num_inputs": 1,
                "num_kept_concrete": 240,
                "num_kept_lambda": 295,
                "num_values_explored": 1368,
                "num_values_kept": 535,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1368
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 18.954202353954315,
            "num_unique_values": 461,
            "solution": "Subtract(Subtract(Subtract(x1, x2), Min(x2, 0)), Min(x2, 0))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 29.71454880294659,
                "explored_percent_lambda": 7.458563535911602,
                "explored_percent_none": 62.826887661141804,
                "kept_percent_concrete": 92.01773835920177,
                "kept_percent_lambda": 7.982261640798226,
                "num_examples": 2,
                "num_explored_concrete": 3227,
                "num_explored_lambda": 810,
                "num_explored_none": 6823,
                "num_inputs": 2,
                "num_kept_concrete": 415,
                "num_kept_lambda": 36,
                "num_values_explored": 10860,
                "num_values_kept": 451,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 10860
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.6899817287921906,
            "num_unique_values": 368,
            "solution": "Map(lambda u1: Add(-1, Max(4, IntDivide(x2, 4))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 40.6773862470065,
                "explored_percent_lambda": 15.121450564488539,
                "explored_percent_none": 44.201163188504964,
                "kept_percent_concrete": 65.36312849162012,
                "kept_percent_lambda": 34.63687150837989,
                "num_examples": 4,
                "num_explored_concrete": 1189,
                "num_explored_lambda": 442,
                "num_explored_none": 1292,
                "num_inputs": 2,
                "num_kept_concrete": 234,
                "num_kept_lambda": 124,
                "num_values_explored": 2923,
                "num_values_kept": 358,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2923
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.532296633347869,
            "num_unique_values": 216,
            "solution": "Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Take(2, x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 22.310126582278482,
                "explored_percent_lambda": 46.835443037974684,
                "explored_percent_none": 30.854430379746834,
                "kept_percent_concrete": 41.262135922330096,
                "kept_percent_lambda": 58.737864077669904,
                "num_examples": 3,
                "num_explored_concrete": 141,
                "num_explored_lambda": 296,
                "num_explored_none": 195,
                "num_inputs": 2,
                "num_kept_concrete": 85,
                "num_kept_lambda": 121,
                "num_values_explored": 632,
                "num_values_kept": 206,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 632
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.498805375769734,
            "num_unique_values": 510,
            "solution": "Add(Head(x1), Add(Head(x1), Multiply(2, Square(4))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 48.890010090817356,
                "explored_percent_lambda": 25.27749747729566,
                "explored_percent_none": 25.832492431886983,
                "kept_percent_concrete": 64.07185628742515,
                "kept_percent_lambda": 35.92814371257485,
                "num_examples": 4,
                "num_explored_concrete": 969,
                "num_explored_lambda": 501,
                "num_explored_none": 512,
                "num_inputs": 1,
                "num_kept_concrete": 321,
                "num_kept_lambda": 180,
                "num_values_explored": 1982,
                "num_values_kept": 501,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1982
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8589013163000345,
            "num_unique_values": 131,
            "solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 91.20171673819742,
                "explored_percent_lambda": 6.652360515021459,
                "explored_percent_none": 2.1459227467811157,
                "kept_percent_concrete": 81.9672131147541,
                "kept_percent_lambda": 18.0327868852459,
                "num_examples": 5,
                "num_explored_concrete": 425,
                "num_explored_lambda": 31,
                "num_explored_none": 10,
                "num_inputs": 1,
                "num_kept_concrete": 100,
                "num_kept_lambda": 22,
                "num_values_explored": 466,
                "num_values_kept": 122,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 466
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6578201036900282,
            "num_unique_values": 215,
            "solution": "Map(lambda u1: (lambda v1: Add(x1, v1))(u1), Take(2, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 28.63013698630137,
                "explored_percent_lambda": 32.054794520547944,
                "explored_percent_none": 39.31506849315068,
                "kept_percent_concrete": 48.03921568627451,
                "kept_percent_lambda": 51.96078431372549,
                "num_examples": 2,
                "num_explored_concrete": 209,
                "num_explored_lambda": 234,
                "num_explored_none": 287,
                "num_inputs": 3,
                "num_kept_concrete": 98,
                "num_kept_lambda": 106,
                "num_values_explored": 730,
                "num_values_kept": 204,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 730
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.80758742056787,
            "num_unique_values": 183,
            "solution": "Min(IntDivide(x1, 4), IntDivide(Multiply(2, Subtract(x2, x1)), x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 25.322503583373148,
                "explored_percent_lambda": 13.377926421404682,
                "explored_percent_none": 61.29956999522217,
                "kept_percent_concrete": 83.23699421965318,
                "kept_percent_lambda": 16.76300578034682,
                "num_examples": 2,
                "num_explored_concrete": 530,
                "num_explored_lambda": 280,
                "num_explored_none": 1283,
                "num_inputs": 2,
                "num_kept_concrete": 144,
                "num_kept_lambda": 29,
                "num_values_explored": 2093,
                "num_values_kept": 173,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2093
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7706094235181808,
            "num_unique_values": 245,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(x1, (lambda v1: Add(x1, v1))(v1)))(u2), x2, x3)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 34.21418636995828,
                "explored_percent_lambda": 35.46592489568846,
                "explored_percent_none": 30.319888734353267,
                "kept_percent_concrete": 55.12820512820513,
                "kept_percent_lambda": 44.87179487179487,
                "num_examples": 4,
                "num_explored_concrete": 246,
                "num_explored_lambda": 255,
                "num_explored_none": 218,
                "num_inputs": 3,
                "num_kept_concrete": 129,
                "num_kept_lambda": 105,
                "num_values_explored": 719,
                "num_values_kept": 234,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 719
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.520157029852271,
            "num_unique_values": 506,
            "solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 60.44703595724004,
                "explored_percent_lambda": 29.25170068027211,
                "explored_percent_none": 10.301263362487852,
                "kept_percent_concrete": 64.84848484848484,
                "kept_percent_lambda": 35.15151515151515,
                "num_examples": 4,
                "num_explored_concrete": 622,
                "num_explored_lambda": 301,
                "num_explored_none": 106,
                "num_inputs": 3,
                "num_kept_concrete": 321,
                "num_kept_lambda": 174,
                "num_values_explored": 1029,
                "num_values_kept": 495,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1029
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.557875899598,
            "num_unique_values": 126,
            "solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 20.937340804890475,
                "explored_percent_lambda": 12.429954151808456,
                "explored_percent_none": 66.63270504330107,
                "kept_percent_concrete": 83.62068965517241,
                "kept_percent_lambda": 16.379310344827587,
                "num_examples": 4,
                "num_explored_concrete": 411,
                "num_explored_lambda": 244,
                "num_explored_none": 1308,
                "num_inputs": 2,
                "num_kept_concrete": 97,
                "num_kept_lambda": 19,
                "num_values_explored": 1963,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 172320
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 20.990967528894544,
            "num_unique_values": 1687,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), Take(3, Drop(1, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 74.14910858995138,
                "explored_percent_lambda": 22.71069692058347,
                "explored_percent_none": 3.140194489465154,
                "kept_percent_concrete": 50.715137067938024,
                "kept_percent_lambda": 49.284862932061976,
                "num_examples": 5,
                "num_explored_concrete": 7320,
                "num_explored_lambda": 2242,
                "num_explored_none": 310,
                "num_inputs": 1,
                "num_kept_concrete": 851,
                "num_kept_lambda": 827,
                "num_values_explored": 9872,
                "num_values_kept": 1678,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 9872
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9066082537174225,
            "num_unique_values": 261,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Max(x3, v1))(u1), Filter(lambda u1: (lambda v1: Less(x2, v1))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 33.19327731092437,
                "explored_percent_lambda": 36.41456582633053,
                "explored_percent_none": 30.392156862745097,
                "kept_percent_concrete": 62.0,
                "kept_percent_lambda": 38.0,
                "num_examples": 5,
                "num_explored_concrete": 237,
                "num_explored_lambda": 260,
                "num_explored_none": 217,
                "num_inputs": 3,
                "num_kept_concrete": 155,
                "num_kept_lambda": 95,
                "num_values_explored": 714,
                "num_values_kept": 250,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 714
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 33.491124141961336,
            "num_unique_values": 463,
            "solution": "Reverse(Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), Reverse(x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 41.964285714285715,
                "explored_percent_lambda": 37.08791208791209,
                "explored_percent_none": 20.947802197802197,
                "kept_percent_concrete": 44.27312775330397,
                "kept_percent_lambda": 55.72687224669603,
                "num_examples": 3,
                "num_explored_concrete": 611,
                "num_explored_lambda": 540,
                "num_explored_none": 305,
                "num_inputs": 1,
                "num_kept_concrete": 201,
                "num_kept_lambda": 253,
                "num_values_explored": 1456,
                "num_values_kept": 454,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 15917
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.019286984577775,
            "num_unique_values": 249,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 27.509293680297397,
                "explored_percent_lambda": 42.13135068153655,
                "explored_percent_none": 30.359355638166047,
                "kept_percent_concrete": 45.18828451882845,
                "kept_percent_lambda": 54.81171548117155,
                "num_examples": 4,
                "num_explored_concrete": 222,
                "num_explored_lambda": 340,
                "num_explored_none": 245,
                "num_inputs": 2,
                "num_kept_concrete": 108,
                "num_kept_lambda": 131,
                "num_values_explored": 807,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 807
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 601.0010846480727,
            "num_unique_values": 2388,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.1952035694367,
                "explored_percent_lambda": 14.591466815393195,
                "explored_percent_none": 10.213329615170107,
                "kept_percent_concrete": 62.557846024400504,
                "kept_percent_lambda": 37.442153975599496,
                "num_examples": 5,
                "num_explored_concrete": 10786,
                "num_explored_lambda": 2093,
                "num_explored_none": 1465,
                "num_inputs": 3,
                "num_kept_concrete": 1487,
                "num_kept_lambda": 890,
                "num_values_explored": 14344,
                "num_values_kept": 2377,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 295667
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.963922869414091,
            "num_unique_values": 226,
            "solution": "ZipWith(lambda u1, u2: Sum(x1), x2, Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 27.763157894736842,
                "explored_percent_lambda": 51.578947368421055,
                "explored_percent_none": 20.657894736842106,
                "kept_percent_concrete": 42.129629629629626,
                "kept_percent_lambda": 57.870370370370374,
                "num_examples": 5,
                "num_explored_concrete": 211,
                "num_explored_lambda": 392,
                "num_explored_none": 157,
                "num_inputs": 2,
                "num_kept_concrete": 91,
                "num_kept_lambda": 125,
                "num_values_explored": 760,
                "num_values_kept": 216,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 760
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.309050999581814,
            "num_unique_values": 245,
            "solution": "Min(Subtract(x1, 3), Subtract(Add(x1, 2), Head(x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 44.23748544819558,
                "explored_percent_lambda": 11.641443538998836,
                "explored_percent_none": 44.12107101280559,
                "kept_percent_concrete": 80.85106382978724,
                "kept_percent_lambda": 19.148936170212767,
                "num_examples": 5,
                "num_explored_concrete": 760,
                "num_explored_lambda": 200,
                "num_explored_none": 758,
                "num_inputs": 2,
                "num_kept_concrete": 190,
                "num_kept_lambda": 45,
                "num_values_explored": 1718,
                "num_values_kept": 235,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1718
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 42.967358546331525,
            "num_unique_values": 837,
            "solution": "Map(lambda u1: (lambda v1: IntDivide(v1, 4))(u1), Map(lambda u1: (lambda v1: IntDivide(v1, x1))(u1), x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 58.1074578989575,
                "explored_percent_lambda": 19.37449879711307,
                "explored_percent_none": 22.51804330392943,
                "kept_percent_concrete": 58.524788391777506,
                "kept_percent_lambda": 41.475211608222494,
                "num_examples": 2,
                "num_explored_concrete": 3623,
                "num_explored_lambda": 1208,
                "num_explored_none": 1404,
                "num_inputs": 2,
                "num_kept_concrete": 484,
                "num_kept_lambda": 343,
                "num_values_explored": 6235,
                "num_values_kept": 827,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 20305
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 12.265277333557606,
            "num_unique_values": 331,
            "solution": "Subtract(Subtract(Subtract(x1, 2), Square(Square(3))), Add(3, 4))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 29.573170731707318,
                "explored_percent_lambda": 11.859756097560975,
                "explored_percent_none": 58.56707317073171,
                "kept_percent_concrete": 84.16149068322981,
                "kept_percent_lambda": 15.838509316770187,
                "num_examples": 4,
                "num_explored_concrete": 1940,
                "num_explored_lambda": 778,
                "num_explored_none": 3842,
                "num_inputs": 1,
                "num_kept_concrete": 271,
                "num_kept_lambda": 51,
                "num_values_explored": 6560,
                "num_values_kept": 322,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 6560
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.492062957957387,
            "num_unique_values": 215,
            "solution": "Map(lambda u1: (lambda v1: If(IsOdd(x2), v1, 3))(u1), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 24.382716049382715,
                "explored_percent_lambda": 40.58641975308642,
                "explored_percent_none": 35.03086419753087,
                "kept_percent_concrete": 47.80487804878049,
                "kept_percent_lambda": 52.19512195121951,
                "num_examples": 4,
                "num_explored_concrete": 158,
                "num_explored_lambda": 263,
                "num_explored_none": 227,
                "num_inputs": 2,
                "num_kept_concrete": 98,
                "num_kept_lambda": 107,
                "num_values_explored": 648,
                "num_values_kept": 205,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 648
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 21.99025820568204,
            "num_unique_values": 1727,
            "solution": "Subtract(3, Square(Min(Add(4, 4), IntDivide(Head(x1), 4))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 86.43478260869566,
                "explored_percent_lambda": 8.115942028985508,
                "explored_percent_none": 5.449275362318841,
                "kept_percent_concrete": 83.0034924330617,
                "kept_percent_lambda": 16.996507566938302,
                "num_examples": 3,
                "num_explored_concrete": 10437,
                "num_explored_lambda": 980,
                "num_explored_none": 658,
                "num_inputs": 1,
                "num_kept_concrete": 1426,
                "num_kept_lambda": 292,
                "num_values_explored": 12075,
                "num_values_kept": 1718,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 12075
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.879760341718793,
            "num_unique_values": 518,
            "solution": "Scanl1(lambda u1, u2: Subtract(Head(x2), 1), Map(lambda u1: Add(x1, -1), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 34.462511291779585,
                "explored_percent_lambda": 33.42366757000903,
                "explored_percent_none": 32.113821138211385,
                "kept_percent_concrete": 40.15748031496063,
                "kept_percent_lambda": 59.84251968503937,
                "num_examples": 2,
                "num_explored_concrete": 763,
                "num_explored_lambda": 740,
                "num_explored_none": 711,
                "num_inputs": 2,
                "num_kept_concrete": 204,
                "num_kept_lambda": 304,
                "num_values_explored": 2214,
                "num_values_kept": 508,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2214
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3003650531173,
            "num_unique_values": 745,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.95872170439414,
                "explored_percent_lambda": 9.35116813945043,
                "explored_percent_none": 59.69011015615543,
                "kept_percent_concrete": 88.58695652173913,
                "kept_percent_lambda": 11.41304347826087,
                "num_examples": 4,
                "num_explored_concrete": 5115,
                "num_explored_lambda": 1545,
                "num_explored_none": 9862,
                "num_inputs": 1,
                "num_kept_concrete": 652,
                "num_kept_lambda": 84,
                "num_values_explored": 16522,
                "num_values_kept": 736,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 332970
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 43.08496808446944,
            "num_unique_values": 1215,
            "solution": "Scanl1(lambda u1, u2: Add(-1, Add(-1, IntDivide(Last(x1), Head(x2)))), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 77.57482732156562,
                "explored_percent_lambda": 15.963161933998466,
                "explored_percent_none": 6.462010744435917,
                "kept_percent_concrete": 69.12863070539419,
                "kept_percent_lambda": 30.87136929460581,
                "num_examples": 2,
                "num_explored_concrete": 5054,
                "num_explored_lambda": 1040,
                "num_explored_none": 421,
                "num_inputs": 2,
                "num_kept_concrete": 833,
                "num_kept_lambda": 372,
                "num_values_explored": 6515,
                "num_values_kept": 1205,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 21940
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 47.98999932408333,
            "num_unique_values": 1856,
            "solution": "Sum(Scanl1(lambda u1, u2: Subtract(x2, 3), Take(Minimum(x1), x1)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 82.52596935102335,
                "explored_percent_lambda": 6.469196749974288,
                "explored_percent_none": 11.004833899002366,
                "kept_percent_concrete": 86.40303358613218,
                "kept_percent_lambda": 13.596966413867822,
                "num_examples": 5,
                "num_explored_concrete": 8024,
                "num_explored_lambda": 629,
                "num_explored_none": 1070,
                "num_inputs": 2,
                "num_kept_concrete": 1595,
                "num_kept_lambda": 251,
                "num_values_explored": 9723,
                "num_values_kept": 1846,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 25207
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.247916439548135,
            "num_unique_values": 541,
            "solution": "Scanl1(lambda u1, u2: Subtract(-1, 2), Map(lambda u1: Subtract(Add(-1, Minimum(x1)), 3), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 64.97695852534562,
                "explored_percent_lambda": 28.37393021724819,
                "explored_percent_none": 6.649111257406188,
                "kept_percent_concrete": 57.142857142857146,
                "kept_percent_lambda": 42.857142857142854,
                "num_examples": 3,
                "num_explored_concrete": 987,
                "num_explored_lambda": 431,
                "num_explored_none": 101,
                "num_inputs": 1,
                "num_kept_concrete": 304,
                "num_kept_lambda": 228,
                "num_values_explored": 1519,
                "num_values_kept": 532,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1519
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.9834680818021297,
            "num_unique_values": 778,
            "solution": "Map(lambda u1: (lambda v1: Max(v1, Multiply(2, Max(3, Access(1, x2)))))(u1), x1)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 67.81071242849714,
                "explored_percent_lambda": 23.920956838273533,
                "explored_percent_none": 8.268330733229329,
                "kept_percent_concrete": 72.00520833333333,
                "kept_percent_lambda": 27.994791666666668,
                "num_examples": 5,
                "num_explored_concrete": 1304,
                "num_explored_lambda": 460,
                "num_explored_none": 159,
                "num_inputs": 2,
                "num_kept_concrete": 553,
                "num_kept_lambda": 215,
                "num_values_explored": 1923,
                "num_values_kept": 768,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1923
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 15.627459153532982,
            "num_unique_values": 1562,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1, x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 51.75983436853002,
                "explored_percent_lambda": 37.414965986394556,
                "explored_percent_none": 10.825199645075422,
                "kept_percent_concrete": 37.21828718609144,
                "kept_percent_lambda": 62.78171281390856,
                "num_examples": 2,
                "num_explored_concrete": 3500,
                "num_explored_lambda": 2530,
                "num_explored_none": 732,
                "num_inputs": 1,
                "num_kept_concrete": 578,
                "num_kept_lambda": 975,
                "num_values_explored": 6762,
                "num_values_kept": 1553,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 6762
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7563591040670872,
            "num_unique_values": 247,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 29.75206611570248,
                "explored_percent_lambda": 36.36363636363637,
                "explored_percent_none": 33.88429752066116,
                "kept_percent_concrete": 54.23728813559322,
                "kept_percent_lambda": 45.76271186440678,
                "num_examples": 4,
                "num_explored_concrete": 216,
                "num_explored_lambda": 264,
                "num_explored_none": 246,
                "num_inputs": 3,
                "num_kept_concrete": 128,
                "num_kept_lambda": 108,
                "num_values_explored": 726,
                "num_values_kept": 236,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 726
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.637506321072578,
            "num_unique_values": 747,
            "solution": "Map(lambda u1: Add(Multiply(3, IntDivide(Head(x1), 4)), 1), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 41.36,
                "explored_percent_lambda": 28.032,
                "explored_percent_none": 30.608,
                "kept_percent_concrete": 37.12737127371274,
                "kept_percent_lambda": 62.87262872628726,
                "num_examples": 2,
                "num_explored_concrete": 2585,
                "num_explored_lambda": 1752,
                "num_explored_none": 1913,
                "num_inputs": 1,
                "num_kept_concrete": 274,
                "num_kept_lambda": 464,
                "num_values_explored": 6250,
                "num_values_kept": 738,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 6250
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.9017004445195,
            "num_unique_values": 2427,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 88.83067396999286,
                "explored_percent_lambda": 5.126220528697309,
                "explored_percent_none": 6.043105501309836,
                "kept_percent_concrete": 88.16225165562913,
                "kept_percent_lambda": 11.83774834437086,
                "num_examples": 4,
                "num_explored_concrete": 14920,
                "num_explored_lambda": 861,
                "num_explored_none": 1015,
                "num_inputs": 3,
                "num_kept_concrete": 2130,
                "num_kept_lambda": 286,
                "num_values_explored": 16796,
                "num_values_kept": 2416,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 333781
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 601.1863868571818,
            "num_unique_values": 2232,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.21424687330071,
                "explored_percent_lambda": 38.3826613842927,
                "explored_percent_none": 7.403091742406588,
                "kept_percent_concrete": 36.61718398560504,
                "kept_percent_lambda": 63.38281601439496,
                "num_examples": 3,
                "num_explored_concrete": 6979,
                "num_explored_lambda": 4941,
                "num_explored_none": 953,
                "num_inputs": 1,
                "num_kept_concrete": 814,
                "num_kept_lambda": 1409,
                "num_values_explored": 12873,
                "num_values_kept": 2223,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 250766
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 251.19287216104567,
            "num_unique_values": 331,
            "solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 27.25390251672507,
                "explored_percent_lambda": 11.803122013380058,
                "explored_percent_none": 60.94297546989487,
                "kept_percent_concrete": 82.29813664596273,
                "kept_percent_lambda": 17.70186335403727,
                "num_examples": 4,
                "num_explored_concrete": 1711,
                "num_explored_lambda": 741,
                "num_explored_none": 3826,
                "num_inputs": 1,
                "num_kept_concrete": 265,
                "num_kept_lambda": 57,
                "num_values_explored": 6278,
                "num_values_kept": 322,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 145069
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.115000948309898,
            "num_unique_values": 1039,
            "solution": "Scanl1(lambda u1, u2: Square(Sum(Scanl1(lambda u1, u2: 4, x1))), Map(lambda u1: (lambda v1: Square(v1))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 66.14476968459269,
                "explored_percent_lambda": 24.438393464942138,
                "explored_percent_none": 9.416836850465168,
                "kept_percent_concrete": 48.737864077669904,
                "kept_percent_lambda": 51.262135922330096,
                "num_examples": 2,
                "num_explored_concrete": 2915,
                "num_explored_lambda": 1077,
                "num_explored_none": 415,
                "num_inputs": 1,
                "num_kept_concrete": 502,
                "num_kept_lambda": 528,
                "num_values_explored": 4407,
                "num_values_kept": 1030,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4407
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 44.120762972161174,
            "num_unique_values": 1378,
            "solution": "Map(lambda u1: If(IsOdd(Sum(x1)), Square(3), Sum(Drop(1, x1))), x3)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 77.48047625144028,
                "explored_percent_lambda": 13.8522596338497,
                "explored_percent_none": 8.667264114710024,
                "kept_percent_concrete": 70.73884418434528,
                "kept_percent_lambda": 29.261155815654718,
                "num_examples": 5,
                "num_explored_concrete": 6052,
                "num_explored_lambda": 1082,
                "num_explored_none": 677,
                "num_inputs": 3,
                "num_kept_concrete": 967,
                "num_kept_lambda": 400,
                "num_values_explored": 7811,
                "num_values_kept": 1367,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 24524
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.4618000127375126,
            "num_unique_values": 400,
            "solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 43.97208121827411,
                "explored_percent_lambda": 36.80203045685279,
                "explored_percent_none": 19.225888324873097,
                "kept_percent_concrete": 37.94871794871795,
                "kept_percent_lambda": 62.05128205128205,
                "num_examples": 2,
                "num_explored_concrete": 693,
                "num_explored_lambda": 580,
                "num_explored_none": 303,
                "num_inputs": 2,
                "num_kept_concrete": 148,
                "num_kept_lambda": 242,
                "num_values_explored": 1576,
                "num_values_kept": 390,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1576
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 56.5081030447036,
            "num_unique_values": 1239,
            "solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square(v1))(v1)))(u1), Map(lambda u1: (lambda v1: Square(v1))(u1), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 50.49472830494728,
                "explored_percent_lambda": 24.176804541768046,
                "explored_percent_none": 25.32846715328467,
                "kept_percent_concrete": 46.829268292682926,
                "kept_percent_lambda": 53.170731707317074,
                "num_examples": 3,
                "num_explored_concrete": 6226,
                "num_explored_lambda": 2981,
                "num_explored_none": 3123,
                "num_inputs": 1,
                "num_kept_concrete": 576,
                "num_kept_lambda": 654,
                "num_values_explored": 12330,
                "num_values_kept": 1230,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 26340
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 45.44462086074054,
            "num_unique_values": 2043,
            "solution": "Add(x2, Sum(ZipWith(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3, x3)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 89.63218390804597,
                "explored_percent_lambda": 6.689655172413793,
                "explored_percent_none": 3.67816091954023,
                "kept_percent_concrete": 86.41732283464567,
                "kept_percent_lambda": 13.582677165354331,
                "num_examples": 5,
                "num_explored_concrete": 7798,
                "num_explored_lambda": 582,
                "num_explored_none": 320,
                "num_inputs": 3,
                "num_kept_concrete": 1756,
                "num_kept_lambda": 276,
                "num_values_explored": 8700,
                "num_values_kept": 2032,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 25592
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.464756732806563,
            "num_unique_values": 1344,
            "solution": "Scanl1(lambda u1, u2: Min(-1, IntDivide(x1, Head(x3))), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 70.38519800908894,
                "explored_percent_lambda": 9.867993940705475,
                "explored_percent_none": 19.746808050205583,
                "kept_percent_concrete": 72.84321080270068,
                "kept_percent_lambda": 27.156789197299325,
                "num_examples": 4,
                "num_explored_concrete": 6505,
                "num_explored_lambda": 912,
                "num_explored_none": 1825,
                "num_inputs": 3,
                "num_kept_concrete": 971,
                "num_kept_lambda": 362,
                "num_values_explored": 9242,
                "num_values_kept": 1333,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 9242
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.133129727095366,
            "num_unique_values": 1027,
            "solution": "Scanl1(lambda u1, u2: 0, Map(lambda u1: Subtract(4, Access(1, x1)), Take(-1, x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 65.79876434245367,
                "explored_percent_lambda": 25.750220653133276,
                "explored_percent_none": 8.451015004413062,
                "kept_percent_concrete": 55.40275049115913,
                "kept_percent_lambda": 44.59724950884087,
                "num_examples": 2,
                "num_explored_concrete": 2982,
                "num_explored_lambda": 1167,
                "num_explored_none": 383,
                "num_inputs": 1,
                "num_kept_concrete": 564,
                "num_kept_lambda": 454,
                "num_values_explored": 4532,
                "num_values_kept": 1018,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4532
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 155.50312601961195,
            "num_unique_values": 736,
            "solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 75.01595405232929,
                "explored_percent_lambda": 14.231014677728142,
                "explored_percent_none": 10.753031269942566,
                "kept_percent_concrete": 78.37465564738292,
                "kept_percent_lambda": 21.62534435261708,
                "num_examples": 3,
                "num_explored_concrete": 2351,
                "num_explored_lambda": 446,
                "num_explored_none": 337,
                "num_inputs": 2,
                "num_kept_concrete": 569,
                "num_kept_lambda": 157,
                "num_values_explored": 3134,
                "num_values_kept": 726,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 92091
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3300207201391,
            "num_unique_values": 793,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.6519777010884,
                "explored_percent_lambda": 5.675603928855853,
                "explored_percent_none": 61.672418370055745,
                "kept_percent_concrete": 93.99744572158366,
                "kept_percent_lambda": 6.002554278416348,
                "num_examples": 4,
                "num_explored_concrete": 6150,
                "num_explored_lambda": 1069,
                "num_explored_none": 11616,
                "num_inputs": 2,
                "num_kept_concrete": 736,
                "num_kept_lambda": 47,
                "num_values_explored": 18835,
                "num_values_kept": 783,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 373534
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 33.09338486939669,
            "num_unique_values": 589,
            "solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Multiply(2, v1))(u1), x1))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 55.06929248723559,
                "explored_percent_lambda": 30.051057622173595,
                "explored_percent_none": 14.879649890590809,
                "kept_percent_concrete": 72.75862068965517,
                "kept_percent_lambda": 27.24137931034483,
                "num_examples": 5,
                "num_explored_concrete": 755,
                "num_explored_lambda": 412,
                "num_explored_none": 204,
                "num_inputs": 1,
                "num_kept_concrete": 422,
                "num_kept_lambda": 158,
                "num_values_explored": 1371,
                "num_values_kept": 580,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 18516
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 139.53416789509356,
            "num_unique_values": 1347,
            "solution": "Multiply(-1, Square(Multiply(Subtract(-1, x2), Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 79.10285379529668,
                "explored_percent_lambda": 4.502468825843167,
                "explored_percent_none": 16.394677378860155,
                "kept_percent_concrete": 90.12715033657442,
                "kept_percent_lambda": 9.87284966342558,
                "num_examples": 4,
                "num_explored_concrete": 9452,
                "num_explored_lambda": 538,
                "num_explored_none": 1959,
                "num_inputs": 2,
                "num_kept_concrete": 1205,
                "num_kept_lambda": 132,
                "num_values_explored": 11949,
                "num_values_kept": 1337,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 84266
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.26637508533895,
            "num_unique_values": 398,
            "solution": "Add(4, Multiply(4, Min(3, Multiply(3, Subtract(2, Square(x1))))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 25.491852745926373,
                "explored_percent_lambda": 11.695835847917923,
                "explored_percent_none": 62.8123114061557,
                "kept_percent_concrete": 85.08997429305913,
                "kept_percent_lambda": 14.910025706940875,
                "num_examples": 3,
                "num_explored_concrete": 2112,
                "num_explored_lambda": 969,
                "num_explored_none": 5204,
                "num_inputs": 1,
                "num_kept_concrete": 331,
                "num_kept_lambda": 58,
                "num_values_explored": 8285,
                "num_values_kept": 389,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 8285
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.551434803754091,
            "num_unique_values": 734,
            "solution": "Map(lambda u1: Add(3, Multiply(3, Square(4))), Take(1, Drop(3, x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 64.4847699287103,
                "explored_percent_lambda": 18.47051198963059,
                "explored_percent_none": 17.044718081659106,
                "kept_percent_concrete": 64.50276243093923,
                "kept_percent_lambda": 35.49723756906077,
                "num_examples": 3,
                "num_explored_concrete": 1990,
                "num_explored_lambda": 570,
                "num_explored_none": 526,
                "num_inputs": 2,
                "num_kept_concrete": 467,
                "num_kept_lambda": 257,
                "num_values_explored": 3086,
                "num_values_kept": 724,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3086
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 243.9653910472989,
            "num_unique_values": 499,
            "solution": "Filter(lambda u1: IsEven(Last(x1)), Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 43.05468258956631,
                "explored_percent_lambda": 40.16341923318667,
                "explored_percent_none": 16.781898177247015,
                "kept_percent_concrete": 47.142857142857146,
                "kept_percent_lambda": 52.857142857142854,
                "num_examples": 5,
                "num_explored_concrete": 685,
                "num_explored_lambda": 639,
                "num_explored_none": 267,
                "num_inputs": 1,
                "num_kept_concrete": 231,
                "num_kept_lambda": 259,
                "num_values_explored": 1591,
                "num_values_kept": 490,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 114869
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 22.512840405106544,
            "num_unique_values": 1820,
            "solution": "Multiply(3, IntDivide(Max(-1, Max(Sum(x1), Last(x1))), 3))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 78.09428619023821,
                "explored_percent_lambda": 8.762285523904714,
                "explored_percent_none": 13.143428285857071,
                "kept_percent_concrete": 81.66758696852568,
                "kept_percent_lambda": 18.332413031474324,
                "num_examples": 5,
                "num_explored_concrete": 9376,
                "num_explored_lambda": 1052,
                "num_explored_none": 1578,
                "num_inputs": 1,
                "num_kept_concrete": 1479,
                "num_kept_lambda": 332,
                "num_values_explored": 12006,
                "num_values_kept": 1811,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 12006
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 68.95221652463078,
            "num_unique_values": 700,
            "solution": "IntDivide(Square(Subtract(Last(x1), Square(4))), Subtract(3, Last(x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 55.2564400092829,
                "explored_percent_lambda": 20.956138315154327,
                "explored_percent_none": 23.787421675562776,
                "kept_percent_concrete": 60.492040520984084,
                "kept_percent_lambda": 39.507959479015916,
                "num_examples": 2,
                "num_explored_concrete": 2381,
                "num_explored_lambda": 903,
                "num_explored_none": 1025,
                "num_inputs": 1,
                "num_kept_concrete": 418,
                "num_kept_lambda": 273,
                "num_values_explored": 4309,
                "num_values_kept": 691,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 36549
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.971060896292329,
            "num_unique_values": 1056,
            "solution": "Scanl1(lambda u1, u2: Add(3, Max(Head(x1), Square(4))), Take(2, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 55.88235294117647,
                "explored_percent_lambda": 25.56561085972851,
                "explored_percent_none": 18.552036199095024,
                "kept_percent_concrete": 61.41356255969436,
                "kept_percent_lambda": 38.58643744030564,
                "num_examples": 4,
                "num_explored_concrete": 2470,
                "num_explored_lambda": 1130,
                "num_explored_none": 820,
                "num_inputs": 1,
                "num_kept_concrete": 643,
                "num_kept_lambda": 404,
                "num_values_explored": 4420,
                "num_values_kept": 1047,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4420
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 289.25409506075084,
            "num_unique_values": 918,
            "solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 42.68160462594868,
                "explored_percent_lambda": 25.780026502830985,
                "explored_percent_none": 31.538368871220335,
                "kept_percent_concrete": 34.763476347634764,
                "kept_percent_lambda": 65.23652365236524,
                "num_examples": 2,
                "num_explored_concrete": 3543,
                "num_explored_lambda": 2140,
                "num_explored_none": 2618,
                "num_inputs": 1,
                "num_kept_concrete": 316,
                "num_kept_lambda": 593,
                "num_values_explored": 8301,
                "num_values_kept": 909,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 126714
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.952573036774993,
            "num_unique_values": 673,
            "solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 47.381477398015434,
                "explored_percent_lambda": 30.73318632855568,
                "explored_percent_none": 21.885336273428887,
                "kept_percent_concrete": 34.93975903614458,
                "kept_percent_lambda": 65.06024096385542,
                "num_examples": 2,
                "num_explored_concrete": 1719,
                "num_explored_lambda": 1115,
                "num_explored_none": 794,
                "num_inputs": 1,
                "num_kept_concrete": 232,
                "num_kept_lambda": 432,
                "num_values_explored": 3628,
                "num_values_kept": 664,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3628
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3207346703857,
            "num_unique_values": 676,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.66329662393934,
                "explored_percent_lambda": 11.33778660408016,
                "explored_percent_none": 53.998916771980504,
                "kept_percent_concrete": 83.50824587706147,
                "kept_percent_lambda": 16.49175412293853,
                "num_examples": 2,
                "num_explored_concrete": 5760,
                "num_explored_lambda": 1884,
                "num_explored_none": 8973,
                "num_inputs": 1,
                "num_kept_concrete": 557,
                "num_kept_lambda": 110,
                "num_values_explored": 16617,
                "num_values_kept": 667,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 336466
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 295.1503488700837,
            "num_unique_values": 617,
            "solution": "Subtract(If(IsEven(x1), Multiply(-1, Square(3)), Add(x1, x1)), 2)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 29.685619735258726,
                "explored_percent_lambda": 15.185018050541517,
                "explored_percent_none": 55.12936221419976,
                "kept_percent_concrete": 74.34210526315789,
                "kept_percent_lambda": 25.657894736842106,
                "num_examples": 2,
                "num_explored_concrete": 3947,
                "num_explored_lambda": 2019,
                "num_explored_none": 7330,
                "num_inputs": 1,
                "num_kept_concrete": 452,
                "num_kept_lambda": 156,
                "num_values_explored": 13296,
                "num_values_kept": 608,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 155144
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 12.723107267171144,
            "num_unique_values": 355,
            "solution": "Subtract(If(IsEven(IntDivide(x1, 3)), 0, Add(x1, Square(3))), 4)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 27.33168622606547,
                "explored_percent_lambda": 20.475602223594812,
                "explored_percent_none": 52.192711550339716,
                "kept_percent_concrete": 66.08695652173913,
                "kept_percent_lambda": 33.91304347826087,
                "num_examples": 2,
                "num_explored_concrete": 1770,
                "num_explored_lambda": 1326,
                "num_explored_none": 3380,
                "num_inputs": 2,
                "num_kept_concrete": 228,
                "num_kept_lambda": 117,
                "num_values_explored": 6476,
                "num_values_kept": 345,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 6476
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3488045278937,
            "num_unique_values": 738,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.27777777777778,
                "explored_percent_lambda": 13.592592592592593,
                "explored_percent_none": 55.129629629629626,
                "kept_percent_concrete": 74.03846153846153,
                "kept_percent_lambda": 25.96153846153846,
                "num_examples": 2,
                "num_explored_concrete": 5067,
                "num_explored_lambda": 2202,
                "num_explored_none": 8931,
                "num_inputs": 2,
                "num_kept_concrete": 539,
                "num_kept_lambda": 189,
                "num_values_explored": 16200,
                "num_values_kept": 728,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 323863
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3908350914717,
            "num_unique_values": 712,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 27.994833710041977,
                "explored_percent_lambda": 16.648369389732,
                "explored_percent_none": 55.35679690022602,
                "kept_percent_concrete": 72.22222222222223,
                "kept_percent_lambda": 27.77777777777778,
                "num_examples": 2,
                "num_explored_concrete": 4335,
                "num_explored_lambda": 2578,
                "num_explored_none": 8572,
                "num_inputs": 2,
                "num_kept_concrete": 507,
                "num_kept_lambda": 195,
                "num_values_explored": 15485,
                "num_values_kept": 702,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 317516
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3604062031955,
            "num_unique_values": 701,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.843575418994412,
                "explored_percent_lambda": 13.395543004481551,
                "explored_percent_none": 54.760881576524035,
                "kept_percent_concrete": 75.54269175108539,
                "kept_percent_lambda": 24.457308248914618,
                "num_examples": 2,
                "num_explored_concrete": 5187,
                "num_explored_lambda": 2182,
                "num_explored_none": 8920,
                "num_inputs": 2,
                "num_kept_concrete": 522,
                "num_kept_lambda": 169,
                "num_values_explored": 16289,
                "num_values_kept": 691,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 323692
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.7184275407344,
            "num_unique_values": 1234,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.05277044854881,
                "explored_percent_lambda": 27.799765464673115,
                "explored_percent_none": 27.147464086778072,
                "kept_percent_concrete": 34.69387755102041,
                "kept_percent_lambda": 65.3061224489796,
                "num_examples": 2,
                "num_explored_concrete": 6147,
                "num_explored_lambda": 3793,
                "num_explored_none": 3704,
                "num_inputs": 1,
                "num_kept_concrete": 425,
                "num_kept_lambda": 800,
                "num_values_explored": 13644,
                "num_values_kept": 1225,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 276969
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 401.58470209129155,
            "num_unique_values": 303,
            "solution": "Add(3, Max(Add(x1, x1), Multiply(Square(4), Add(3, 4))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 28.580333489169394,
                "explored_percent_lambda": 13.214897927380395,
                "explored_percent_none": 58.20476858345021,
                "kept_percent_concrete": 86.05442176870748,
                "kept_percent_lambda": 13.945578231292517,
                "num_examples": 3,
                "num_explored_concrete": 1834,
                "num_explored_lambda": 848,
                "num_explored_none": 3735,
                "num_inputs": 1,
                "num_kept_concrete": 253,
                "num_kept_lambda": 41,
                "num_values_explored": 6417,
                "num_values_kept": 294,
                "temperature": 1.0,
                "total_num_restarts": 14,
                "total_num_values_explored": 232331
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.9
}