{
    "num_tasks": 100,
    "num_tasks_solved": 83,
    "results": [
        {
            "elapsed_time": 1.6416904255747795,
            "num_unique_values": 222,
            "solution": "Map(lambda u1: (lambda v1: If((lambda v1: IsEven(v1))(v1), 1, 1))(u1), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 23.670668953687823,
                "explored_percent_lambda": 51.286449399656945,
                "explored_percent_none": 25.042881646655232,
                "kept_percent_concrete": 28.169014084507044,
                "kept_percent_lambda": 71.83098591549296,
                "num_examples": 2,
                "num_explored_concrete": 138,
                "num_explored_lambda": 299,
                "num_explored_none": 146,
                "num_inputs": 1,
                "num_kept_concrete": 60,
                "num_kept_lambda": 153,
                "num_values_explored": 583,
                "num_values_kept": 213,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9286045152693987,
            "num_unique_values": 259,
            "solution": "Scanl1(lambda u1, u2: x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 34.09378960709759,
                "explored_percent_lambda": 39.543726235741445,
                "explored_percent_none": 26.362484157160964,
                "kept_percent_concrete": 60.6425702811245,
                "kept_percent_lambda": 39.3574297188755,
                "num_examples": 3,
                "num_explored_concrete": 269,
                "num_explored_lambda": 312,
                "num_explored_none": 208,
                "num_inputs": 2,
                "num_kept_concrete": 151,
                "num_kept_lambda": 98,
                "num_values_explored": 789,
                "num_values_kept": 249,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9824342969805002,
            "num_unique_values": 163,
            "solution": "Access(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 14.3646408839779,
                "explored_percent_lambda": 66.29834254143647,
                "explored_percent_none": 19.337016574585636,
                "kept_percent_concrete": 27.272727272727273,
                "kept_percent_lambda": 72.72727272727273,
                "num_examples": 5,
                "num_explored_concrete": 52,
                "num_explored_lambda": 240,
                "num_explored_none": 70,
                "num_inputs": 1,
                "num_kept_concrete": 42,
                "num_kept_lambda": 112,
                "num_values_explored": 362,
                "num_values_kept": 154,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9923252798616886,
            "num_unique_values": 155,
            "solution": "Drop(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 11.864406779661017,
                "explored_percent_lambda": 66.38418079096046,
                "explored_percent_none": 21.75141242937853,
                "kept_percent_concrete": 22.602739726027398,
                "kept_percent_lambda": 77.3972602739726,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 235,
                "num_explored_none": 77,
                "num_inputs": 1,
                "num_kept_concrete": 33,
                "num_kept_lambda": 113,
                "num_values_explored": 354,
                "num_values_kept": 146,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.856376426294446,
            "num_unique_values": 143,
            "solution": "Take(Min(x2, 3), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 30.971128608923884,
                "explored_percent_lambda": 36.22047244094488,
                "explored_percent_none": 32.808398950131235,
                "kept_percent_concrete": 51.8796992481203,
                "kept_percent_lambda": 48.1203007518797,
                "num_examples": 4,
                "num_explored_concrete": 118,
                "num_explored_lambda": 138,
                "num_explored_none": 125,
                "num_inputs": 2,
                "num_kept_concrete": 69,
                "num_kept_lambda": 64,
                "num_values_explored": 381,
                "num_values_kept": 133,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9704786352813244,
            "num_unique_values": 153,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 6.936416184971098,
                "explored_percent_lambda": 74.56647398843931,
                "explored_percent_none": 18.497109826589597,
                "kept_percent_concrete": 13.286713286713287,
                "kept_percent_lambda": 86.7132867132867,
                "num_examples": 4,
                "num_explored_concrete": 24,
                "num_explored_lambda": 258,
                "num_explored_none": 64,
                "num_inputs": 2,
                "num_kept_concrete": 19,
                "num_kept_lambda": 124,
                "num_values_explored": 346,
                "num_values_kept": 143,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9959634188562632,
            "num_unique_values": 151,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 12.806539509536785,
                "explored_percent_lambda": 71.38964577656675,
                "explored_percent_none": 15.803814713896458,
                "kept_percent_concrete": 16.197183098591548,
                "kept_percent_lambda": 83.80281690140845,
                "num_examples": 2,
                "num_explored_concrete": 47,
                "num_explored_lambda": 262,
                "num_explored_none": 58,
                "num_inputs": 1,
                "num_kept_concrete": 23,
                "num_kept_lambda": 119,
                "num_values_explored": 367,
                "num_values_kept": 142,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0335848666727543,
            "num_unique_values": 153,
            "solution": "Drop(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 10.773480662983426,
                "explored_percent_lambda": 67.67955801104972,
                "explored_percent_none": 21.54696132596685,
                "kept_percent_concrete": 14.583333333333334,
                "kept_percent_lambda": 85.41666666666667,
                "num_examples": 2,
                "num_explored_concrete": 39,
                "num_explored_lambda": 245,
                "num_explored_none": 78,
                "num_inputs": 1,
                "num_kept_concrete": 21,
                "num_kept_lambda": 123,
                "num_values_explored": 362,
                "num_values_kept": 144,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.933449923992157,
            "num_unique_values": 262,
            "solution": "Scanl1(lambda u1, u2: 3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 22.56637168141593,
                "explored_percent_lambda": 48.96755162241888,
                "explored_percent_none": 28.466076696165192,
                "kept_percent_concrete": 30.039525691699605,
                "kept_percent_lambda": 69.96047430830039,
                "num_examples": 4,
                "num_explored_concrete": 153,
                "num_explored_lambda": 332,
                "num_explored_none": 193,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 177,
                "num_values_explored": 678,
                "num_values_kept": 253,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9333587680011988,
            "num_unique_values": 163,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 33.08641975308642,
                "explored_percent_lambda": 39.01234567901235,
                "explored_percent_none": 27.901234567901234,
                "kept_percent_concrete": 52.287581699346404,
                "kept_percent_lambda": 47.712418300653596,
                "num_examples": 5,
                "num_explored_concrete": 134,
                "num_explored_lambda": 158,
                "num_explored_none": 113,
                "num_inputs": 2,
                "num_kept_concrete": 80,
                "num_kept_lambda": 73,
                "num_values_explored": 405,
                "num_values_kept": 153,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.8344646468758583,
            "num_unique_values": 367,
            "solution": "Head(Map(lambda u1: (lambda v1: IntDivide(v1, Add(x1, 1)))(u1), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 55.09383378016086,
                "explored_percent_lambda": 14.67828418230563,
                "explored_percent_none": 30.22788203753351,
                "kept_percent_concrete": 75.07002801120449,
                "kept_percent_lambda": 24.92997198879552,
                "num_examples": 4,
                "num_explored_concrete": 822,
                "num_explored_lambda": 219,
                "num_explored_none": 451,
                "num_inputs": 2,
                "num_kept_concrete": 268,
                "num_kept_lambda": 89,
                "num_values_explored": 1492,
                "num_values_kept": 357,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18933936953544617,
            "num_unique_values": 70,
            "solution": "Max(x1, Square(4))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 98.93617021276596,
                "explored_percent_lambda": 1.0638297872340425,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 98.36065573770492,
                "kept_percent_lambda": 1.639344262295082,
                "num_examples": 2,
                "num_explored_concrete": 93,
                "num_explored_lambda": 1,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 60,
                "num_kept_lambda": 1,
                "num_values_explored": 94,
                "num_values_kept": 61,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8039088770747185,
            "num_unique_values": 285,
            "solution": "Multiply(4, Minimum(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 29.379310344827587,
                "explored_percent_lambda": 49.6551724137931,
                "explored_percent_none": 20.96551724137931,
                "kept_percent_concrete": 54.34782608695652,
                "kept_percent_lambda": 45.65217391304348,
                "num_examples": 4,
                "num_explored_concrete": 213,
                "num_explored_lambda": 360,
                "num_explored_none": 152,
                "num_inputs": 1,
                "num_kept_concrete": 150,
                "num_kept_lambda": 126,
                "num_values_explored": 725,
                "num_values_kept": 276,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.561938676983118,
            "num_unique_values": 272,
            "solution": "Multiply(4, Count(lambda u1: (lambda v1: Equal(0, v1))(u1), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 42.813141683778234,
                "explored_percent_lambda": 38.29568788501027,
                "explored_percent_none": 18.8911704312115,
                "kept_percent_concrete": 48.28897338403042,
                "kept_percent_lambda": 51.71102661596958,
                "num_examples": 2,
                "num_explored_concrete": 417,
                "num_explored_lambda": 373,
                "num_explored_none": 184,
                "num_inputs": 1,
                "num_kept_concrete": 127,
                "num_kept_lambda": 136,
                "num_values_explored": 974,
                "num_values_kept": 263,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4843371324241161,
            "num_unique_values": 267,
            "solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 39.365671641791046,
                "explored_percent_lambda": 44.776119402985074,
                "explored_percent_none": 15.85820895522388,
                "kept_percent_concrete": 52.52918287937743,
                "kept_percent_lambda": 47.47081712062257,
                "num_examples": 5,
                "num_explored_concrete": 211,
                "num_explored_lambda": 240,
                "num_explored_none": 85,
                "num_inputs": 2,
                "num_kept_concrete": 135,
                "num_kept_lambda": 122,
                "num_values_explored": 536,
                "num_values_kept": 257,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.317925633862615,
            "num_unique_values": 786,
            "solution": "Add(2, Multiply(-1, Sum(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 56.42080517190714,
                "explored_percent_lambda": 19.424037613870116,
                "explored_percent_none": 24.155157214222744,
                "kept_percent_concrete": 60.48906048906049,
                "kept_percent_lambda": 39.51093951093951,
                "num_examples": 3,
                "num_explored_concrete": 1920,
                "num_explored_lambda": 661,
                "num_explored_none": 822,
                "num_inputs": 1,
                "num_kept_concrete": 470,
                "num_kept_lambda": 307,
                "num_values_explored": 3403,
                "num_values_kept": 777,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8321063835173845,
            "num_unique_values": 260,
            "solution": "Scanl1(lambda u1, u2: Sum(Take(4, x2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 29.05982905982906,
                "explored_percent_lambda": 48.29059829059829,
                "explored_percent_none": 22.64957264957265,
                "kept_percent_concrete": 48.0,
                "kept_percent_lambda": 52.0,
                "num_examples": 2,
                "num_explored_concrete": 204,
                "num_explored_lambda": 339,
                "num_explored_none": 159,
                "num_inputs": 2,
                "num_kept_concrete": 120,
                "num_kept_lambda": 130,
                "num_values_explored": 702,
                "num_values_kept": 250,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8394368682056665,
            "num_unique_values": 245,
            "solution": "ZipWith(lambda u1, u2: (lambda v1, v2: Min(v1, v2))(u1, u2), Sort(x1), Drop(1, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 24.813153961136024,
                "explored_percent_lambda": 44.095665171898354,
                "explored_percent_none": 31.09118086696562,
                "kept_percent_concrete": 26.271186440677965,
                "kept_percent_lambda": 73.72881355932203,
                "num_examples": 3,
                "num_explored_concrete": 166,
                "num_explored_lambda": 295,
                "num_explored_none": 208,
                "num_inputs": 1,
                "num_kept_concrete": 62,
                "num_kept_lambda": 174,
                "num_values_explored": 669,
                "num_values_kept": 236,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4389646481722593,
            "num_unique_values": 198,
            "solution": "Sum(Sort(Drop(x1, Take(4, x2))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 23.95498392282958,
                "explored_percent_lambda": 39.71061093247589,
                "explored_percent_none": 36.334405144694536,
                "kept_percent_concrete": 48.93617021276596,
                "kept_percent_lambda": 51.06382978723404,
                "num_examples": 3,
                "num_explored_concrete": 149,
                "num_explored_lambda": 247,
                "num_explored_none": 226,
                "num_inputs": 2,
                "num_kept_concrete": 92,
                "num_kept_lambda": 96,
                "num_values_explored": 622,
                "num_values_kept": 188,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.868342088535428,
            "num_unique_values": 205,
            "solution": "Map(lambda u1: Head(x2), Drop(2, x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 22.41169305724726,
                "explored_percent_lambda": 50.79171741778319,
                "explored_percent_none": 26.796589524969548,
                "kept_percent_concrete": 26.666666666666668,
                "kept_percent_lambda": 73.33333333333333,
                "num_examples": 2,
                "num_explored_concrete": 184,
                "num_explored_lambda": 417,
                "num_explored_none": 220,
                "num_inputs": 2,
                "num_kept_concrete": 52,
                "num_kept_lambda": 143,
                "num_values_explored": 821,
                "num_values_kept": 195,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.2419346403330564,
            "num_unique_values": 250,
            "solution": "Scanl1(lambda u1, u2: Head(x2), ZipWith(lambda u1, u2: Last(x2), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 30.103806228373703,
                "explored_percent_lambda": 38.86966551326413,
                "explored_percent_none": 31.02652825836217,
                "kept_percent_concrete": 43.333333333333336,
                "kept_percent_lambda": 56.666666666666664,
                "num_examples": 3,
                "num_explored_concrete": 261,
                "num_explored_lambda": 337,
                "num_explored_none": 269,
                "num_inputs": 2,
                "num_kept_concrete": 104,
                "num_kept_lambda": 136,
                "num_values_explored": 867,
                "num_values_kept": 240,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.595227112993598,
            "num_unique_values": 556,
            "solution": "Add(Minimum(x1), Count(lambda u1: (lambda v1: IsEven(v1))(u1), Drop(1, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 59.73154362416108,
                "explored_percent_lambda": 27.325023969319272,
                "explored_percent_none": 12.943432406519655,
                "kept_percent_concrete": 67.76556776556777,
                "kept_percent_lambda": 32.234432234432234,
                "num_examples": 4,
                "num_explored_concrete": 623,
                "num_explored_lambda": 285,
                "num_explored_none": 135,
                "num_inputs": 2,
                "num_kept_concrete": 370,
                "num_kept_lambda": 176,
                "num_values_explored": 1043,
                "num_values_kept": 546,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 112.27444412745535,
            "num_unique_values": 5324,
            "solution": "Add(-1, Subtract(-1, Count(lambda u1: (lambda v1: IsOdd(v1))(u1), Take(Head(x1), x1))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 88.43591744867769,
                "explored_percent_lambda": 6.1568620332891655,
                "explored_percent_none": 5.407220518033144,
                "kept_percent_concrete": 82.95390404515523,
                "kept_percent_lambda": 17.04609595484478,
                "num_examples": 5,
                "num_explored_concrete": 48722,
                "num_explored_lambda": 3392,
                "num_explored_none": 2979,
                "num_inputs": 1,
                "num_kept_concrete": 4409,
                "num_kept_lambda": 906,
                "num_values_explored": 55093,
                "num_values_kept": 5315,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.622826712206006,
            "num_unique_values": 546,
            "solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 57.243460764587525,
                "explored_percent_lambda": 34.20523138832998,
                "explored_percent_none": 8.551307847082494,
                "kept_percent_concrete": 64.73880597014926,
                "kept_percent_lambda": 35.26119402985075,
                "num_examples": 5,
                "num_explored_concrete": 569,
                "num_explored_lambda": 340,
                "num_explored_none": 85,
                "num_inputs": 2,
                "num_kept_concrete": 347,
                "num_kept_lambda": 189,
                "num_values_explored": 994,
                "num_values_kept": 536,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.0255609042942524,
            "num_unique_values": 243,
            "solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), Map(lambda u1: Head(x2), x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 29.706601466992666,
                "explored_percent_lambda": 44.25427872860636,
                "explored_percent_none": 26.03911980440098,
                "kept_percent_concrete": 49.35622317596567,
                "kept_percent_lambda": 50.64377682403433,
                "num_examples": 2,
                "num_explored_concrete": 243,
                "num_explored_lambda": 362,
                "num_explored_none": 213,
                "num_inputs": 2,
                "num_kept_concrete": 115,
                "num_kept_lambda": 118,
                "num_values_explored": 818,
                "num_values_kept": 233,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.112523203715682,
            "num_unique_values": 153,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 31.545064377682404,
                "explored_percent_lambda": 37.33905579399141,
                "explored_percent_none": 31.11587982832618,
                "kept_percent_concrete": 47.88732394366197,
                "kept_percent_lambda": 52.11267605633803,
                "num_examples": 2,
                "num_explored_concrete": 147,
                "num_explored_lambda": 174,
                "num_explored_none": 145,
                "num_inputs": 3,
                "num_kept_concrete": 68,
                "num_kept_lambda": 74,
                "num_values_explored": 466,
                "num_values_kept": 142,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.389645170420408,
            "num_unique_values": 835,
            "solution": "Multiply(-1, Head(ZipWith(lambda u1, u2: (lambda v1: Subtract(Last(x1), v1))(u2), x2, Reverse(x2))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 60.11875309252845,
                "explored_percent_lambda": 22.365165759524988,
                "explored_percent_none": 17.51608114794656,
                "kept_percent_concrete": 74.42424242424242,
                "kept_percent_lambda": 25.575757575757574,
                "num_examples": 5,
                "num_explored_concrete": 1215,
                "num_explored_lambda": 452,
                "num_explored_none": 354,
                "num_inputs": 2,
                "num_kept_concrete": 614,
                "num_kept_lambda": 211,
                "num_values_explored": 2021,
                "num_values_kept": 825,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 37.56928214430809,
            "num_unique_values": 872,
            "solution": "Add(4, Multiply(-1, IntDivide(x1, 4)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 30.654145375868893,
                "explored_percent_lambda": 7.706117939511118,
                "explored_percent_none": 61.63973668461999,
                "kept_percent_concrete": 92.46813441483198,
                "kept_percent_lambda": 7.531865585168019,
                "num_examples": 5,
                "num_explored_concrete": 6659,
                "num_explored_lambda": 1674,
                "num_explored_none": 13390,
                "num_inputs": 1,
                "num_kept_concrete": 798,
                "num_kept_lambda": 65,
                "num_values_explored": 21723,
                "num_values_kept": 863,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.687180669978261,
            "num_unique_values": 227,
            "solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 19.52755905511811,
                "explored_percent_lambda": 60.15748031496063,
                "explored_percent_none": 20.31496062992126,
                "kept_percent_concrete": 37.61467889908257,
                "kept_percent_lambda": 62.38532110091743,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 382,
                "num_explored_none": 129,
                "num_inputs": 1,
                "num_kept_concrete": 82,
                "num_kept_lambda": 136,
                "num_values_explored": 635,
                "num_values_kept": 218,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.990400537848473,
            "num_unique_values": 1333,
            "solution": "Add(x1, Subtract(Last(Map(lambda u1: (lambda v1: Subtract(v1, x1))(u1), x2)), Square(x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 84.73446058585377,
                "explored_percent_lambda": 10.454870207192188,
                "explored_percent_none": 4.810669206954037,
                "kept_percent_concrete": 85.18518518518519,
                "kept_percent_lambda": 14.814814814814815,
                "num_examples": 5,
                "num_explored_concrete": 3558,
                "num_explored_lambda": 439,
                "num_explored_none": 202,
                "num_inputs": 2,
                "num_kept_concrete": 1127,
                "num_kept_lambda": 196,
                "num_values_explored": 4199,
                "num_values_kept": 1323,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.0669881720095873,
            "num_unique_values": 537,
            "solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), Map(lambda u1: Head(x2), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 56.09579100145138,
                "explored_percent_lambda": 30.76923076923077,
                "explored_percent_none": 13.134978229317852,
                "kept_percent_concrete": 64.70588235294117,
                "kept_percent_lambda": 35.294117647058826,
                "num_examples": 3,
                "num_explored_concrete": 773,
                "num_explored_lambda": 424,
                "num_explored_none": 181,
                "num_inputs": 2,
                "num_kept_concrete": 341,
                "num_kept_lambda": 186,
                "num_values_explored": 1378,
                "num_values_kept": 527,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.00272898748517,
            "num_unique_values": 339,
            "solution": "Multiply(-1, Multiply(Square(4), Min(-1, Subtract(1, Add(x1, x1)))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 27.13275726630008,
                "explored_percent_lambda": 11.076197957580519,
                "explored_percent_none": 61.791044776119406,
                "kept_percent_concrete": 83.63636363636364,
                "kept_percent_lambda": 16.363636363636363,
                "num_examples": 2,
                "num_explored_concrete": 1727,
                "num_explored_lambda": 705,
                "num_explored_none": 3933,
                "num_inputs": 1,
                "num_kept_concrete": 276,
                "num_kept_lambda": 54,
                "num_values_explored": 6365,
                "num_values_kept": 330,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.0244191344827414,
            "num_unique_values": 255,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.97536945812808,
                "explored_percent_lambda": 40.39408866995074,
                "explored_percent_none": 24.63054187192118,
                "kept_percent_concrete": 53.06122448979592,
                "kept_percent_lambda": 46.93877551020408,
                "num_examples": 5,
                "num_explored_concrete": 284,
                "num_explored_lambda": 328,
                "num_explored_none": 200,
                "num_inputs": 2,
                "num_kept_concrete": 130,
                "num_kept_lambda": 115,
                "num_values_explored": 812,
                "num_values_kept": 245,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.190527154132724,
            "num_unique_values": 329,
            "solution": "Max(Square(Last(x2)), Square(Head(x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 37.753882915173236,
                "explored_percent_lambda": 44.56391875746714,
                "explored_percent_none": 17.682198327359618,
                "kept_percent_concrete": 55.172413793103445,
                "kept_percent_lambda": 44.827586206896555,
                "num_examples": 3,
                "num_explored_concrete": 316,
                "num_explored_lambda": 373,
                "num_explored_none": 148,
                "num_inputs": 2,
                "num_kept_concrete": 176,
                "num_kept_lambda": 143,
                "num_values_explored": 837,
                "num_values_kept": 319,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.569426802918315,
            "num_unique_values": 539,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 37.91848617176128,
                "explored_percent_lambda": 48.47161572052402,
                "explored_percent_none": 13.609898107714702,
                "kept_percent_concrete": 35.283018867924525,
                "kept_percent_lambda": 64.71698113207547,
                "num_examples": 2,
                "num_explored_concrete": 521,
                "num_explored_lambda": 666,
                "num_explored_none": 187,
                "num_inputs": 1,
                "num_kept_concrete": 187,
                "num_kept_lambda": 343,
                "num_values_explored": 1374,
                "num_values_kept": 530,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.5334785636514425,
            "num_unique_values": 263,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Min(-1, (lambda v1: Subtract(-1, v1))(v1)))(u2), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 22.031963470319635,
                "explored_percent_lambda": 50.68493150684932,
                "explored_percent_none": 27.28310502283105,
                "kept_percent_concrete": 32.28346456692913,
                "kept_percent_lambda": 67.71653543307086,
                "num_examples": 4,
                "num_explored_concrete": 193,
                "num_explored_lambda": 444,
                "num_explored_none": 239,
                "num_inputs": 1,
                "num_kept_concrete": 82,
                "num_kept_lambda": 172,
                "num_values_explored": 876,
                "num_values_kept": 254,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.993258196860552,
            "num_unique_values": 497,
            "solution": "Map(lambda u1: (lambda v1: Min(v1, Sum(x1)))(u1), Scanl1(lambda u1, u2: x2, x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 49.07063197026022,
                "explored_percent_lambda": 30.260223048327138,
                "explored_percent_none": 20.66914498141264,
                "kept_percent_concrete": 60.780287474332646,
                "kept_percent_lambda": 39.219712525667354,
                "num_examples": 5,
                "num_explored_concrete": 660,
                "num_explored_lambda": 407,
                "num_explored_none": 278,
                "num_inputs": 2,
                "num_kept_concrete": 296,
                "num_kept_lambda": 191,
                "num_values_explored": 1345,
                "num_values_kept": 487,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 229.52643812447786,
            "num_unique_values": 5490,
            "solution": "Add(x3, Min(Multiply(-1, Sum(x2)), Multiply(3, Subtract(x1, 3))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 84.829293274155,
                "explored_percent_lambda": 3.104301809491294,
                "explored_percent_none": 12.066404916353704,
                "kept_percent_concrete": 93.75798503376528,
                "kept_percent_lambda": 6.242014966234715,
                "num_examples": 2,
                "num_explored_concrete": 99386,
                "num_explored_lambda": 3637,
                "num_explored_none": 14137,
                "num_inputs": 3,
                "num_kept_concrete": 5137,
                "num_kept_lambda": 342,
                "num_values_explored": 117160,
                "num_values_kept": 5479,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.0087334290146828,
            "num_unique_values": 263,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 22.78688524590164,
                "explored_percent_lambda": 52.950819672131146,
                "explored_percent_none": 24.262295081967213,
                "kept_percent_concrete": 29.52755905511811,
                "kept_percent_lambda": 70.4724409448819,
                "num_examples": 2,
                "num_explored_concrete": 139,
                "num_explored_lambda": 323,
                "num_explored_none": 148,
                "num_inputs": 1,
                "num_kept_concrete": 75,
                "num_kept_lambda": 179,
                "num_values_explored": 610,
                "num_values_kept": 254,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 279.60377492010593,
            "num_unique_values": 6391,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: (lambda v1: Subtract(1, v1))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 59.26759089720115,
                "explored_percent_lambda": 31.04717063388264,
                "explored_percent_none": 9.685238468916209,
                "kept_percent_concrete": 40.723910999686616,
                "kept_percent_lambda": 59.276089000313384,
                "num_examples": 2,
                "num_explored_concrete": 67974,
                "num_explored_lambda": 35608,
                "num_explored_none": 11108,
                "num_inputs": 1,
                "num_kept_concrete": 2599,
                "num_kept_lambda": 3783,
                "num_values_explored": 114690,
                "num_values_kept": 6382,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.32485856115818,
            "num_unique_values": 203,
            "solution": "Add(Subtract(x1, x2), Square(IntDivide(4, x2)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 25.091263081041618,
                "explored_percent_lambda": 9.759065466050133,
                "explored_percent_none": 65.14967145290825,
                "kept_percent_concrete": 87.56476683937824,
                "kept_percent_lambda": 12.435233160621761,
                "num_examples": 2,
                "num_explored_concrete": 1031,
                "num_explored_lambda": 401,
                "num_explored_none": 2677,
                "num_inputs": 2,
                "num_kept_concrete": 169,
                "num_kept_lambda": 24,
                "num_values_explored": 4109,
                "num_values_kept": 193,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.489765355363488,
            "num_unique_values": 388,
            "solution": "Map(lambda u1: Add(Max(4, IntDivide(x2, 4)), -1), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 41.535714285714285,
                "explored_percent_lambda": 17.178571428571427,
                "explored_percent_none": 41.285714285714285,
                "kept_percent_concrete": 60.317460317460316,
                "kept_percent_lambda": 39.682539682539684,
                "num_examples": 4,
                "num_explored_concrete": 1163,
                "num_explored_lambda": 481,
                "num_explored_none": 1156,
                "num_inputs": 2,
                "num_kept_concrete": 228,
                "num_kept_lambda": 150,
                "num_values_explored": 2800,
                "num_values_kept": 378,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.372833700850606,
            "num_unique_values": 1467,
            "solution": "Scanl1(lambda u1, u2: Add(-1, Access(1, x1)), Map(lambda u1: Add(Head(x1), -1), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 77.82064928153272,
                "explored_percent_lambda": 16.218733368813197,
                "explored_percent_none": 5.960617349654071,
                "kept_percent_concrete": 70.2127659574468,
                "kept_percent_lambda": 29.78723404255319,
                "num_examples": 3,
                "num_explored_concrete": 5849,
                "num_explored_lambda": 1219,
                "num_explored_none": 448,
                "num_inputs": 2,
                "num_kept_concrete": 1023,
                "num_kept_lambda": 434,
                "num_values_explored": 7516,
                "num_values_kept": 1457,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.908238550648093,
            "num_unique_values": 962,
            "solution": "Subtract(Square(Add(2, 4)), If(IsEven(Head(x1)), 4, 2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 70.82934303773223,
                "explored_percent_lambda": 13.388239800804444,
                "explored_percent_none": 15.782417161463322,
                "kept_percent_concrete": 74.50157397691501,
                "kept_percent_lambda": 25.498426023084996,
                "num_examples": 4,
                "num_explored_concrete": 3698,
                "num_explored_lambda": 699,
                "num_explored_none": 824,
                "num_inputs": 1,
                "num_kept_concrete": 710,
                "num_kept_lambda": 243,
                "num_values_explored": 5221,
                "num_values_kept": 953,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8667363245040178,
            "num_unique_values": 127,
            "solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 95.3061224489796,
                "explored_percent_lambda": 4.285714285714286,
                "explored_percent_none": 0.40816326530612246,
                "kept_percent_concrete": 82.20338983050847,
                "kept_percent_lambda": 17.796610169491526,
                "num_examples": 5,
                "num_explored_concrete": 467,
                "num_explored_lambda": 21,
                "num_explored_none": 2,
                "num_inputs": 1,
                "num_kept_concrete": 97,
                "num_kept_lambda": 21,
                "num_values_explored": 490,
                "num_values_kept": 118,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7603266444057226,
            "num_unique_values": 240,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x3, Take(-1, x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 30.739299610894943,
                "explored_percent_lambda": 29.831387808041505,
                "explored_percent_none": 39.429312581063556,
                "kept_percent_concrete": 48.90829694323144,
                "kept_percent_lambda": 51.09170305676856,
                "num_examples": 2,
                "num_explored_concrete": 237,
                "num_explored_lambda": 230,
                "num_explored_none": 304,
                "num_inputs": 3,
                "num_kept_concrete": 112,
                "num_kept_lambda": 117,
                "num_values_explored": 771,
                "num_values_kept": 229,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.231012208387256,
            "num_unique_values": 223,
            "solution": "Add(Min(x2, 3), Add(x1, Max(x2, 4)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 24.203821656050955,
                "explored_percent_lambda": 11.636452719255267,
                "explored_percent_none": 64.15972562469378,
                "kept_percent_concrete": 81.22065727699531,
                "kept_percent_lambda": 18.779342723004696,
                "num_examples": 2,
                "num_explored_concrete": 988,
                "num_explored_lambda": 475,
                "num_explored_none": 2619,
                "num_inputs": 2,
                "num_kept_concrete": 173,
                "num_kept_lambda": 40,
                "num_values_explored": 4082,
                "num_values_kept": 213,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.732682503759861,
            "num_unique_values": 249,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 33.4716459197787,
                "explored_percent_lambda": 35.5463347164592,
                "explored_percent_none": 30.982019363762102,
                "kept_percent_concrete": 53.78151260504202,
                "kept_percent_lambda": 46.21848739495798,
                "num_examples": 4,
                "num_explored_concrete": 242,
                "num_explored_lambda": 257,
                "num_explored_none": 224,
                "num_inputs": 3,
                "num_kept_concrete": 128,
                "num_kept_lambda": 110,
                "num_values_explored": 723,
                "num_values_kept": 238,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.553854400292039,
            "num_unique_values": 504,
            "solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 58.166969147005446,
                "explored_percent_lambda": 30.308529945553538,
                "explored_percent_none": 11.524500907441016,
                "kept_percent_concrete": 65.11156186612575,
                "kept_percent_lambda": 34.88843813387424,
                "num_examples": 4,
                "num_explored_concrete": 641,
                "num_explored_lambda": 334,
                "num_explored_none": 127,
                "num_inputs": 3,
                "num_kept_concrete": 321,
                "num_kept_lambda": 172,
                "num_values_explored": 1102,
                "num_values_kept": 493,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0126479119062,
            "num_unique_values": 8031,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.50184820534079,
                "explored_percent_lambda": 6.222751925933602,
                "explored_percent_none": 54.2753998687256,
                "kept_percent_concrete": 97.98030170801646,
                "kept_percent_lambda": 2.019698291983543,
                "num_examples": 4,
                "num_explored_concrete": 114346,
                "num_explored_lambda": 18013,
                "num_explored_none": 157111,
                "num_inputs": 2,
                "num_kept_concrete": 7859,
                "num_kept_lambda": 162,
                "num_values_explored": 289470,
                "num_values_kept": 8021,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.1294209305197,
            "num_unique_values": 253,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), Map(lambda u1: Head(x1), Take(3, x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 27.086007702182286,
                "explored_percent_lambda": 51.47625160462131,
                "explored_percent_none": 21.437740693196407,
                "kept_percent_concrete": 43.85245901639344,
                "kept_percent_lambda": 56.14754098360656,
                "num_examples": 5,
                "num_explored_concrete": 211,
                "num_explored_lambda": 401,
                "num_explored_none": 167,
                "num_inputs": 1,
                "num_kept_concrete": 107,
                "num_kept_lambda": 137,
                "num_values_explored": 779,
                "num_values_kept": 244,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6161859091371298,
            "num_unique_values": 263,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Max(x3, v1))(u1), Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 36.37795275590551,
                "explored_percent_lambda": 37.79527559055118,
                "explored_percent_none": 25.826771653543307,
                "kept_percent_concrete": 60.317460317460316,
                "kept_percent_lambda": 39.682539682539684,
                "num_examples": 5,
                "num_explored_concrete": 231,
                "num_explored_lambda": 240,
                "num_explored_none": 164,
                "num_inputs": 3,
                "num_kept_concrete": 152,
                "num_kept_lambda": 100,
                "num_values_explored": 635,
                "num_values_kept": 252,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0098961554468,
            "num_unique_values": 13012,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.68617410387711,
                "explored_percent_lambda": 27.15865570807694,
                "explored_percent_none": 6.1551701880459575,
                "kept_percent_concrete": 49.31169730062293,
                "kept_percent_lambda": 50.68830269937707,
                "num_examples": 3,
                "num_explored_concrete": 154972,
                "num_explored_lambda": 63114,
                "num_explored_none": 14304,
                "num_inputs": 1,
                "num_kept_concrete": 6412,
                "num_kept_lambda": 6591,
                "num_values_explored": 232390,
                "num_values_kept": 13003,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 22.265451619401574,
            "num_unique_values": 1665,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Min(x1, (lambda v1: Subtract(Add(x1, 1), v1))(v1)))(u2), x2)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 65.40113214913137,
                "explored_percent_lambda": 23.90201054069881,
                "explored_percent_none": 10.696857310169822,
                "kept_percent_concrete": 51.3595166163142,
                "kept_percent_lambda": 48.6404833836858,
                "num_examples": 4,
                "num_explored_concrete": 6701,
                "num_explored_lambda": 2449,
                "num_explored_none": 1096,
                "num_inputs": 2,
                "num_kept_concrete": 850,
                "num_kept_lambda": 805,
                "num_values_explored": 10246,
                "num_values_kept": 1655,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0911720525473,
            "num_unique_values": 16100,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 79.82419991231916,
                "explored_percent_lambda": 13.743095133713284,
                "explored_percent_none": 6.4327049539675585,
                "kept_percent_concrete": 74.11274784013922,
                "kept_percent_lambda": 25.887252159860775,
                "num_examples": 5,
                "num_explored_concrete": 182079,
                "num_explored_lambda": 31348,
                "num_explored_none": 14673,
                "num_inputs": 3,
                "num_kept_concrete": 11924,
                "num_kept_lambda": 4165,
                "num_values_explored": 228100,
                "num_values_kept": 16089,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.2865736074745655,
            "num_unique_values": 235,
            "solution": "ZipWith(lambda u1, u2: Sum(x1), x2, Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 26.350461133069828,
                "explored_percent_lambda": 53.359683794466406,
                "explored_percent_none": 20.28985507246377,
                "kept_percent_concrete": 38.666666666666664,
                "kept_percent_lambda": 61.333333333333336,
                "num_examples": 5,
                "num_explored_concrete": 200,
                "num_explored_lambda": 405,
                "num_explored_none": 154,
                "num_inputs": 2,
                "num_kept_concrete": 87,
                "num_kept_lambda": 138,
                "num_values_explored": 759,
                "num_values_kept": 225,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 13.091097239404917,
            "num_unique_values": 688,
            "solution": "Min(Subtract(x1, 3), Add(2, Subtract(x1, Head(x2))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 58.30354687929612,
                "explored_percent_lambda": 7.904866648336541,
                "explored_percent_none": 33.791586472367335,
                "kept_percent_concrete": 82.59587020648968,
                "kept_percent_lambda": 17.404129793510325,
                "num_examples": 5,
                "num_explored_concrete": 4241,
                "num_explored_lambda": 575,
                "num_explored_none": 2458,
                "num_inputs": 2,
                "num_kept_concrete": 560,
                "num_kept_lambda": 118,
                "num_values_explored": 7274,
                "num_values_kept": 678,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.521319728344679,
            "num_unique_values": 823,
            "solution": "Sort(Scanl1(lambda u1, u2: Multiply(Add(x1, 3), IntDivide(4, x1)), Map(lambda u1: 1, x2)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 58.13131313131313,
                "explored_percent_lambda": 18.164983164983166,
                "explored_percent_none": 23.703703703703702,
                "kept_percent_concrete": 59.65559655596556,
                "kept_percent_lambda": 40.34440344403444,
                "num_examples": 2,
                "num_explored_concrete": 3453,
                "num_explored_lambda": 1079,
                "num_explored_none": 1408,
                "num_inputs": 2,
                "num_kept_concrete": 485,
                "num_kept_lambda": 328,
                "num_values_explored": 5940,
                "num_values_kept": 813,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.60496251657605,
            "num_unique_values": 963,
            "solution": "Subtract(Add(x1, Multiply(-1, Square(Square(3)))), Square(3))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 34.38602744608804,
                "explored_percent_lambda": 10.543575120299412,
                "explored_percent_none": 55.07039743361255,
                "kept_percent_concrete": 89.30817610062893,
                "kept_percent_lambda": 10.69182389937107,
                "num_examples": 4,
                "num_explored_concrete": 9647,
                "num_explored_lambda": 2958,
                "num_explored_none": 15450,
                "num_inputs": 1,
                "num_kept_concrete": 852,
                "num_kept_lambda": 102,
                "num_values_explored": 28055,
                "num_values_kept": 954,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4695108961313963,
            "num_unique_values": 215,
            "solution": "Map(lambda u1: (lambda v1: If(IsOdd(x2), v1, 3))(u1), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 28.908554572271388,
                "explored_percent_lambda": 36.283185840707965,
                "explored_percent_none": 34.80825958702065,
                "kept_percent_concrete": 54.63414634146341,
                "kept_percent_lambda": 45.36585365853659,
                "num_examples": 4,
                "num_explored_concrete": 196,
                "num_explored_lambda": 246,
                "num_explored_none": 236,
                "num_inputs": 2,
                "num_kept_concrete": 112,
                "num_kept_lambda": 93,
                "num_values_explored": 678,
                "num_values_kept": 205,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.4919855035841465,
            "num_unique_values": 541,
            "solution": "Subtract(3, Add(Square(4), Sum(Drop(3, Reverse(x1)))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 56.14778921865536,
                "explored_percent_lambda": 27.135069654754695,
                "explored_percent_none": 16.717141126589947,
                "kept_percent_concrete": 66.16541353383458,
                "kept_percent_lambda": 33.83458646616541,
                "num_examples": 3,
                "num_explored_concrete": 927,
                "num_explored_lambda": 448,
                "num_explored_none": 276,
                "num_inputs": 1,
                "num_kept_concrete": 352,
                "num_kept_lambda": 180,
                "num_values_explored": 1651,
                "num_values_kept": 532,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.116055885329843,
            "num_unique_values": 454,
            "solution": "Reverse(Scanl1(lambda u1, u2: Add(x1, -1), Map(lambda u1: (lambda v1: Subtract(v1, 1))(u1), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 33.24053452115813,
                "explored_percent_lambda": 34.85523385300668,
                "explored_percent_none": 31.90423162583519,
                "kept_percent_concrete": 40.31531531531532,
                "kept_percent_lambda": 59.68468468468468,
                "num_examples": 2,
                "num_explored_concrete": 597,
                "num_explored_lambda": 626,
                "num_explored_none": 573,
                "num_inputs": 2,
                "num_kept_concrete": 179,
                "num_kept_lambda": 265,
                "num_values_explored": 1796,
                "num_values_kept": 444,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 80.60117272473872,
            "num_unique_values": 1650,
            "solution": "Subtract(IntDivide(Subtract(x1, Square(3)), Multiply(3, Add(-1, -1))), 4)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 34.512473609375675,
                "explored_percent_lambda": 8.740143909690206,
                "explored_percent_none": 56.74738248093412,
                "kept_percent_concrete": 93.72333942717854,
                "kept_percent_lambda": 6.27666057282145,
                "num_examples": 4,
                "num_explored_concrete": 16020,
                "num_explored_lambda": 4057,
                "num_explored_none": 26341,
                "num_inputs": 1,
                "num_kept_concrete": 1538,
                "num_kept_lambda": 103,
                "num_values_explored": 46418,
                "num_values_kept": 1641,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.580654464662075,
            "num_unique_values": 1551,
            "solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 81.09612300726347,
                "explored_percent_lambda": 12.159230261296104,
                "explored_percent_none": 6.74464673144043,
                "kept_percent_concrete": 73.97793640493187,
                "kept_percent_lambda": 26.022063595068136,
                "num_examples": 2,
                "num_explored_concrete": 8597,
                "num_explored_lambda": 1289,
                "num_explored_none": 715,
                "num_inputs": 2,
                "num_kept_concrete": 1140,
                "num_kept_lambda": 401,
                "num_values_explored": 10601,
                "num_values_kept": 1541,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0362731348723,
            "num_unique_values": 14771,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 89.05768093623574,
                "explored_percent_lambda": 2.3699424424317965,
                "explored_percent_none": 8.57237662133246,
                "kept_percent_concrete": 95.23067542849401,
                "kept_percent_lambda": 4.7693245715059955,
                "num_examples": 5,
                "num_explored_concrete": 209347,
                "num_explored_lambda": 5571,
                "num_explored_none": 20151,
                "num_inputs": 2,
                "num_kept_concrete": 14057,
                "num_kept_lambda": 704,
                "num_values_explored": 235069,
                "num_values_kept": 14761,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6290379222482443,
            "num_unique_values": 541,
            "solution": "Scanl1(lambda u1, u2: Subtract(-1, 2), Map(lambda u1: Subtract(Minimum(x1), 4), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 63.65930599369085,
                "explored_percent_lambda": 28.58044164037855,
                "explored_percent_none": 7.760252365930599,
                "kept_percent_concrete": 59.58646616541353,
                "kept_percent_lambda": 40.41353383458647,
                "num_examples": 3,
                "num_explored_concrete": 1009,
                "num_explored_lambda": 453,
                "num_explored_none": 123,
                "num_inputs": 1,
                "num_kept_concrete": 317,
                "num_kept_lambda": 215,
                "num_values_explored": 1585,
                "num_values_kept": 532,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.274535460397601,
            "num_unique_values": 505,
            "solution": "Map(lambda u1: Max(Add(2, 4), Multiply(2, Access(1, x2))), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 58.0715059588299,
                "explored_percent_lambda": 32.71939328277357,
                "explored_percent_none": 9.209100758396533,
                "kept_percent_concrete": 68.48484848484848,
                "kept_percent_lambda": 31.515151515151516,
                "num_examples": 5,
                "num_explored_concrete": 536,
                "num_explored_lambda": 302,
                "num_explored_none": 85,
                "num_inputs": 2,
                "num_kept_concrete": 339,
                "num_kept_lambda": 156,
                "num_values_explored": 923,
                "num_values_kept": 495,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 339.7581008654088,
            "num_unique_values": 8902,
            "solution": "Map(lambda u1: (lambda v1: Min(Min(4, Maximum(x1)), (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 60.34280886886412,
                "explored_percent_lambda": 31.52344676310173,
                "explored_percent_none": 8.133744368034147,
                "kept_percent_concrete": 37.782525581918364,
                "kept_percent_lambda": 62.217474418081636,
                "num_examples": 2,
                "num_explored_concrete": 81429,
                "num_explored_lambda": 42539,
                "num_explored_none": 10976,
                "num_inputs": 1,
                "num_kept_concrete": 3360,
                "num_kept_lambda": 5533,
                "num_values_explored": 134944,
                "num_values_kept": 8893,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.262545919045806,
            "num_unique_values": 250,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 29.04564315352697,
                "explored_percent_lambda": 37.06777316735823,
                "explored_percent_none": 33.8865836791148,
                "kept_percent_concrete": 54.39330543933055,
                "kept_percent_lambda": 45.60669456066945,
                "num_examples": 4,
                "num_explored_concrete": 210,
                "num_explored_lambda": 268,
                "num_explored_none": 245,
                "num_inputs": 3,
                "num_kept_concrete": 130,
                "num_kept_lambda": 109,
                "num_values_explored": 723,
                "num_values_kept": 239,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.269894693046808,
            "num_unique_values": 763,
            "solution": "Map(lambda u1: Add(Multiply(3, IntDivide(Head(x1), 4)), 1), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 42.68941765810895,
                "explored_percent_lambda": 25.82968065122104,
                "explored_percent_none": 31.480901690670006,
                "kept_percent_concrete": 39.389920424403186,
                "kept_percent_lambda": 60.610079575596814,
                "num_examples": 2,
                "num_explored_concrete": 2727,
                "num_explored_lambda": 1650,
                "num_explored_none": 2011,
                "num_inputs": 1,
                "num_kept_concrete": 297,
                "num_kept_lambda": 457,
                "num_values_explored": 6388,
                "num_values_kept": 754,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0249121133238,
            "num_unique_values": 14344,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 90.26579488566068,
                "explored_percent_lambda": 2.4277134593482947,
                "explored_percent_none": 7.306491654991028,
                "kept_percent_concrete": 95.29756505965256,
                "kept_percent_lambda": 4.70243494034745,
                "num_examples": 4,
                "num_explored_concrete": 220337,
                "num_explored_lambda": 5926,
                "num_explored_none": 17835,
                "num_inputs": 3,
                "num_kept_concrete": 13659,
                "num_kept_lambda": 674,
                "num_values_explored": 244098,
                "num_values_kept": 14333,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3101097159088,
            "num_unique_values": 11797,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.812650245218585,
                "explored_percent_lambda": 34.49193559507449,
                "explored_percent_none": 5.6954141597069325,
                "kept_percent_concrete": 39.16694944010859,
                "kept_percent_lambda": 60.83305055989141,
                "num_examples": 3,
                "num_explored_concrete": 130129,
                "num_explored_lambda": 75041,
                "num_explored_none": 12391,
                "num_inputs": 1,
                "num_kept_concrete": 4617,
                "num_kept_lambda": 7171,
                "num_values_explored": 217561,
                "num_values_kept": 11788,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3478209283203,
            "num_unique_values": 7038,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.13046788608306,
                "explored_percent_lambda": 8.046697967840762,
                "explored_percent_none": 50.822834146076175,
                "kept_percent_concrete": 94.09588846208564,
                "kept_percent_lambda": 5.904111537914355,
                "num_examples": 4,
                "num_explored_concrete": 113444,
                "num_explored_lambda": 22194,
                "num_explored_none": 140177,
                "num_inputs": 1,
                "num_kept_concrete": 6614,
                "num_kept_lambda": 415,
                "num_values_explored": 275815,
                "num_values_kept": 7029,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.352084385231137,
            "num_unique_values": 799,
            "solution": "Scanl1(lambda u1, u2: Square(Sum(Scanl1(lambda u1, u2: 4, x1))), Map(lambda u1: Square(Head(x1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 61.041740991794505,
                "explored_percent_lambda": 27.72029967891545,
                "explored_percent_none": 11.237959329290046,
                "kept_percent_concrete": 47.34177215189873,
                "kept_percent_lambda": 52.65822784810127,
                "num_examples": 2,
                "num_explored_concrete": 1711,
                "num_explored_lambda": 777,
                "num_explored_none": 315,
                "num_inputs": 1,
                "num_kept_concrete": 374,
                "num_kept_lambda": 416,
                "num_values_explored": 2803,
                "num_values_kept": 790,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 29.581312257796526,
            "num_unique_values": 2083,
            "solution": "Map(lambda u1: If(IsOdd(Sum(x1)), Square(3), Sum(Drop(1, x1))), x3)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 82.90126519474076,
                "explored_percent_lambda": 10.034730836020838,
                "explored_percent_none": 7.064003969238402,
                "kept_percent_concrete": 75.62741312741312,
                "kept_percent_lambda": 24.372586872586872,
                "num_examples": 5,
                "num_explored_concrete": 13367,
                "num_explored_lambda": 1618,
                "num_explored_none": 1139,
                "num_inputs": 3,
                "num_kept_concrete": 1567,
                "num_kept_lambda": 505,
                "num_values_explored": 16124,
                "num_values_kept": 2072,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.7466339766979218,
            "num_unique_values": 398,
            "solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), ZipWith(lambda u1, u2: Add(-1, -1), x2, x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 42.758186397984886,
                "explored_percent_lambda": 38.60201511335013,
                "explored_percent_none": 18.639798488664987,
                "kept_percent_concrete": 35.30927835051546,
                "kept_percent_lambda": 64.69072164948453,
                "num_examples": 2,
                "num_explored_concrete": 679,
                "num_explored_lambda": 613,
                "num_explored_none": 296,
                "num_inputs": 2,
                "num_kept_concrete": 137,
                "num_kept_lambda": 251,
                "num_values_explored": 1588,
                "num_values_kept": 388,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 376.7333857193589,
            "num_unique_values": 5321,
            "solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 58.503835509105386,
                "explored_percent_lambda": 18.321348683794817,
                "explored_percent_none": 23.174815807099797,
                "kept_percent_concrete": 66.47213855421687,
                "kept_percent_lambda": 33.52786144578313,
                "num_examples": 3,
                "num_explored_concrete": 92587,
                "num_explored_lambda": 28995,
                "num_explored_none": 36676,
                "num_inputs": 1,
                "num_kept_concrete": 3531,
                "num_kept_lambda": 1781,
                "num_values_explored": 158258,
                "num_values_kept": 5312,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 29.06623295508325,
            "num_unique_values": 2985,
            "solution": "Min(IntDivide(Sum(x1), Head(x1)), Sum(Map(lambda u1: x2, Drop(2, x1))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 91.13084894123705,
                "explored_percent_lambda": 5.573791594258866,
                "explored_percent_none": 3.295359464504087,
                "kept_percent_concrete": 87.15534633490249,
                "kept_percent_lambda": 12.844653665097512,
                "num_examples": 5,
                "num_explored_concrete": 14159,
                "num_explored_lambda": 866,
                "num_explored_none": 512,
                "num_inputs": 3,
                "num_kept_concrete": 2592,
                "num_kept_lambda": 382,
                "num_values_explored": 15537,
                "num_values_kept": 2974,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 12.439664332196116,
            "num_unique_values": 1158,
            "solution": "Scanl1(lambda u1, u2: Min(-1, IntDivide(x1, Head(x3))), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 70.65902578796562,
                "explored_percent_lambda": 9.527220630372494,
                "explored_percent_none": 19.813753581661892,
                "kept_percent_concrete": 75.06538796861378,
                "kept_percent_lambda": 24.934612031386227,
                "num_examples": 4,
                "num_explored_concrete": 4932,
                "num_explored_lambda": 665,
                "num_explored_none": 1383,
                "num_inputs": 3,
                "num_kept_concrete": 861,
                "num_kept_lambda": 286,
                "num_values_explored": 6980,
                "num_values_kept": 1147,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 15.181491039693356,
            "num_unique_values": 1383,
            "solution": "Take(-1, Scanl1(lambda u1, u2: 0, Map(lambda u1: Subtract(4, Access(1, x1)), x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 68.38516093835243,
                "explored_percent_lambda": 25.76377523186034,
                "explored_percent_none": 5.851063829787234,
                "kept_percent_concrete": 54.148471615720524,
                "kept_percent_lambda": 45.851528384279476,
                "num_examples": 2,
                "num_explored_concrete": 5014,
                "num_explored_lambda": 1889,
                "num_explored_none": 429,
                "num_inputs": 1,
                "num_kept_concrete": 744,
                "num_kept_lambda": 630,
                "num_values_explored": 7332,
                "num_values_kept": 1374,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.197905790060759,
            "num_unique_values": 749,
            "solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 77.33202870189172,
                "explored_percent_lambda": 12.361382909328114,
                "explored_percent_none": 10.30658838878017,
                "kept_percent_concrete": 79.83761840324763,
                "kept_percent_lambda": 20.16238159675237,
                "num_examples": 3,
                "num_explored_concrete": 2371,
                "num_explored_lambda": 379,
                "num_explored_none": 316,
                "num_inputs": 2,
                "num_kept_concrete": 590,
                "num_kept_lambda": 149,
                "num_values_explored": 3066,
                "num_values_kept": 739,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0431342776865,
            "num_unique_values": 7736,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.198926030979614,
                "explored_percent_lambda": 5.475062738995563,
                "explored_percent_none": 54.326011230024825,
                "kept_percent_concrete": 97.83846751229615,
                "kept_percent_lambda": 2.161532487703857,
                "num_examples": 4,
                "num_explored_concrete": 118055,
                "num_explored_lambda": 16079,
                "num_explored_none": 159543,
                "num_inputs": 2,
                "num_kept_concrete": 7559,
                "num_kept_lambda": 167,
                "num_values_explored": 293677,
                "num_values_kept": 7726,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 252.69325806200504,
            "num_unique_values": 8723,
            "solution": "Min(2, Multiply(Square(4), Sum(Take(Minimum(Drop(1, x1)), x1))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 92.4699685343254,
                "explored_percent_lambda": 3.422109417102724,
                "explored_percent_none": 4.107922048571876,
                "kept_percent_concrete": 93.09157677300895,
                "kept_percent_lambda": 6.908423226991049,
                "num_examples": 5,
                "num_explored_concrete": 106383,
                "num_explored_lambda": 3937,
                "num_explored_none": 4726,
                "num_inputs": 1,
                "num_kept_concrete": 8112,
                "num_kept_lambda": 602,
                "num_values_explored": 115046,
                "num_values_kept": 8714,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.1665233168751,
            "num_unique_values": 10652,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 86.97585674955529,
                "explored_percent_lambda": 1.8345475078054074,
                "explored_percent_none": 11.189595742639298,
                "kept_percent_concrete": 96.06277015598572,
                "kept_percent_lambda": 3.937229844014283,
                "num_examples": 4,
                "num_explored_concrete": 235675,
                "num_explored_lambda": 4971,
                "num_explored_none": 30320,
                "num_inputs": 2,
                "num_kept_concrete": 10223,
                "num_kept_lambda": 419,
                "num_values_explored": 270966,
                "num_values_kept": 10642,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 33.9989606924355,
            "num_unique_values": 799,
            "solution": "Add(4, Multiply(4, Min(3, Multiply(3, Subtract(2, Square(x1))))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 30.105348460291733,
                "explored_percent_lambda": 9.314222042139384,
                "explored_percent_none": 60.58042949756888,
                "kept_percent_concrete": 91.39240506329114,
                "kept_percent_lambda": 8.60759493670886,
                "num_examples": 3,
                "num_explored_concrete": 5944,
                "num_explored_lambda": 1839,
                "num_explored_none": 11961,
                "num_inputs": 1,
                "num_kept_concrete": 722,
                "num_kept_lambda": 68,
                "num_values_explored": 19744,
                "num_values_kept": 790,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.492160664871335,
            "num_unique_values": 735,
            "solution": "Map(lambda u1: Add(2, Square(Add(3, 4))), Drop(3, Take(4, x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 61.29579375848033,
                "explored_percent_lambda": 19.87788331071913,
                "explored_percent_none": 18.826322930800544,
                "kept_percent_concrete": 62.206896551724135,
                "kept_percent_lambda": 37.793103448275865,
                "num_examples": 3,
                "num_explored_concrete": 1807,
                "num_explored_lambda": 586,
                "num_explored_none": 555,
                "num_inputs": 2,
                "num_kept_concrete": 451,
                "num_kept_lambda": 274,
                "num_values_explored": 2948,
                "num_values_kept": 725,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.038607141003,
            "num_unique_values": 11846,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 64.72688501529873,
                "explored_percent_lambda": 29.879357228934552,
                "explored_percent_none": 5.393757755766707,
                "kept_percent_concrete": 39.19067331249472,
                "kept_percent_lambda": 60.80932668750528,
                "num_examples": 5,
                "num_explored_concrete": 144484,
                "num_explored_lambda": 66697,
                "num_explored_none": 12040,
                "num_inputs": 1,
                "num_kept_concrete": 4639,
                "num_kept_lambda": 7198,
                "num_values_explored": 223221,
                "num_values_kept": 11837,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.544390328228474,
            "num_unique_values": 1691,
            "solution": "Multiply(3, IntDivide(Max(-1, Max(Sum(x1), Last(x1))), 3))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 77.25565817517507,
                "explored_percent_lambda": 9.61128590277073,
                "explored_percent_none": 13.133055922054197,
                "kept_percent_concrete": 79.84542211652794,
                "kept_percent_lambda": 20.154577883472058,
                "num_examples": 5,
                "num_explored_concrete": 7612,
                "num_explored_lambda": 947,
                "num_explored_none": 1294,
                "num_inputs": 1,
                "num_kept_concrete": 1343,
                "num_kept_lambda": 339,
                "num_values_explored": 9853,
                "num_values_kept": 1682,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0629358645529,
            "num_unique_values": 6040,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.62796703238868,
                "explored_percent_lambda": 5.70968432354293,
                "explored_percent_none": 18.66234864406839,
                "kept_percent_concrete": 90.54883103962858,
                "kept_percent_lambda": 9.451168960371414,
                "num_examples": 2,
                "num_explored_concrete": 215545,
                "num_explored_lambda": 16273,
                "num_explored_none": 53189,
                "num_inputs": 1,
                "num_kept_concrete": 5461,
                "num_kept_lambda": 570,
                "num_values_explored": 285007,
                "num_values_kept": 6031,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 13.855424918234348,
            "num_unique_values": 1248,
            "solution": "Scanl1(lambda u1, u2: Add(3, Max(Head(x1), Square(4))), Take(2, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 59.430208499124625,
                "explored_percent_lambda": 22.807575998726723,
                "explored_percent_none": 17.762215502148656,
                "kept_percent_concrete": 63.196125907990314,
                "kept_percent_lambda": 36.803874092009686,
                "num_examples": 4,
                "num_explored_concrete": 3734,
                "num_explored_lambda": 1433,
                "num_explored_none": 1116,
                "num_inputs": 1,
                "num_kept_concrete": 783,
                "num_kept_lambda": 456,
                "num_values_explored": 6283,
                "num_values_kept": 1239,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0529249720275,
            "num_unique_values": 6362,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.77613639115589,
                "explored_percent_lambda": 21.35551626990854,
                "explored_percent_none": 20.868347338935575,
                "kept_percent_concrete": 44.81347394931528,
                "kept_percent_lambda": 55.18652605068472,
                "num_examples": 2,
                "num_explored_concrete": 143145,
                "num_explored_lambda": 52910,
                "num_explored_none": 51703,
                "num_inputs": 1,
                "num_kept_concrete": 2847,
                "num_kept_lambda": 3506,
                "num_values_explored": 247758,
                "num_values_kept": 6353,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.202569549903274,
            "num_unique_values": 669,
            "solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 47.13393099701168,
                "explored_percent_lambda": 31.703341483292583,
                "explored_percent_none": 21.162727519695736,
                "kept_percent_concrete": 33.484848484848484,
                "kept_percent_lambda": 66.51515151515152,
                "num_examples": 2,
                "num_explored_concrete": 1735,
                "num_explored_lambda": 1167,
                "num_explored_none": 779,
                "num_inputs": 1,
                "num_kept_concrete": 221,
                "num_kept_lambda": 439,
                "num_values_explored": 3681,
                "num_values_kept": 660,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0275344792753,
            "num_unique_values": 5520,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.91949022010391,
                "explored_percent_lambda": 9.421305670643697,
                "explored_percent_none": 50.65920410925239,
                "kept_percent_concrete": 90.20141535111595,
                "kept_percent_lambda": 9.79858464888405,
                "num_examples": 2,
                "num_explored_concrete": 115331,
                "num_explored_lambda": 27219,
                "num_explored_none": 146359,
                "num_inputs": 1,
                "num_kept_concrete": 4971,
                "num_kept_lambda": 540,
                "num_values_explored": 288909,
                "num_values_kept": 5511,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 462.73725056648254,
            "num_unique_values": 4628,
            "solution": "Subtract(If(IsOdd(x1), Multiply(x1, 2), IntDivide(Square(3), -1)), 2)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 43.16072717726587,
                "explored_percent_lambda": 9.818205683533504,
                "explored_percent_none": 47.02106713920063,
                "kept_percent_concrete": 92.61744966442953,
                "kept_percent_lambda": 7.382550335570469,
                "num_examples": 2,
                "num_explored_concrete": 98646,
                "num_explored_lambda": 22440,
                "num_explored_none": 107469,
                "num_inputs": 1,
                "num_kept_concrete": 4278,
                "num_kept_lambda": 341,
                "num_values_explored": 228555,
                "num_values_kept": 4619,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 12.473344100639224,
            "num_unique_values": 361,
            "solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 25.825731362063543,
                "explored_percent_lambda": 21.767851525636992,
                "explored_percent_none": 52.406417112299465,
                "kept_percent_concrete": 62.10826210826211,
                "kept_percent_lambda": 37.89173789173789,
                "num_examples": 2,
                "num_explored_concrete": 1642,
                "num_explored_lambda": 1384,
                "num_explored_none": 3332,
                "num_inputs": 2,
                "num_kept_concrete": 218,
                "num_kept_lambda": 133,
                "num_values_explored": 6358,
                "num_values_kept": 351,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0113840661943,
            "num_unique_values": 4766,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.00503948927864,
                "explored_percent_lambda": 10.987613745389597,
                "explored_percent_none": 47.00734676533177,
                "kept_percent_concrete": 87.61564339781329,
                "kept_percent_lambda": 12.384356602186712,
                "num_examples": 2,
                "num_explored_concrete": 126528,
                "num_explored_lambda": 33097,
                "num_explored_none": 141596,
                "num_inputs": 2,
                "num_kept_concrete": 4167,
                "num_kept_lambda": 589,
                "num_values_explored": 301221,
                "num_values_kept": 4756,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.1014437898993,
            "num_unique_values": 4316,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.66937479572302,
                "explored_percent_lambda": 10.545694675124567,
                "explored_percent_none": 46.78493052915241,
                "kept_percent_concrete": 87.71481653506734,
                "kept_percent_lambda": 12.285183464932652,
                "num_examples": 2,
                "num_explored_concrete": 127939,
                "num_explored_lambda": 31620,
                "num_explored_none": 140279,
                "num_inputs": 2,
                "num_kept_concrete": 3777,
                "num_kept_lambda": 529,
                "num_values_explored": 299838,
                "num_values_kept": 4306,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0910615213215,
            "num_unique_values": 4462,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.533002204573826,
                "explored_percent_lambda": 10.052723843926797,
                "explored_percent_none": 47.414273951499375,
                "kept_percent_concrete": 86.56783468104223,
                "kept_percent_lambda": 13.432165318957772,
                "num_examples": 2,
                "num_explored_concrete": 128106,
                "num_explored_lambda": 30278,
                "num_explored_none": 142808,
                "num_inputs": 2,
                "num_kept_concrete": 3854,
                "num_kept_lambda": 598,
                "num_values_explored": 301192,
                "num_values_kept": 4452,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0924532338977,
            "num_unique_values": 6591,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.23044471584495,
                "explored_percent_lambda": 24.331654845333816,
                "explored_percent_none": 21.43790043882123,
                "kept_percent_concrete": 42.72257672439988,
                "kept_percent_lambda": 57.27742327560012,
                "num_examples": 2,
                "num_explored_concrete": 140760,
                "num_explored_lambda": 63155,
                "num_explored_none": 55644,
                "num_inputs": 1,
                "num_kept_concrete": 2812,
                "num_kept_lambda": 3770,
                "num_values_explored": 259559,
                "num_values_kept": 6582,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 210.21159215457737,
            "num_unique_values": 2655,
            "solution": "Add(3, Max(Add(x1, x1), Multiply(Square(4), Add(3, 4))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 40.355119339727864,
                "explored_percent_lambda": 10.758866830247602,
                "explored_percent_none": 48.88601383002454,
                "kept_percent_concrete": 92.78155706727135,
                "kept_percent_lambda": 7.218442932728647,
                "num_examples": 3,
                "num_explored_concrete": 45228,
                "num_explored_lambda": 12058,
                "num_explored_none": 54789,
                "num_inputs": 1,
                "num_kept_concrete": 2455,
                "num_kept_lambda": 191,
                "num_values_explored": 112075,
                "num_values_kept": 2646,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.83
}