{
    "num_tasks": 100,
    "num_tasks_solved": 85,
    "results": [
        {
            "elapsed_time": 1.8944467399269342,
            "num_unique_values": 217,
            "solution": "Map(lambda u1: (lambda v1: If((lambda v1: Less(1, v1))(v1), 1, 1))(u1), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 20.21709633649932,
                "explored_percent_lambda": 53.18860244233379,
                "explored_percent_none": 26.594301221166894,
                "kept_percent_concrete": 31.73076923076923,
                "kept_percent_lambda": 68.26923076923077,
                "num_examples": 2,
                "num_explored_concrete": 149,
                "num_explored_lambda": 392,
                "num_explored_none": 196,
                "num_inputs": 1,
                "num_kept_concrete": 66,
                "num_kept_lambda": 142,
                "num_values_explored": 737,
                "num_values_kept": 208,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6257621236145496,
            "num_unique_values": 252,
            "solution": "Scanl1(lambda u1, u2: x2, ZipWith(lambda u1, u2: (lambda v1: Max(1, v1))(u2), x1, x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 35.57692307692308,
                "explored_percent_lambda": 40.10989010989011,
                "explored_percent_none": 24.313186813186814,
                "kept_percent_concrete": 66.11570247933884,
                "kept_percent_lambda": 33.88429752066116,
                "num_examples": 3,
                "num_explored_concrete": 259,
                "num_explored_lambda": 292,
                "num_explored_none": 177,
                "num_inputs": 2,
                "num_kept_concrete": 160,
                "num_kept_lambda": 82,
                "num_values_explored": 728,
                "num_values_kept": 242,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9412406925112009,
            "num_unique_values": 164,
            "solution": "Access(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 14.325068870523417,
                "explored_percent_lambda": 65.0137741046832,
                "explored_percent_none": 20.66115702479339,
                "kept_percent_concrete": 27.741935483870968,
                "kept_percent_lambda": 72.25806451612904,
                "num_examples": 5,
                "num_explored_concrete": 52,
                "num_explored_lambda": 236,
                "num_explored_none": 75,
                "num_inputs": 1,
                "num_kept_concrete": 43,
                "num_kept_lambda": 112,
                "num_values_explored": 363,
                "num_values_kept": 155,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.983903530985117,
            "num_unique_values": 154,
            "solution": "Drop(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 11.764705882352942,
                "explored_percent_lambda": 69.74789915966386,
                "explored_percent_none": 18.48739495798319,
                "kept_percent_concrete": 20.0,
                "kept_percent_lambda": 80.0,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 249,
                "num_explored_none": 66,
                "num_inputs": 1,
                "num_kept_concrete": 29,
                "num_kept_lambda": 116,
                "num_values_explored": 357,
                "num_values_kept": 145,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8277334440499544,
            "num_unique_values": 143,
            "solution": "Take(IntDivide(x2, 2), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 26.881720430107528,
                "explored_percent_lambda": 43.81720430107527,
                "explored_percent_none": 29.301075268817204,
                "kept_percent_concrete": 45.11278195488722,
                "kept_percent_lambda": 54.88721804511278,
                "num_examples": 4,
                "num_explored_concrete": 100,
                "num_explored_lambda": 163,
                "num_explored_none": 109,
                "num_inputs": 2,
                "num_kept_concrete": 60,
                "num_kept_lambda": 73,
                "num_values_explored": 372,
                "num_values_kept": 133,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9527783188968897,
            "num_unique_values": 153,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 8.450704225352112,
                "explored_percent_lambda": 72.95774647887323,
                "explored_percent_none": 18.591549295774648,
                "kept_percent_concrete": 13.986013986013987,
                "kept_percent_lambda": 86.01398601398601,
                "num_examples": 4,
                "num_explored_concrete": 30,
                "num_explored_lambda": 259,
                "num_explored_none": 66,
                "num_inputs": 2,
                "num_kept_concrete": 20,
                "num_kept_lambda": 123,
                "num_values_explored": 355,
                "num_values_kept": 143,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0099902749061584,
            "num_unique_values": 151,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 9.444444444444445,
                "explored_percent_lambda": 77.22222222222223,
                "explored_percent_none": 13.333333333333334,
                "kept_percent_concrete": 13.380281690140846,
                "kept_percent_lambda": 86.61971830985915,
                "num_examples": 2,
                "num_explored_concrete": 34,
                "num_explored_lambda": 278,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 123,
                "num_values_explored": 360,
                "num_values_kept": 142,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9972050040960312,
            "num_unique_values": 152,
            "solution": "Drop(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 9.97229916897507,
                "explored_percent_lambda": 67.03601108033241,
                "explored_percent_none": 22.991689750692522,
                "kept_percent_concrete": 15.384615384615385,
                "kept_percent_lambda": 84.61538461538461,
                "num_examples": 2,
                "num_explored_concrete": 36,
                "num_explored_lambda": 242,
                "num_explored_none": 83,
                "num_inputs": 1,
                "num_kept_concrete": 22,
                "num_kept_lambda": 121,
                "num_values_explored": 361,
                "num_values_kept": 143,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9739873204380274,
            "num_unique_values": 256,
            "solution": "Scanl1(lambda u1, u2: 3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 22.510231923601637,
                "explored_percent_lambda": 46.65757162346521,
                "explored_percent_none": 30.83219645293315,
                "kept_percent_concrete": 31.17408906882591,
                "kept_percent_lambda": 68.82591093117409,
                "num_examples": 4,
                "num_explored_concrete": 165,
                "num_explored_lambda": 342,
                "num_explored_none": 226,
                "num_inputs": 1,
                "num_kept_concrete": 77,
                "num_kept_lambda": 170,
                "num_values_explored": 733,
                "num_values_kept": 247,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9265293646603823,
            "num_unique_values": 163,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 27.131782945736433,
                "explored_percent_lambda": 45.47803617571059,
                "explored_percent_none": 27.39018087855297,
                "kept_percent_concrete": 46.40522875816993,
                "kept_percent_lambda": 53.59477124183007,
                "num_examples": 5,
                "num_explored_concrete": 105,
                "num_explored_lambda": 176,
                "num_explored_none": 106,
                "num_inputs": 2,
                "num_kept_concrete": 71,
                "num_kept_lambda": 82,
                "num_values_explored": 387,
                "num_values_kept": 153,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.003127545118332,
            "num_unique_values": 278,
            "solution": "IntDivide(Head(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 43.687374749499,
                "explored_percent_lambda": 15.330661322645291,
                "explored_percent_none": 40.98196392785571,
                "kept_percent_concrete": 79.85074626865672,
                "kept_percent_lambda": 20.149253731343283,
                "num_examples": 4,
                "num_explored_concrete": 436,
                "num_explored_lambda": 153,
                "num_explored_none": 409,
                "num_inputs": 2,
                "num_kept_concrete": 214,
                "num_kept_lambda": 54,
                "num_values_explored": 998,
                "num_values_kept": 268,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17968988791108131,
            "num_unique_values": 70,
            "solution": "Max(x1, Square(4))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 98.91304347826087,
                "explored_percent_lambda": 1.0869565217391304,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 98.36065573770492,
                "kept_percent_lambda": 1.639344262295082,
                "num_examples": 2,
                "num_explored_concrete": 91,
                "num_explored_lambda": 1,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 60,
                "num_kept_lambda": 1,
                "num_values_explored": 92,
                "num_values_kept": 61,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7408610675483942,
            "num_unique_values": 286,
            "solution": "Multiply(4, Minimum(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 28.969359331476323,
                "explored_percent_lambda": 49.860724233983284,
                "explored_percent_none": 21.16991643454039,
                "kept_percent_concrete": 53.79061371841155,
                "kept_percent_lambda": 46.20938628158845,
                "num_examples": 4,
                "num_explored_concrete": 208,
                "num_explored_lambda": 358,
                "num_explored_none": 152,
                "num_inputs": 1,
                "num_kept_concrete": 149,
                "num_kept_lambda": 128,
                "num_values_explored": 718,
                "num_values_kept": 277,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.313284460455179,
            "num_unique_values": 271,
            "solution": "Multiply(4, Count(lambda u1: (lambda v1: Equal(0, v1))(u1), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 41.77215189873418,
                "explored_percent_lambda": 38.81856540084388,
                "explored_percent_none": 19.40928270042194,
                "kept_percent_concrete": 51.14503816793893,
                "kept_percent_lambda": 48.85496183206107,
                "num_examples": 2,
                "num_explored_concrete": 396,
                "num_explored_lambda": 368,
                "num_explored_none": 184,
                "num_inputs": 1,
                "num_kept_concrete": 134,
                "num_kept_lambda": 128,
                "num_values_explored": 948,
                "num_values_kept": 262,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4187429789453745,
            "num_unique_values": 265,
            "solution": "Scanl1(lambda u1, u2: Minimum(x1), Map(lambda u1: Head(x2), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 38.446969696969695,
                "explored_percent_lambda": 44.128787878787875,
                "explored_percent_none": 17.424242424242426,
                "kept_percent_concrete": 52.549019607843135,
                "kept_percent_lambda": 47.450980392156865,
                "num_examples": 5,
                "num_explored_concrete": 203,
                "num_explored_lambda": 233,
                "num_explored_none": 92,
                "num_inputs": 2,
                "num_kept_concrete": 134,
                "num_kept_lambda": 121,
                "num_values_explored": 528,
                "num_values_kept": 255,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.3426600322127342,
            "num_unique_values": 273,
            "solution": "Subtract(2, Sum(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 20.521172638436482,
                "explored_percent_lambda": 42.99674267100977,
                "explored_percent_none": 36.48208469055375,
                "kept_percent_concrete": 32.196969696969695,
                "kept_percent_lambda": 67.8030303030303,
                "num_examples": 3,
                "num_explored_concrete": 189,
                "num_explored_lambda": 396,
                "num_explored_none": 336,
                "num_inputs": 1,
                "num_kept_concrete": 85,
                "num_kept_lambda": 179,
                "num_values_explored": 921,
                "num_values_kept": 264,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7858133092522621,
            "num_unique_values": 260,
            "solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 26.956521739130434,
                "explored_percent_lambda": 49.130434782608695,
                "explored_percent_none": 23.91304347826087,
                "kept_percent_concrete": 46.4,
                "kept_percent_lambda": 53.6,
                "num_examples": 2,
                "num_explored_concrete": 186,
                "num_explored_lambda": 339,
                "num_explored_none": 165,
                "num_inputs": 2,
                "num_kept_concrete": 116,
                "num_kept_lambda": 134,
                "num_values_explored": 690,
                "num_values_kept": 250,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7904735896736383,
            "num_unique_values": 251,
            "solution": "ZipWith(lambda u1, u2: (lambda v1, v2: Min(v1, v2))(u1, u2), Sort(x1), Drop(1, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 25.0,
                "explored_percent_lambda": 44.49404761904762,
                "explored_percent_none": 30.50595238095238,
                "kept_percent_concrete": 27.68595041322314,
                "kept_percent_lambda": 72.31404958677686,
                "num_examples": 3,
                "num_explored_concrete": 168,
                "num_explored_lambda": 299,
                "num_explored_none": 205,
                "num_inputs": 1,
                "num_kept_concrete": 67,
                "num_kept_lambda": 175,
                "num_values_explored": 672,
                "num_values_kept": 242,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.297199023887515,
            "num_unique_values": 196,
            "solution": "Sum(Sort(Drop(x1, Take(4, x2))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 25.326797385620914,
                "explored_percent_lambda": 36.111111111111114,
                "explored_percent_none": 38.56209150326797,
                "kept_percent_concrete": 54.83870967741935,
                "kept_percent_lambda": 45.16129032258065,
                "num_examples": 3,
                "num_explored_concrete": 155,
                "num_explored_lambda": 221,
                "num_explored_none": 236,
                "num_inputs": 2,
                "num_kept_concrete": 102,
                "num_kept_lambda": 84,
                "num_values_explored": 612,
                "num_values_kept": 186,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7954890839755535,
            "num_unique_values": 204,
            "solution": "Map(lambda u1: Head(x2), Drop(2, x2))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 22.303030303030305,
                "explored_percent_lambda": 51.27272727272727,
                "explored_percent_none": 26.424242424242426,
                "kept_percent_concrete": 26.804123711340207,
                "kept_percent_lambda": 73.19587628865979,
                "num_examples": 2,
                "num_explored_concrete": 184,
                "num_explored_lambda": 423,
                "num_explored_none": 218,
                "num_inputs": 2,
                "num_kept_concrete": 52,
                "num_kept_lambda": 142,
                "num_values_explored": 825,
                "num_values_kept": 194,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.1113368086516857,
            "num_unique_values": 254,
            "solution": "Scanl1(lambda u1, u2: Head(x2), ZipWith(lambda u1, u2: Last(x2), x1, Take(2, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 28.72467222884386,
                "explored_percent_lambda": 41.12038140643623,
                "explored_percent_none": 30.154946364719905,
                "kept_percent_concrete": 41.80327868852459,
                "kept_percent_lambda": 58.19672131147541,
                "num_examples": 3,
                "num_explored_concrete": 241,
                "num_explored_lambda": 345,
                "num_explored_none": 253,
                "num_inputs": 2,
                "num_kept_concrete": 102,
                "num_kept_lambda": 142,
                "num_values_explored": 839,
                "num_values_kept": 244,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.700990060344338,
            "num_unique_values": 875,
            "solution": "Min(Add(1, 4), Add(Minimum(x1), Count(lambda u1: (lambda v1: IsEven(v1))(u1), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 67.93957196810743,
                "explored_percent_lambda": 18.25430130088124,
                "explored_percent_none": 13.80612673101133,
                "kept_percent_concrete": 75.49132947976878,
                "kept_percent_lambda": 24.508670520231213,
                "num_examples": 4,
                "num_explored_concrete": 1619,
                "num_explored_lambda": 435,
                "num_explored_none": 329,
                "num_inputs": 2,
                "num_kept_concrete": 653,
                "num_kept_lambda": 212,
                "num_values_explored": 2383,
                "num_values_kept": 865,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 44.62106769159436,
            "num_unique_values": 3049,
            "solution": "Min(Last(x1), Subtract(-1, Min(3, Add(Square(3), Head(x1)))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 86.41724793912492,
                "explored_percent_lambda": 6.73430564362714,
                "explored_percent_none": 6.848446417247939,
                "kept_percent_concrete": 81.67763157894737,
                "kept_percent_lambda": 18.32236842105263,
                "num_examples": 5,
                "num_explored_concrete": 20442,
                "num_explored_lambda": 1593,
                "num_explored_none": 1620,
                "num_inputs": 1,
                "num_kept_concrete": 2483,
                "num_kept_lambda": 557,
                "num_values_explored": 23655,
                "num_values_kept": 3040,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.541766809299588,
            "num_unique_values": 545,
            "solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), Scanl1(lambda u1, u2: (lambda v1: Subtract(0, v1))(u1), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 58.63453815261044,
                "explored_percent_lambda": 33.433734939759034,
                "explored_percent_none": 7.931726907630522,
                "kept_percent_concrete": 66.72897196261682,
                "kept_percent_lambda": 33.271028037383175,
                "num_examples": 5,
                "num_explored_concrete": 584,
                "num_explored_lambda": 333,
                "num_explored_none": 79,
                "num_inputs": 2,
                "num_kept_concrete": 357,
                "num_kept_lambda": 178,
                "num_values_explored": 996,
                "num_values_kept": 535,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9083300475031137,
            "num_unique_values": 249,
            "solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 26.053639846743295,
                "explored_percent_lambda": 47.12643678160919,
                "explored_percent_none": 26.81992337164751,
                "kept_percent_concrete": 47.28033472803347,
                "kept_percent_lambda": 52.71966527196653,
                "num_examples": 2,
                "num_explored_concrete": 204,
                "num_explored_lambda": 369,
                "num_explored_none": 210,
                "num_inputs": 2,
                "num_kept_concrete": 113,
                "num_kept_lambda": 126,
                "num_values_explored": 783,
                "num_values_kept": 239,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0683772135525942,
            "num_unique_values": 154,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 35.35353535353536,
                "explored_percent_lambda": 35.55555555555556,
                "explored_percent_none": 29.09090909090909,
                "kept_percent_concrete": 48.25174825174825,
                "kept_percent_lambda": 51.74825174825175,
                "num_examples": 2,
                "num_explored_concrete": 175,
                "num_explored_lambda": 176,
                "num_explored_none": 144,
                "num_inputs": 3,
                "num_kept_concrete": 69,
                "num_kept_lambda": 74,
                "num_values_explored": 495,
                "num_values_kept": 143,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 193.54552849009633,
            "num_unique_values": 7978,
            "solution": "Subtract(Add(Last(x2), Last(Map(lambda u1: (lambda v1: Subtract(1, v1))(u1), x1))), 1)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 87.00540784136999,
                "explored_percent_lambda": 3.518476791347454,
                "explored_percent_none": 9.47611536728256,
                "kept_percent_concrete": 94.17670682730923,
                "kept_percent_lambda": 5.823293172690763,
                "num_examples": 5,
                "num_explored_concrete": 77226,
                "num_explored_lambda": 3123,
                "num_explored_none": 8411,
                "num_inputs": 2,
                "num_kept_concrete": 7504,
                "num_kept_lambda": 464,
                "num_values_explored": 88760,
                "num_values_kept": 7968,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 29.49129194393754,
            "num_unique_values": 715,
            "solution": "Add(3, Multiply(-1, IntDivide(Subtract(x1, 4), 4)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 31.396539949920328,
                "explored_percent_lambda": 7.876166628727521,
                "explored_percent_none": 60.72729342135215,
                "kept_percent_concrete": 92.20963172804532,
                "kept_percent_lambda": 7.790368271954674,
                "num_examples": 5,
                "num_explored_concrete": 5517,
                "num_explored_lambda": 1384,
                "num_explored_none": 10671,
                "num_inputs": 1,
                "num_kept_concrete": 651,
                "num_kept_lambda": 55,
                "num_values_explored": 17572,
                "num_values_kept": 706,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5575216300785542,
            "num_unique_values": 225,
            "solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 19.17591125198098,
                "explored_percent_lambda": 60.06339144215531,
                "explored_percent_none": 20.760697305863708,
                "kept_percent_concrete": 37.5,
                "kept_percent_lambda": 62.5,
                "num_examples": 3,
                "num_explored_concrete": 121,
                "num_explored_lambda": 379,
                "num_explored_none": 131,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 135,
                "num_values_explored": 631,
                "num_values_kept": 216,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.3254576176404953,
            "num_unique_values": 563,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 69.54851104707012,
                "explored_percent_lambda": 17.675312199807877,
                "explored_percent_none": 12.776176753121998,
                "kept_percent_concrete": 82.82097649186257,
                "kept_percent_lambda": 17.179023508137433,
                "num_examples": 5,
                "num_explored_concrete": 724,
                "num_explored_lambda": 184,
                "num_explored_none": 133,
                "num_inputs": 2,
                "num_kept_concrete": 458,
                "num_kept_lambda": 95,
                "num_values_explored": 1041,
                "num_values_kept": 553,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.954264134168625,
            "num_unique_values": 538,
            "solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), Map(lambda u1: Head(x2), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 55.58845299777942,
                "explored_percent_lambda": 31.902294596595116,
                "explored_percent_none": 12.509252405625462,
                "kept_percent_concrete": 65.53030303030303,
                "kept_percent_lambda": 34.46969696969697,
                "num_examples": 3,
                "num_explored_concrete": 751,
                "num_explored_lambda": 431,
                "num_explored_none": 169,
                "num_inputs": 2,
                "num_kept_concrete": 346,
                "num_kept_lambda": 182,
                "num_values_explored": 1351,
                "num_values_kept": 528,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.363442800939083,
            "num_unique_values": 143,
            "solution": "Multiply(Square(4), Add(3, x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 21.033958438925495,
                "explored_percent_lambda": 12.721743537759757,
                "explored_percent_none": 66.24429802331476,
                "kept_percent_concrete": 82.08955223880596,
                "kept_percent_lambda": 17.91044776119403,
                "num_examples": 2,
                "num_explored_concrete": 415,
                "num_explored_lambda": 251,
                "num_explored_none": 1307,
                "num_inputs": 1,
                "num_kept_concrete": 110,
                "num_kept_lambda": 24,
                "num_values_explored": 1973,
                "num_values_kept": 134,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.559123586863279,
            "num_unique_values": 761,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Add(Subtract(0, x2), (lambda v1: Square(v1))(v1)))(u2), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 63.0,
                "explored_percent_lambda": 25.129032258064516,
                "explored_percent_none": 11.870967741935484,
                "kept_percent_concrete": 49.66711051930759,
                "kept_percent_lambda": 50.33288948069241,
                "num_examples": 5,
                "num_explored_concrete": 1953,
                "num_explored_lambda": 779,
                "num_explored_none": 368,
                "num_inputs": 2,
                "num_kept_concrete": 373,
                "num_kept_lambda": 378,
                "num_values_explored": 3100,
                "num_values_kept": 751,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8899471145123243,
            "num_unique_values": 331,
            "solution": "Max(Square(Head(x1)), Square(Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 39.83628922237381,
                "explored_percent_lambda": 44.065484311050476,
                "explored_percent_none": 16.098226466575717,
                "kept_percent_concrete": 54.517133956386296,
                "kept_percent_lambda": 45.482866043613704,
                "num_examples": 3,
                "num_explored_concrete": 292,
                "num_explored_lambda": 323,
                "num_explored_none": 118,
                "num_inputs": 2,
                "num_kept_concrete": 175,
                "num_kept_lambda": 146,
                "num_values_explored": 733,
                "num_values_kept": 321,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 108.20222890749574,
            "num_unique_values": 5014,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Min(4, (lambda v1: IntDivide(v1, 3))(v1)))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 65.62146774396115,
                "explored_percent_lambda": 30.598233348683383,
                "explored_percent_none": 3.780298907355465,
                "kept_percent_concrete": 41.25874125874126,
                "kept_percent_lambda": 58.74125874125874,
                "num_examples": 2,
                "num_explored_concrete": 31350,
                "num_explored_lambda": 14618,
                "num_explored_none": 1806,
                "num_inputs": 1,
                "num_kept_concrete": 2065,
                "num_kept_lambda": 2940,
                "num_values_explored": 47774,
                "num_values_kept": 5005,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.405836708843708,
            "num_unique_values": 262,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 23.570595099183198,
                "explored_percent_lambda": 53.44224037339556,
                "explored_percent_none": 22.987164527421236,
                "kept_percent_concrete": 31.620553359683793,
                "kept_percent_lambda": 68.3794466403162,
                "num_examples": 4,
                "num_explored_concrete": 202,
                "num_explored_lambda": 458,
                "num_explored_none": 197,
                "num_inputs": 1,
                "num_kept_concrete": 80,
                "num_kept_lambda": 173,
                "num_values_explored": 857,
                "num_values_kept": 253,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.0369610227644444,
            "num_unique_values": 485,
            "solution": "Map(lambda u1: (lambda v1: Min(v1, Sum(x1)))(u1), Scanl1(lambda u1, u2: x2, x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 52.56322624743677,
                "explored_percent_lambda": 28.776486671223513,
                "explored_percent_none": 18.660287081339714,
                "kept_percent_concrete": 61.89473684210526,
                "kept_percent_lambda": 38.10526315789474,
                "num_examples": 5,
                "num_explored_concrete": 769,
                "num_explored_lambda": 421,
                "num_explored_none": 273,
                "num_inputs": 2,
                "num_kept_concrete": 294,
                "num_kept_lambda": 181,
                "num_values_explored": 1463,
                "num_values_kept": 475,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 81.17228246107697,
            "num_unique_values": 3055,
            "solution": "Add(Multiply(-1, Add(2, Sum(x2))), Min(-1, Add(x1, 2)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 84.53746562017844,
                "explored_percent_lambda": 4.3201180653384315,
                "explored_percent_none": 11.142416314483128,
                "kept_percent_concrete": 89.12614980289094,
                "kept_percent_lambda": 10.873850197109068,
                "num_examples": 2,
                "num_explored_concrete": 37806,
                "num_explored_lambda": 1932,
                "num_explored_none": 4983,
                "num_inputs": 3,
                "num_kept_concrete": 2713,
                "num_kept_lambda": 331,
                "num_values_explored": 44721,
                "num_values_kept": 3044,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.770641095936298,
            "num_unique_values": 1067,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Max(Minimum(x1), (lambda v1: IntDivide(v1, 2))(v1)))(u1), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 50.986267166042445,
                "explored_percent_lambda": 34.80649188514357,
                "explored_percent_none": 14.207240948813983,
                "kept_percent_concrete": 34.78260869565217,
                "kept_percent_lambda": 65.21739130434783,
                "num_examples": 2,
                "num_explored_concrete": 2042,
                "num_explored_lambda": 1394,
                "num_explored_none": 569,
                "num_inputs": 1,
                "num_kept_concrete": 368,
                "num_kept_lambda": 690,
                "num_values_explored": 4005,
                "num_values_kept": 1058,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6523924823850393,
            "num_unique_values": 265,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 30.69139966273187,
                "explored_percent_lambda": 45.36256323777403,
                "explored_percent_none": 23.9460370994941,
                "kept_percent_concrete": 39.84375,
                "kept_percent_lambda": 60.15625,
                "num_examples": 2,
                "num_explored_concrete": 182,
                "num_explored_lambda": 269,
                "num_explored_none": 142,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 154,
                "num_values_explored": 593,
                "num_values_kept": 256,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.439810926094651,
            "num_unique_values": 363,
            "solution": "If(IsOdd(x1), Subtract(x1, x2), Add(x1, Subtract(4, x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 33.621061717738456,
                "explored_percent_lambda": 7.869371313480075,
                "explored_percent_none": 58.50956696878147,
                "kept_percent_concrete": 91.5014164305949,
                "kept_percent_lambda": 8.498583569405099,
                "num_examples": 2,
                "num_explored_concrete": 2337,
                "num_explored_lambda": 547,
                "num_explored_none": 4067,
                "num_inputs": 2,
                "num_kept_concrete": 323,
                "num_kept_lambda": 30,
                "num_values_explored": 6951,
                "num_values_kept": 353,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.375485964119434,
            "num_unique_values": 391,
            "solution": "Map(lambda u1: Subtract(Max(4, IntDivide(x2, 4)), 1), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 33.8269680436477,
                "explored_percent_lambda": 22.25253312548714,
                "explored_percent_none": 43.92049883086516,
                "kept_percent_concrete": 52.493438320209975,
                "kept_percent_lambda": 47.506561679790025,
                "num_examples": 4,
                "num_explored_concrete": 868,
                "num_explored_lambda": 571,
                "num_explored_none": 1127,
                "num_inputs": 2,
                "num_kept_concrete": 200,
                "num_kept_lambda": 181,
                "num_values_explored": 2566,
                "num_values_kept": 381,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4969735518097878,
            "num_unique_values": 218,
            "solution": "Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Take(2, x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 21.835443037974684,
                "explored_percent_lambda": 49.5253164556962,
                "explored_percent_none": 28.639240506329113,
                "kept_percent_concrete": 38.94230769230769,
                "kept_percent_lambda": 61.05769230769231,
                "num_examples": 3,
                "num_explored_concrete": 138,
                "num_explored_lambda": 313,
                "num_explored_none": 181,
                "num_inputs": 2,
                "num_kept_concrete": 81,
                "num_kept_lambda": 127,
                "num_values_explored": 632,
                "num_values_kept": 208,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.717542190104723,
            "num_unique_values": 765,
            "solution": "Subtract(Square(Add(4, 2)), If(IsOdd(Head(x1)), 2, 4))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 65.64014827487881,
                "explored_percent_lambda": 16.62389506700884,
                "explored_percent_none": 17.735956658112347,
                "kept_percent_concrete": 69.57671957671958,
                "kept_percent_lambda": 30.423280423280424,
                "num_examples": 4,
                "num_explored_concrete": 2302,
                "num_explored_lambda": 583,
                "num_explored_none": 622,
                "num_inputs": 1,
                "num_kept_concrete": 526,
                "num_kept_lambda": 230,
                "num_values_explored": 3507,
                "num_values_kept": 756,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8584203217178583,
            "num_unique_values": 129,
            "solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 93.87755102040816,
                "explored_percent_lambda": 5.918367346938775,
                "explored_percent_none": 0.20408163265306123,
                "kept_percent_concrete": 75.83333333333333,
                "kept_percent_lambda": 24.166666666666668,
                "num_examples": 5,
                "num_explored_concrete": 460,
                "num_explored_lambda": 29,
                "num_explored_none": 1,
                "num_inputs": 1,
                "num_kept_concrete": 91,
                "num_kept_lambda": 29,
                "num_values_explored": 490,
                "num_values_kept": 120,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5137734394520521,
            "num_unique_values": 219,
            "solution": "Map(lambda u1: (lambda v1: Add(x1, v1))(u1), Take(2, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 26.352288488210817,
                "explored_percent_lambda": 32.17753120665742,
                "explored_percent_none": 41.47018030513176,
                "kept_percent_concrete": 44.71153846153846,
                "kept_percent_lambda": 55.28846153846154,
                "num_examples": 2,
                "num_explored_concrete": 190,
                "num_explored_lambda": 232,
                "num_explored_none": 299,
                "num_inputs": 3,
                "num_kept_concrete": 93,
                "num_kept_lambda": 115,
                "num_values_explored": 721,
                "num_values_kept": 208,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.5629410445690155,
            "num_unique_values": 177,
            "solution": "Min(IntDivide(x1, 4), Add(x1, Multiply(2, Add(x2, 3))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 21.96704942586121,
                "explored_percent_lambda": 14.328507239141288,
                "explored_percent_none": 63.70444333499751,
                "kept_percent_concrete": 80.83832335329342,
                "kept_percent_lambda": 19.161676646706585,
                "num_examples": 2,
                "num_explored_concrete": 440,
                "num_explored_lambda": 287,
                "num_explored_none": 1276,
                "num_inputs": 2,
                "num_kept_concrete": 135,
                "num_kept_lambda": 32,
                "num_values_explored": 2003,
                "num_values_kept": 167,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7142479438334703,
            "num_unique_values": 252,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(x1, (lambda v1: Add(x1, v1))(v1)))(u2), x2, x3)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 32.35294117647059,
                "explored_percent_lambda": 38.79551820728291,
                "explored_percent_none": 28.8515406162465,
                "kept_percent_concrete": 51.86721991701245,
                "kept_percent_lambda": 48.13278008298755,
                "num_examples": 4,
                "num_explored_concrete": 231,
                "num_explored_lambda": 277,
                "num_explored_none": 206,
                "num_inputs": 3,
                "num_kept_concrete": 125,
                "num_kept_lambda": 116,
                "num_values_explored": 714,
                "num_values_kept": 241,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.378950411453843,
            "num_unique_values": 505,
            "solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 58.83408071748879,
                "explored_percent_lambda": 28.699551569506728,
                "explored_percent_none": 12.466367713004484,
                "kept_percent_concrete": 65.78947368421052,
                "kept_percent_lambda": 34.21052631578947,
                "num_examples": 4,
                "num_explored_concrete": 656,
                "num_explored_lambda": 320,
                "num_explored_none": 139,
                "num_inputs": 3,
                "num_kept_concrete": 325,
                "num_kept_lambda": 169,
                "num_values_explored": 1115,
                "num_values_kept": 494,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 483.03695368021727,
            "num_unique_values": 6900,
            "solution": "Subtract(Add(x1, IntDivide(x1, 2)), Min(Subtract(x2, 3), 3))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 38.22955878861871,
                "explored_percent_lambda": 7.608861532200631,
                "explored_percent_none": 54.161579679180655,
                "kept_percent_concrete": 97.38751814223512,
                "kept_percent_lambda": 2.6124818577648767,
                "num_examples": 4,
                "num_explored_concrete": 90182,
                "num_explored_lambda": 17949,
                "num_explored_none": 127765,
                "num_inputs": 2,
                "num_kept_concrete": 6710,
                "num_kept_lambda": 180,
                "num_values_explored": 235896,
                "num_values_kept": 6890,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.134048728272319,
            "num_unique_values": 244,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), Take(3, x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 26.854219948849106,
                "explored_percent_lambda": 52.0460358056266,
                "explored_percent_none": 21.099744245524295,
                "kept_percent_concrete": 42.5531914893617,
                "kept_percent_lambda": 57.4468085106383,
                "num_examples": 5,
                "num_explored_concrete": 210,
                "num_explored_lambda": 407,
                "num_explored_none": 165,
                "num_inputs": 1,
                "num_kept_concrete": 100,
                "num_kept_lambda": 135,
                "num_values_explored": 782,
                "num_values_kept": 235,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5786890592426062,
            "num_unique_values": 263,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Max(x3, v1))(u1), Filter(lambda u1: (lambda v1: Less(x2, v1))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 38.46153846153846,
                "explored_percent_lambda": 34.30769230769231,
                "explored_percent_none": 27.23076923076923,
                "kept_percent_concrete": 63.888888888888886,
                "kept_percent_lambda": 36.111111111111114,
                "num_examples": 5,
                "num_explored_concrete": 250,
                "num_explored_lambda": 223,
                "num_explored_none": 177,
                "num_inputs": 3,
                "num_kept_concrete": 161,
                "num_kept_lambda": 91,
                "num_values_explored": 650,
                "num_values_kept": 252,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.4065989702939987,
            "num_unique_values": 459,
            "solution": "Reverse(ZipWith(lambda u1, u2: (lambda v1: IntDivide(v1, Add(3, 4)))(u2), x1, Reverse(x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 41.029023746701846,
                "explored_percent_lambda": 36.147757255936675,
                "explored_percent_none": 22.823218997361476,
                "kept_percent_concrete": 46.22222222222222,
                "kept_percent_lambda": 53.77777777777778,
                "num_examples": 3,
                "num_explored_concrete": 622,
                "num_explored_lambda": 548,
                "num_explored_none": 346,
                "num_inputs": 1,
                "num_kept_concrete": 208,
                "num_kept_lambda": 242,
                "num_values_explored": 1516,
                "num_values_kept": 450,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9582763370126486,
            "num_unique_values": 243,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Max(1, (lambda v1: Subtract(Add(x1, 1), v1))(v1)))(u2), x2)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 27.65432098765432,
                "explored_percent_lambda": 42.96296296296296,
                "explored_percent_none": 29.382716049382715,
                "kept_percent_concrete": 45.493562231759654,
                "kept_percent_lambda": 54.506437768240346,
                "num_examples": 4,
                "num_explored_concrete": 224,
                "num_explored_lambda": 348,
                "num_explored_none": 238,
                "num_inputs": 2,
                "num_kept_concrete": 106,
                "num_kept_lambda": 127,
                "num_values_explored": 810,
                "num_values_kept": 233,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0103376489133,
            "num_unique_values": 16276,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 79.24375664128947,
                "explored_percent_lambda": 14.150592741917851,
                "explored_percent_none": 6.605650616792678,
                "kept_percent_concrete": 74.01782969566554,
                "kept_percent_lambda": 25.98217030433446,
                "num_examples": 5,
                "num_explored_concrete": 181217,
                "num_explored_lambda": 32360,
                "num_explored_none": 15106,
                "num_inputs": 3,
                "num_kept_concrete": 12039,
                "num_kept_lambda": 4226,
                "num_values_explored": 228683,
                "num_values_kept": 16265,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.1717952843755484,
            "num_unique_values": 229,
            "solution": "ZipWith(lambda u1, u2: Sum(x1), x1, Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 25.901201602136183,
                "explored_percent_lambda": 53.271028037383175,
                "explored_percent_none": 20.827770360480642,
                "kept_percent_concrete": 40.182648401826484,
                "kept_percent_lambda": 59.817351598173516,
                "num_examples": 5,
                "num_explored_concrete": 194,
                "num_explored_lambda": 399,
                "num_explored_none": 156,
                "num_inputs": 2,
                "num_kept_concrete": 88,
                "num_kept_lambda": 131,
                "num_values_explored": 749,
                "num_values_kept": 219,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.585876956582069,
            "num_unique_values": 439,
            "solution": "Min(Subtract(x1, 3), Add(2, Subtract(x1, Head(x2))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 43.524144547489605,
                "explored_percent_lambda": 14.48672849376399,
                "explored_percent_none": 41.989126958746404,
                "kept_percent_concrete": 69.6969696969697,
                "kept_percent_lambda": 30.303030303030305,
                "num_examples": 5,
                "num_explored_concrete": 1361,
                "num_explored_lambda": 453,
                "num_explored_none": 1313,
                "num_inputs": 2,
                "num_kept_concrete": 299,
                "num_kept_lambda": 130,
                "num_values_explored": 3127,
                "num_values_kept": 429,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 31.338270807638764,
            "num_unique_values": 1424,
            "solution": "Sort(Scanl1(lambda u1, u2: IntDivide(Add(3, 4), Subtract(x1, 3)), Map(lambda u1: 1, x2)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 65.69272445820434,
                "explored_percent_lambda": 17.04076367389061,
                "explored_percent_none": 17.266511867905056,
                "kept_percent_concrete": 59.33521923620933,
                "kept_percent_lambda": 40.66478076379067,
                "num_examples": 2,
                "num_explored_concrete": 10185,
                "num_explored_lambda": 2642,
                "num_explored_none": 2677,
                "num_inputs": 2,
                "num_kept_concrete": 839,
                "num_kept_lambda": 575,
                "num_values_explored": 15504,
                "num_values_kept": 1414,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.756585443392396,
            "num_unique_values": 334,
            "solution": "Subtract(Subtract(x1, Square(Square(3))), Square(3))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 28.878909879219574,
                "explored_percent_lambda": 12.186435428925364,
                "explored_percent_none": 58.934654691855066,
                "kept_percent_concrete": 83.38461538461539,
                "kept_percent_lambda": 16.615384615384617,
                "num_examples": 4,
                "num_explored_concrete": 1865,
                "num_explored_lambda": 787,
                "num_explored_none": 3806,
                "num_inputs": 1,
                "num_kept_concrete": 271,
                "num_kept_lambda": 54,
                "num_values_explored": 6458,
                "num_values_kept": 325,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4564924463629723,
            "num_unique_values": 215,
            "solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 31.54848046309696,
                "explored_percent_lambda": 32.41678726483357,
                "explored_percent_none": 36.03473227206946,
                "kept_percent_concrete": 55.609756097560975,
                "kept_percent_lambda": 44.390243902439025,
                "num_examples": 4,
                "num_explored_concrete": 218,
                "num_explored_lambda": 224,
                "num_explored_none": 249,
                "num_inputs": 2,
                "num_kept_concrete": 114,
                "num_kept_lambda": 91,
                "num_values_explored": 691,
                "num_values_kept": 205,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.204497456550598,
            "num_unique_values": 1167,
            "solution": "Add(Subtract(2, Square(Add(2, IntDivide(Head(x1), Last(x1))))), 1)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 82.53717178108194,
                "explored_percent_lambda": 11.40461879152167,
                "explored_percent_none": 6.058209427396394,
                "kept_percent_concrete": 78.84283246977547,
                "kept_percent_lambda": 21.157167530224527,
                "num_examples": 3,
                "num_explored_concrete": 5218,
                "num_explored_lambda": 721,
                "num_explored_none": 383,
                "num_inputs": 1,
                "num_kept_concrete": 913,
                "num_kept_lambda": 245,
                "num_values_explored": 6322,
                "num_values_kept": 1158,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.520454114302993,
            "num_unique_values": 515,
            "solution": "Scanl1(lambda u1, u2: Subtract(Head(x2), 1), Map(lambda u1: Add(x1, -1), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 35.75620767494357,
                "explored_percent_lambda": 32.91196388261851,
                "explored_percent_none": 31.331828442437924,
                "kept_percent_concrete": 41.98019801980198,
                "kept_percent_lambda": 58.01980198019802,
                "num_examples": 2,
                "num_explored_concrete": 792,
                "num_explored_lambda": 729,
                "num_explored_none": 694,
                "num_inputs": 2,
                "num_kept_concrete": 212,
                "num_kept_lambda": 293,
                "num_values_explored": 2215,
                "num_values_kept": 505,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6593692917376757,
            "num_unique_values": 142,
            "solution": "Subtract(IntDivide(Subtract(3, x1), Add(2, 4)), 3)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 24.12109375,
                "explored_percent_lambda": 13.28125,
                "explored_percent_none": 62.59765625,
                "kept_percent_concrete": 78.94736842105263,
                "kept_percent_lambda": 21.05263157894737,
                "num_examples": 4,
                "num_explored_concrete": 494,
                "num_explored_lambda": 272,
                "num_explored_none": 1282,
                "num_inputs": 1,
                "num_kept_concrete": 105,
                "num_kept_lambda": 28,
                "num_values_explored": 2048,
                "num_values_kept": 133,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 37.54004022479057,
            "num_unique_values": 2289,
            "solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 82.52929538882971,
                "explored_percent_lambda": 11.545680515395931,
                "explored_percent_none": 5.925024095774362,
                "kept_percent_concrete": 73.84817902588854,
                "kept_percent_lambda": 26.151820974111452,
                "num_examples": 2,
                "num_explored_concrete": 16269,
                "num_explored_lambda": 2276,
                "num_explored_none": 1168,
                "num_inputs": 2,
                "num_kept_concrete": 1683,
                "num_kept_lambda": 596,
                "num_values_explored": 19713,
                "num_values_kept": 2279,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0506118610501,
            "num_unique_values": 14451,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 89.00424989375266,
                "explored_percent_lambda": 2.5006374840628984,
                "explored_percent_none": 8.495112622184445,
                "kept_percent_concrete": 94.55716363132747,
                "kept_percent_lambda": 5.44283636867253,
                "num_examples": 5,
                "num_explored_concrete": 209427,
                "num_explored_lambda": 5884,
                "num_explored_none": 19989,
                "num_inputs": 2,
                "num_kept_concrete": 13655,
                "num_kept_lambda": 786,
                "num_values_explored": 235300,
                "num_values_kept": 14441,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.467061871662736,
            "num_unique_values": 542,
            "solution": "Scanl1(lambda u1, u2: Subtract(-1, 2), Map(lambda u1: Subtract(Minimum(x1), 4), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 67.49163879598662,
                "explored_percent_lambda": 27.558528428093645,
                "explored_percent_none": 4.949832775919733,
                "kept_percent_concrete": 60.22514071294559,
                "kept_percent_lambda": 39.77485928705441,
                "num_examples": 3,
                "num_explored_concrete": 1009,
                "num_explored_lambda": 412,
                "num_explored_none": 74,
                "num_inputs": 1,
                "num_kept_concrete": 321,
                "num_kept_lambda": 212,
                "num_values_explored": 1495,
                "num_values_kept": 533,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.30344457551837,
            "num_unique_values": 775,
            "solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 66.95692025664528,
                "explored_percent_lambda": 22.273143904674612,
                "explored_percent_none": 10.76993583868011,
                "kept_percent_concrete": 72.94117647058823,
                "kept_percent_lambda": 27.058823529411764,
                "num_examples": 5,
                "num_explored_concrete": 1461,
                "num_explored_lambda": 486,
                "num_explored_none": 235,
                "num_inputs": 2,
                "num_kept_concrete": 558,
                "num_kept_lambda": 207,
                "num_values_explored": 2182,
                "num_values_kept": 765,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4120541717857122,
            "num_unique_values": 259,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(0, (lambda v1: Min(4, v1))(v1)))(u2), x1, x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 25.65130260521042,
                "explored_percent_lambda": 56.91382765531062,
                "explored_percent_none": 17.43486973947896,
                "kept_percent_concrete": 37.2,
                "kept_percent_lambda": 62.8,
                "num_examples": 2,
                "num_explored_concrete": 128,
                "num_explored_lambda": 284,
                "num_explored_none": 87,
                "num_inputs": 1,
                "num_kept_concrete": 93,
                "num_kept_lambda": 157,
                "num_values_explored": 499,
                "num_values_kept": 250,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6666426472365856,
            "num_unique_values": 249,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 28.551136363636363,
                "explored_percent_lambda": 37.5,
                "explored_percent_none": 33.94886363636363,
                "kept_percent_concrete": 54.621848739495796,
                "kept_percent_lambda": 45.378151260504204,
                "num_examples": 4,
                "num_explored_concrete": 201,
                "num_explored_lambda": 264,
                "num_explored_none": 239,
                "num_inputs": 3,
                "num_kept_concrete": 130,
                "num_kept_lambda": 108,
                "num_values_explored": 704,
                "num_values_kept": 238,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.383257906883955,
            "num_unique_values": 737,
            "solution": "Map(lambda u1: Add(1, Multiply(3, IntDivide(Head(x1), 4))), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 39.43526391785657,
                "explored_percent_lambda": 27.99614952671266,
                "explored_percent_none": 32.56858655543077,
                "kept_percent_concrete": 36.81318681318681,
                "kept_percent_lambda": 63.18681318681319,
                "num_examples": 2,
                "num_explored_concrete": 2458,
                "num_explored_lambda": 1745,
                "num_explored_none": 2030,
                "num_inputs": 1,
                "num_kept_concrete": 268,
                "num_kept_lambda": 460,
                "num_values_explored": 6233,
                "num_values_kept": 728,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0809568557888,
            "num_unique_values": 14699,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 90.61081220816571,
                "explored_percent_lambda": 2.485337598759149,
                "explored_percent_none": 6.9038501930751455,
                "kept_percent_concrete": 95.37717864923748,
                "kept_percent_lambda": 4.6228213507625275,
                "num_examples": 4,
                "num_explored_concrete": 224327,
                "num_explored_lambda": 6153,
                "num_explored_none": 17092,
                "num_inputs": 3,
                "num_kept_concrete": 14009,
                "num_kept_lambda": 679,
                "num_values_explored": 247572,
                "num_values_kept": 14688,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.2602285444736,
            "num_unique_values": 11894,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.8095141398963,
                "explored_percent_lambda": 35.18887038766826,
                "explored_percent_none": 6.001615472435438,
                "kept_percent_concrete": 39.39419436264198,
                "kept_percent_lambda": 60.60580563735802,
                "num_examples": 3,
                "num_explored_concrete": 130326,
                "num_explored_lambda": 77981,
                "num_explored_none": 13300,
                "num_inputs": 1,
                "num_kept_concrete": 4682,
                "num_kept_lambda": 7203,
                "num_values_explored": 221607,
                "num_values_kept": 11885,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3423002194613,
            "num_unique_values": 7396,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.02636649499674,
                "explored_percent_lambda": 7.645280748375821,
                "explored_percent_none": 51.32835275662744,
                "kept_percent_concrete": 94.39555976715852,
                "kept_percent_lambda": 5.604440232841478,
                "num_examples": 4,
                "num_explored_concrete": 114553,
                "num_explored_lambda": 21347,
                "num_explored_none": 143318,
                "num_inputs": 1,
                "num_kept_concrete": 6973,
                "num_kept_lambda": 414,
                "num_values_explored": 279218,
                "num_values_kept": 7387,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.1782737877219915,
            "num_unique_values": 802,
            "solution": "Scanl1(lambda u1, u2: Square(Sum(Scanl1(lambda u1, u2: 4, x1))), Map(lambda u1: (lambda v1: Square(v1))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 61.598302687411596,
                "explored_percent_lambda": 26.555869872701557,
                "explored_percent_none": 11.845827439886845,
                "kept_percent_concrete": 49.306431273644385,
                "kept_percent_lambda": 50.693568726355615,
                "num_examples": 2,
                "num_explored_concrete": 1742,
                "num_explored_lambda": 751,
                "num_explored_none": 335,
                "num_inputs": 1,
                "num_kept_concrete": 391,
                "num_kept_lambda": 402,
                "num_values_explored": 2828,
                "num_values_kept": 793,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.813002470880747,
            "num_unique_values": 1557,
            "solution": "Map(lambda u1: If(IsOdd(Sum(x1)), Square(3), Sum(Drop(1, x1))), x3)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 80.0209753539591,
                "explored_percent_lambda": 12.448872574724698,
                "explored_percent_none": 7.530152071316204,
                "kept_percent_concrete": 72.89780077619663,
                "kept_percent_lambda": 27.102199223803364,
                "num_examples": 5,
                "num_explored_concrete": 7630,
                "num_explored_lambda": 1187,
                "num_explored_none": 718,
                "num_inputs": 3,
                "num_kept_concrete": 1127,
                "num_kept_lambda": 419,
                "num_values_explored": 9535,
                "num_values_kept": 1546,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.376660047098994,
            "num_unique_values": 510,
            "solution": "Scanl1(lambda u1, u2: Last(x2), Sort(Scanl1(lambda u1, u2: Add(-1, -1), Take(3, x1))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 53.1563126252505,
                "explored_percent_lambda": 33.517034068136276,
                "explored_percent_none": 13.326653306613226,
                "kept_percent_concrete": 44.4,
                "kept_percent_lambda": 55.6,
                "num_examples": 2,
                "num_explored_concrete": 1061,
                "num_explored_lambda": 669,
                "num_explored_none": 266,
                "num_inputs": 2,
                "num_kept_concrete": 222,
                "num_kept_lambda": 278,
                "num_values_explored": 1996,
                "num_values_kept": 500,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 122.34810043312609,
            "num_unique_values": 2848,
            "solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 55.66900659434163,
                "explored_percent_lambda": 21.038077004892575,
                "explored_percent_none": 23.292916400765794,
                "kept_percent_concrete": 59.24621345544206,
                "kept_percent_lambda": 40.75378654455794,
                "num_examples": 3,
                "num_explored_concrete": 31404,
                "num_explored_lambda": 11868,
                "num_explored_none": 13140,
                "num_inputs": 1,
                "num_kept_concrete": 1682,
                "num_kept_lambda": 1157,
                "num_values_explored": 56412,
                "num_values_kept": 2839,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 20.314968708902597,
            "num_unique_values": 2564,
            "solution": "Min(IntDivide(Sum(x1), Head(x1)), Sum(Map(lambda u1: x2, Drop(2, x3))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 89.90397321821865,
                "explored_percent_lambda": 6.80997268963087,
                "explored_percent_none": 3.2860540921504713,
                "kept_percent_concrete": 86.09479044261653,
                "kept_percent_lambda": 13.90520955738347,
                "num_examples": 5,
                "num_explored_concrete": 10205,
                "num_explored_lambda": 773,
                "num_explored_none": 373,
                "num_inputs": 3,
                "num_kept_concrete": 2198,
                "num_kept_lambda": 355,
                "num_values_explored": 11351,
                "num_values_kept": 2553,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 12.365812616422772,
            "num_unique_values": 1150,
            "solution": "Scanl1(lambda u1, u2: Min(-1, IntDivide(x1, Head(x3))), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 69.62702322308233,
                "explored_percent_lambda": 9.809992962702323,
                "explored_percent_none": 20.56298381421534,
                "kept_percent_concrete": 76.11940298507463,
                "kept_percent_lambda": 23.880597014925375,
                "num_examples": 4,
                "num_explored_concrete": 4947,
                "num_explored_lambda": 697,
                "num_explored_none": 1461,
                "num_inputs": 3,
                "num_kept_concrete": 867,
                "num_kept_lambda": 272,
                "num_values_explored": 7105,
                "num_values_kept": 1139,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.224074544385076,
            "num_unique_values": 769,
            "solution": "Scanl1(lambda u1, u2: 0, Map(lambda u1: Subtract(4, Access(1, x1)), Take(-1, x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 58.93166840097121,
                "explored_percent_lambda": 29.240374609781476,
                "explored_percent_none": 11.827956989247312,
                "kept_percent_concrete": 53.1578947368421,
                "kept_percent_lambda": 46.8421052631579,
                "num_examples": 2,
                "num_explored_concrete": 1699,
                "num_explored_lambda": 843,
                "num_explored_none": 341,
                "num_inputs": 1,
                "num_kept_concrete": 404,
                "num_kept_lambda": 356,
                "num_values_explored": 2883,
                "num_values_kept": 760,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0761725250632,
            "num_unique_values": 14792,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 91.45975906340139,
                "explored_percent_lambda": 3.802305945849863,
                "explored_percent_none": 4.737934990748745,
                "kept_percent_concrete": 93.05912596401028,
                "kept_percent_lambda": 6.940874035989717,
                "num_examples": 3,
                "num_explored_concrete": 226394,
                "num_explored_lambda": 9412,
                "num_explored_none": 11728,
                "num_inputs": 2,
                "num_kept_concrete": 13756,
                "num_kept_lambda": 1026,
                "num_values_explored": 247534,
                "num_values_kept": 14782,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.2772144600749,
            "num_unique_values": 7777,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.52721430006025,
                "explored_percent_lambda": 5.0907143335341765,
                "explored_percent_none": 54.38207136640557,
                "kept_percent_concrete": 97.759752800309,
                "kept_percent_lambda": 2.2402471996910003,
                "num_examples": 4,
                "num_explored_concrete": 121071,
                "num_explored_lambda": 15208,
                "num_explored_none": 162461,
                "num_inputs": 2,
                "num_kept_concrete": 7593,
                "num_kept_lambda": 174,
                "num_values_explored": 298740,
                "num_values_kept": 7767,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 244.50920732319355,
            "num_unique_values": 8640,
            "solution": "Min(2, Multiply(Square(4), Sum(Take(Minimum(Drop(1, x1)), x1))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 92.8747014417964,
                "explored_percent_lambda": 3.312470580031033,
                "explored_percent_none": 3.8128279781725625,
                "kept_percent_concrete": 93.46541536322559,
                "kept_percent_lambda": 6.534584636774418,
                "num_examples": 5,
                "num_explored_concrete": 106544,
                "num_explored_lambda": 3800,
                "num_explored_none": 4374,
                "num_inputs": 1,
                "num_kept_concrete": 8067,
                "num_kept_lambda": 564,
                "num_values_explored": 114718,
                "num_values_kept": 8631,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 512.6697980221361,
            "num_unique_values": 10178,
            "solution": "Multiply(-1, Square(Multiply(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1), Subtract(-1, x2))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 86.87740338695879,
                "explored_percent_lambda": 1.837578797870485,
                "explored_percent_none": 11.285017815170718,
                "kept_percent_concrete": 96.26278520849725,
                "kept_percent_lambda": 3.737214791502754,
                "num_examples": 4,
                "num_explored_concrete": 209206,
                "num_explored_lambda": 4425,
                "num_explored_none": 27175,
                "num_inputs": 2,
                "num_kept_concrete": 9788,
                "num_kept_lambda": 380,
                "num_values_explored": 240806,
                "num_values_kept": 10168,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.2298712786287,
            "num_unique_values": 7161,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.10817339954369,
                "explored_percent_lambda": 7.427862031942021,
                "explored_percent_none": 53.46396456851429,
                "kept_percent_concrete": 97.48322147651007,
                "kept_percent_lambda": 2.5167785234899327,
                "num_examples": 3,
                "num_explored_concrete": 116558,
                "num_explored_lambda": 22138,
                "num_explored_none": 159344,
                "num_inputs": 1,
                "num_kept_concrete": 6972,
                "num_kept_lambda": 180,
                "num_values_explored": 298040,
                "num_values_kept": 7152,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.699525171890855,
            "num_unique_values": 475,
            "solution": "Map(lambda u1: Add(2, Square(Add(3, 4))), Take(1, Drop(3, x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 48.857142857142854,
                "explored_percent_lambda": 27.142857142857142,
                "explored_percent_none": 24.0,
                "kept_percent_concrete": 56.12903225806452,
                "kept_percent_lambda": 43.87096774193548,
                "num_examples": 3,
                "num_explored_concrete": 855,
                "num_explored_lambda": 475,
                "num_explored_none": 420,
                "num_inputs": 2,
                "num_kept_concrete": 261,
                "num_kept_lambda": 204,
                "num_values_explored": 1750,
                "num_values_kept": 465,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0197078846395,
            "num_unique_values": 11977,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.04537173288487,
                "explored_percent_lambda": 29.700966996005885,
                "explored_percent_none": 5.253661271109243,
                "kept_percent_concrete": 39.39672459893048,
                "kept_percent_lambda": 60.60327540106952,
                "num_examples": 5,
                "num_explored_concrete": 148522,
                "num_explored_lambda": 67818,
                "num_explored_none": 11996,
                "num_inputs": 1,
                "num_kept_concrete": 4715,
                "num_kept_lambda": 7253,
                "num_values_explored": 228336,
                "num_values_kept": 11968,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.68871793150902,
            "num_unique_values": 2744,
            "solution": "Multiply(3, IntDivide(Max(-1, Max(Sum(x1), Last(x1))), 3))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 81.75952156122128,
                "explored_percent_lambda": 5.68932955618508,
                "explored_percent_none": 12.551148882593642,
                "kept_percent_concrete": 85.88665447897624,
                "kept_percent_lambda": 14.113345521023765,
                "num_examples": 5,
                "num_explored_concrete": 20780,
                "num_explored_lambda": 1446,
                "num_explored_none": 3190,
                "num_inputs": 1,
                "num_kept_concrete": 2349,
                "num_kept_lambda": 386,
                "num_values_explored": 25416,
                "num_values_kept": 2735,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.812330320477486,
            "num_unique_values": 700,
            "solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 55.9648288973384,
                "explored_percent_lambda": 21.934410646387832,
                "explored_percent_none": 22.100760456273765,
                "kept_percent_concrete": 59.91316931982634,
                "kept_percent_lambda": 40.08683068017366,
                "num_examples": 2,
                "num_explored_concrete": 2355,
                "num_explored_lambda": 923,
                "num_explored_none": 930,
                "num_inputs": 1,
                "num_kept_concrete": 414,
                "num_kept_lambda": 277,
                "num_values_explored": 4208,
                "num_values_kept": 691,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.404846224933863,
            "num_unique_values": 1168,
            "solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Head(x1), Square(4))), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 60.54162122864413,
                "explored_percent_lambda": 24.336604870956016,
                "explored_percent_none": 15.121773900399855,
                "kept_percent_concrete": 61.94995685936152,
                "kept_percent_lambda": 38.05004314063848,
                "num_examples": 4,
                "num_explored_concrete": 3331,
                "num_explored_lambda": 1339,
                "num_explored_none": 832,
                "num_inputs": 1,
                "num_kept_concrete": 718,
                "num_kept_lambda": 441,
                "num_values_explored": 5502,
                "num_values_kept": 1159,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0316437408328,
            "num_unique_values": 6258,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.877566683590935,
                "explored_percent_lambda": 20.484663856450705,
                "explored_percent_none": 20.63776945995836,
                "kept_percent_concrete": 47.063530164826375,
                "kept_percent_lambda": 52.936469835173625,
                "num_examples": 2,
                "num_explored_concrete": 149592,
                "num_explored_lambda": 52046,
                "num_explored_none": 52435,
                "num_inputs": 1,
                "num_kept_concrete": 2941,
                "num_kept_lambda": 3308,
                "num_values_explored": 254073,
                "num_values_kept": 6249,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.831665303558111,
            "num_unique_values": 677,
            "solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 48.70950027457441,
                "explored_percent_lambda": 30.615046677649644,
                "explored_percent_none": 20.675453047775946,
                "kept_percent_concrete": 35.02994011976048,
                "kept_percent_lambda": 64.97005988023952,
                "num_examples": 2,
                "num_explored_concrete": 1774,
                "num_explored_lambda": 1115,
                "num_explored_none": 753,
                "num_inputs": 1,
                "num_kept_concrete": 234,
                "num_kept_lambda": 434,
                "num_values_explored": 3642,
                "num_values_kept": 668,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0242842007428,
            "num_unique_values": 5604,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.21709889163887,
                "explored_percent_lambda": 9.329602926934252,
                "explored_percent_none": 50.45329818142688,
                "kept_percent_concrete": 90.75960679177837,
                "kept_percent_lambda": 9.240393208221626,
                "num_examples": 2,
                "num_explored_concrete": 119596,
                "num_explored_lambda": 27744,
                "num_explored_none": 150036,
                "num_inputs": 1,
                "num_kept_concrete": 5078,
                "num_kept_lambda": 517,
                "num_values_explored": 297376,
                "num_values_kept": 5595,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 28.382899461314082,
            "num_unique_values": 690,
            "solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Multiply(-1, Square(3))), 2)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 30.892126789366053,
                "explored_percent_lambda": 15.094580777096114,
                "explored_percent_none": 54.013292433537835,
                "kept_percent_concrete": 79.44199706314244,
                "kept_percent_lambda": 20.558002936857562,
                "num_examples": 2,
                "num_explored_concrete": 4834,
                "num_explored_lambda": 2362,
                "num_explored_none": 8452,
                "num_inputs": 1,
                "num_kept_concrete": 541,
                "num_kept_lambda": 140,
                "num_values_explored": 15648,
                "num_values_kept": 681,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.27661567926407,
            "num_unique_values": 446,
            "solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 27.47163695299838,
                "explored_percent_lambda": 19.25214169946747,
                "explored_percent_none": 53.276221347534154,
                "kept_percent_concrete": 68.11926605504587,
                "kept_percent_lambda": 31.880733944954127,
                "num_examples": 2,
                "num_explored_concrete": 2373,
                "num_explored_lambda": 1663,
                "num_explored_none": 4602,
                "num_inputs": 2,
                "num_kept_concrete": 297,
                "num_kept_lambda": 139,
                "num_values_explored": 8638,
                "num_values_kept": 436,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0142687093467,
            "num_unique_values": 4918,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.87397928732119,
                "explored_percent_lambda": 10.868253458125364,
                "explored_percent_none": 47.25776725455344,
                "kept_percent_concrete": 87.77506112469437,
                "kept_percent_lambda": 12.224938875305623,
                "num_examples": 2,
                "num_explored_concrete": 127688,
                "num_explored_lambda": 33141,
                "num_explored_none": 144105,
                "num_inputs": 2,
                "num_kept_concrete": 4308,
                "num_kept_lambda": 600,
                "num_values_explored": 304934,
                "num_values_kept": 4908,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0980590768158,
            "num_unique_values": 4588,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.43438805492814,
                "explored_percent_lambda": 10.538554305169669,
                "explored_percent_none": 47.02705763990219,
                "kept_percent_concrete": 89.01266928789865,
                "kept_percent_lambda": 10.987330712101354,
                "num_examples": 2,
                "num_explored_concrete": 127377,
                "num_explored_lambda": 31634,
                "num_explored_none": 141163,
                "num_inputs": 2,
                "num_kept_concrete": 4075,
                "num_kept_lambda": 503,
                "num_values_explored": 300174,
                "num_values_kept": 4578,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0947414506227,
            "num_unique_values": 4474,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.93438468037173,
                "explored_percent_lambda": 9.706296486490963,
                "explored_percent_none": 47.35931883313731,
                "kept_percent_concrete": 88.23924731182795,
                "kept_percent_lambda": 11.760752688172044,
                "num_examples": 2,
                "num_explored_concrete": 129591,
                "num_explored_lambda": 29297,
                "num_explored_none": 142947,
                "num_inputs": 2,
                "num_kept_concrete": 3939,
                "num_kept_lambda": 525,
                "num_values_explored": 301835,
                "num_values_kept": 4464,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3957056310028,
            "num_unique_values": 6389,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.14297965471612,
                "explored_percent_lambda": 24.39804269288827,
                "explored_percent_none": 21.458977652395607,
                "kept_percent_concrete": 42.25705329153605,
                "kept_percent_lambda": 57.74294670846395,
                "num_examples": 2,
                "num_explored_concrete": 139527,
                "num_explored_lambda": 62874,
                "num_explored_none": 55300,
                "num_inputs": 1,
                "num_kept_concrete": 2696,
                "num_kept_lambda": 3684,
                "num_values_explored": 257701,
                "num_values_kept": 6380,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 177.8606219086796,
            "num_unique_values": 2351,
            "solution": "Add(3, Max(Multiply(Square(4), Add(3, 4)), Add(x1, x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 40.03655737534662,
                "explored_percent_lambda": 11.024333502965094,
                "explored_percent_none": 48.93910912168828,
                "kept_percent_concrete": 92.57045260461145,
                "kept_percent_lambda": 7.429547395388557,
                "num_examples": 3,
                "num_explored_concrete": 38550,
                "num_explored_lambda": 10615,
                "num_explored_none": 47122,
                "num_inputs": 1,
                "num_kept_concrete": 2168,
                "num_kept_lambda": 174,
                "num_values_explored": 96287,
                "num_values_kept": 2342,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.85
}