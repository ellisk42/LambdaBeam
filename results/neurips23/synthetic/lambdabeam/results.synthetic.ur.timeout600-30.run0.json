{
    "num_tasks": 100,
    "num_tasks_solved": 89,
    "results": [
        {
            "elapsed_time": 1.9241461288183928,
            "num_unique_values": 217,
            "solution": "Map(lambda u1: 1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 21.246458923512748,
                "explored_percent_lambda": 55.94900849858357,
                "explored_percent_none": 22.804532577903682,
                "kept_percent_concrete": 32.21153846153846,
                "kept_percent_lambda": 67.78846153846153,
                "num_examples": 2,
                "num_explored_concrete": 150,
                "num_explored_lambda": 395,
                "num_explored_none": 161,
                "num_inputs": 1,
                "num_kept_concrete": 67,
                "num_kept_lambda": 141,
                "num_values_explored": 706,
                "num_values_kept": 208,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 706
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.879514591768384,
            "num_unique_values": 256,
            "solution": "Scanl1(lambda u1, u2: x2, Map(lambda u1: (lambda v1: Max(v1, IntDivide(4, x2)))(u1), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 32.84182305630027,
                "explored_percent_lambda": 43.16353887399464,
                "explored_percent_none": 23.994638069705093,
                "kept_percent_concrete": 59.75609756097561,
                "kept_percent_lambda": 40.24390243902439,
                "num_examples": 3,
                "num_explored_concrete": 245,
                "num_explored_lambda": 322,
                "num_explored_none": 179,
                "num_inputs": 2,
                "num_kept_concrete": 147,
                "num_kept_lambda": 99,
                "num_values_explored": 746,
                "num_values_kept": 246,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 746
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0041069593280554,
            "num_unique_values": 163,
            "solution": "Access(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 14.088397790055248,
                "explored_percent_lambda": 67.67955801104972,
                "explored_percent_none": 18.23204419889503,
                "kept_percent_concrete": 26.623376623376622,
                "kept_percent_lambda": 73.37662337662337,
                "num_examples": 5,
                "num_explored_concrete": 51,
                "num_explored_lambda": 245,
                "num_explored_none": 66,
                "num_inputs": 1,
                "num_kept_concrete": 41,
                "num_kept_lambda": 113,
                "num_values_explored": 362,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 362
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9999622516334057,
            "num_unique_values": 155,
            "solution": "Drop(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 12.359550561797754,
                "explored_percent_lambda": 67.97752808988764,
                "explored_percent_none": 19.662921348314608,
                "kept_percent_concrete": 21.91780821917808,
                "kept_percent_lambda": 78.08219178082192,
                "num_examples": 5,
                "num_explored_concrete": 44,
                "num_explored_lambda": 242,
                "num_explored_none": 70,
                "num_inputs": 1,
                "num_kept_concrete": 32,
                "num_kept_lambda": 114,
                "num_values_explored": 356,
                "num_values_kept": 146,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 356
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8850004840642214,
            "num_unique_values": 143,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 24.585635359116022,
                "explored_percent_lambda": 44.751381215469614,
                "explored_percent_none": 30.662983425414364,
                "kept_percent_concrete": 43.609022556390975,
                "kept_percent_lambda": 56.390977443609025,
                "num_examples": 4,
                "num_explored_concrete": 89,
                "num_explored_lambda": 162,
                "num_explored_none": 111,
                "num_inputs": 2,
                "num_kept_concrete": 58,
                "num_kept_lambda": 75,
                "num_values_explored": 362,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 362
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9967497736215591,
            "num_unique_values": 153,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 7.267441860465116,
                "explored_percent_lambda": 73.25581395348837,
                "explored_percent_none": 19.476744186046513,
                "kept_percent_concrete": 15.384615384615385,
                "kept_percent_lambda": 84.61538461538461,
                "num_examples": 4,
                "num_explored_concrete": 25,
                "num_explored_lambda": 252,
                "num_explored_none": 67,
                "num_inputs": 2,
                "num_kept_concrete": 22,
                "num_kept_lambda": 121,
                "num_values_explored": 344,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 344
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0374444089829922,
            "num_unique_values": 151,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 12.32876712328767,
                "explored_percent_lambda": 74.52054794520548,
                "explored_percent_none": 13.150684931506849,
                "kept_percent_concrete": 16.197183098591548,
                "kept_percent_lambda": 83.80281690140845,
                "num_examples": 2,
                "num_explored_concrete": 45,
                "num_explored_lambda": 272,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 23,
                "num_kept_lambda": 119,
                "num_values_explored": 365,
                "num_values_kept": 142,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 365
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0672108698636293,
            "num_unique_values": 152,
            "solution": "Drop(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 10.497237569060774,
                "explored_percent_lambda": 70.1657458563536,
                "explored_percent_none": 19.337016574585636,
                "kept_percent_concrete": 12.587412587412587,
                "kept_percent_lambda": 87.41258741258741,
                "num_examples": 2,
                "num_explored_concrete": 38,
                "num_explored_lambda": 254,
                "num_explored_none": 70,
                "num_inputs": 1,
                "num_kept_concrete": 18,
                "num_kept_lambda": 125,
                "num_values_explored": 362,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 362
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.0259917695075274,
            "num_unique_values": 255,
            "solution": "Scanl1(lambda u1, u2: 3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 22.63083451202263,
                "explored_percent_lambda": 47.24186704384724,
                "explored_percent_none": 30.127298444130126,
                "kept_percent_concrete": 30.48780487804878,
                "kept_percent_lambda": 69.51219512195122,
                "num_examples": 4,
                "num_explored_concrete": 160,
                "num_explored_lambda": 334,
                "num_explored_none": 213,
                "num_inputs": 1,
                "num_kept_concrete": 75,
                "num_kept_lambda": 171,
                "num_values_explored": 707,
                "num_values_kept": 246,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 707
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9306015335023403,
            "num_unique_values": 163,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 32.66832917705736,
                "explored_percent_lambda": 38.15461346633416,
                "explored_percent_none": 29.17705735660848,
                "kept_percent_concrete": 52.94117647058823,
                "kept_percent_lambda": 47.05882352941177,
                "num_examples": 5,
                "num_explored_concrete": 131,
                "num_explored_lambda": 153,
                "num_explored_none": 117,
                "num_inputs": 2,
                "num_kept_concrete": 81,
                "num_kept_lambda": 72,
                "num_values_explored": 401,
                "num_values_kept": 153,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 401
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.5563067756593227,
            "num_unique_values": 378,
            "solution": "Head(Map(lambda u1: (lambda v1: IntDivide(v1, x1))(u1), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 49.46325350949628,
                "explored_percent_lambda": 21.139554087530968,
                "explored_percent_none": 29.39719240297275,
                "kept_percent_concrete": 67.3913043478261,
                "kept_percent_lambda": 32.608695652173914,
                "num_examples": 4,
                "num_explored_concrete": 599,
                "num_explored_lambda": 256,
                "num_explored_none": 356,
                "num_inputs": 2,
                "num_kept_concrete": 248,
                "num_kept_lambda": 120,
                "num_values_explored": 1211,
                "num_values_kept": 368,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1211
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19179291278123856,
            "num_unique_values": 70,
            "solution": "Max(x1, Square(4))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 100.0,
                "explored_percent_lambda": 0.0,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 100.0,
                "kept_percent_lambda": 0.0,
                "num_examples": 2,
                "num_explored_concrete": 90,
                "num_explored_lambda": 0,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 61,
                "num_kept_lambda": 0,
                "num_values_explored": 90,
                "num_values_kept": 61,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 90
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8251723647117615,
            "num_unique_values": 291,
            "solution": "Multiply(4, Minimum(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 28.631284916201118,
                "explored_percent_lambda": 49.44134078212291,
                "explored_percent_none": 21.92737430167598,
                "kept_percent_concrete": 55.319148936170215,
                "kept_percent_lambda": 44.680851063829785,
                "num_examples": 4,
                "num_explored_concrete": 205,
                "num_explored_lambda": 354,
                "num_explored_none": 157,
                "num_inputs": 1,
                "num_kept_concrete": 156,
                "num_kept_lambda": 126,
                "num_values_explored": 716,
                "num_values_kept": 282,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 716
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.4887848291546106,
            "num_unique_values": 262,
            "solution": "Subtract(4, Sum(Drop(2, x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 41.8848167539267,
                "explored_percent_lambda": 38.7434554973822,
                "explored_percent_none": 19.3717277486911,
                "kept_percent_concrete": 49.40711462450593,
                "kept_percent_lambda": 50.59288537549407,
                "num_examples": 2,
                "num_explored_concrete": 400,
                "num_explored_lambda": 370,
                "num_explored_none": 185,
                "num_inputs": 1,
                "num_kept_concrete": 125,
                "num_kept_lambda": 128,
                "num_values_explored": 955,
                "num_values_kept": 253,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 955
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4307162575423717,
            "num_unique_values": 265,
            "solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 37.5,
                "explored_percent_lambda": 43.65384615384615,
                "explored_percent_none": 18.846153846153847,
                "kept_percent_concrete": 52.549019607843135,
                "kept_percent_lambda": 47.450980392156865,
                "num_examples": 5,
                "num_explored_concrete": 195,
                "num_explored_lambda": 227,
                "num_explored_none": 98,
                "num_inputs": 2,
                "num_kept_concrete": 134,
                "num_kept_lambda": 121,
                "num_values_explored": 520,
                "num_values_kept": 255,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 520
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.805744856595993,
            "num_unique_values": 472,
            "solution": "Sum(Map(lambda u1: (lambda v1: Subtract(1, v1))(u1), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 37.28287841191067,
                "explored_percent_lambda": 32.07196029776675,
                "explored_percent_none": 30.64516129032258,
                "kept_percent_concrete": 48.16414686825054,
                "kept_percent_lambda": 51.83585313174946,
                "num_examples": 3,
                "num_explored_concrete": 601,
                "num_explored_lambda": 517,
                "num_explored_none": 494,
                "num_inputs": 1,
                "num_kept_concrete": 223,
                "num_kept_lambda": 240,
                "num_values_explored": 1612,
                "num_values_kept": 463,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1612
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9071083590388298,
            "num_unique_values": 261,
            "solution": "Scanl1(lambda u1, u2: Sum(Sort(Take(3, x2))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 27.03488372093023,
                "explored_percent_lambda": 52.18023255813954,
                "explored_percent_none": 20.78488372093023,
                "kept_percent_concrete": 46.21513944223108,
                "kept_percent_lambda": 53.78486055776892,
                "num_examples": 2,
                "num_explored_concrete": 186,
                "num_explored_lambda": 359,
                "num_explored_none": 143,
                "num_inputs": 2,
                "num_kept_concrete": 116,
                "num_kept_lambda": 135,
                "num_values_explored": 688,
                "num_values_kept": 251,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 688
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9047798812389374,
            "num_unique_values": 249,
            "solution": "ZipWith(lambda u1, u2: (lambda v1, v2: Min(v1, v2))(u1, u2), Sort(x1), Drop(1, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 21.865443425076453,
                "explored_percent_lambda": 46.17737003058104,
                "explored_percent_none": 31.95718654434251,
                "kept_percent_concrete": 25.833333333333332,
                "kept_percent_lambda": 74.16666666666667,
                "num_examples": 3,
                "num_explored_concrete": 143,
                "num_explored_lambda": 302,
                "num_explored_none": 209,
                "num_inputs": 1,
                "num_kept_concrete": 62,
                "num_kept_lambda": 178,
                "num_values_explored": 654,
                "num_values_kept": 240,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 654
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.411944456398487,
            "num_unique_values": 197,
            "solution": "Sum(Reverse(Drop(x1, Take(4, x2))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 24.262295081967213,
                "explored_percent_lambda": 39.67213114754098,
                "explored_percent_none": 36.0655737704918,
                "kept_percent_concrete": 52.94117647058823,
                "kept_percent_lambda": 47.05882352941177,
                "num_examples": 3,
                "num_explored_concrete": 148,
                "num_explored_lambda": 242,
                "num_explored_none": 220,
                "num_inputs": 2,
                "num_kept_concrete": 99,
                "num_kept_lambda": 88,
                "num_values_explored": 610,
                "num_values_kept": 187,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 610
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.0037367455661297,
            "num_unique_values": 209,
            "solution": "Map(lambda u1: Head(x2), Drop(2, x2))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 21.618357487922705,
                "explored_percent_lambda": 53.38164251207729,
                "explored_percent_none": 25.0,
                "kept_percent_concrete": 24.623115577889447,
                "kept_percent_lambda": 75.37688442211055,
                "num_examples": 2,
                "num_explored_concrete": 179,
                "num_explored_lambda": 442,
                "num_explored_none": 207,
                "num_inputs": 2,
                "num_kept_concrete": 49,
                "num_kept_lambda": 150,
                "num_values_explored": 828,
                "num_values_kept": 199,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 828
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.3266707360744476,
            "num_unique_values": 251,
            "solution": "Scanl1(lambda u1, u2: Head(x2), ZipWith(lambda u1, u2: Last(x2), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 28.914285714285715,
                "explored_percent_lambda": 38.17142857142857,
                "explored_percent_none": 32.91428571428571,
                "kept_percent_concrete": 42.32365145228216,
                "kept_percent_lambda": 57.67634854771784,
                "num_examples": 3,
                "num_explored_concrete": 253,
                "num_explored_lambda": 334,
                "num_explored_none": 288,
                "num_inputs": 2,
                "num_kept_concrete": 102,
                "num_kept_lambda": 139,
                "num_values_explored": 875,
                "num_values_kept": 241,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 875
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.139072623103857,
            "num_unique_values": 613,
            "solution": "Min(Add(1, 4), Add(Minimum(x1), Count(lambda u1: (lambda v1: IsEven(v1))(u1), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 60.76146076146076,
                "explored_percent_lambda": 25.485625485625487,
                "explored_percent_none": 13.752913752913752,
                "kept_percent_concrete": 71.80762852404644,
                "kept_percent_lambda": 28.192371475953564,
                "num_examples": 4,
                "num_explored_concrete": 782,
                "num_explored_lambda": 328,
                "num_explored_none": 177,
                "num_inputs": 2,
                "num_kept_concrete": 433,
                "num_kept_lambda": 170,
                "num_values_explored": 1287,
                "num_values_kept": 603,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1287
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.865667043253779,
            "num_unique_values": 721,
            "solution": "Sum(Map(lambda u1: (lambda v1: IntDivide(Add(3, 4), v1))(u1), Take(2, x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 67.98878205128206,
                "explored_percent_lambda": 20.272435897435898,
                "explored_percent_none": 11.738782051282051,
                "kept_percent_concrete": 71.62921348314607,
                "kept_percent_lambda": 28.370786516853933,
                "num_examples": 5,
                "num_explored_concrete": 1697,
                "num_explored_lambda": 506,
                "num_explored_none": 293,
                "num_inputs": 1,
                "num_kept_concrete": 510,
                "num_kept_lambda": 202,
                "num_values_explored": 2496,
                "num_values_kept": 712,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2496
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.671008972451091,
            "num_unique_values": 545,
            "solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), Sort(Scanl1(lambda u1, u2: (lambda v1: Square(v1))(u2), x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 56.75675675675676,
                "explored_percent_lambda": 34.63463463463464,
                "explored_percent_none": 8.608608608608609,
                "kept_percent_concrete": 65.04672897196262,
                "kept_percent_lambda": 34.953271028037385,
                "num_examples": 5,
                "num_explored_concrete": 567,
                "num_explored_lambda": 346,
                "num_explored_none": 86,
                "num_inputs": 2,
                "num_kept_concrete": 348,
                "num_kept_lambda": 187,
                "num_values_explored": 999,
                "num_values_kept": 535,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 999
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.1043289452791214,
            "num_unique_values": 245,
            "solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 29.368932038834952,
                "explored_percent_lambda": 44.05339805825243,
                "explored_percent_none": 26.57766990291262,
                "kept_percent_concrete": 49.787234042553195,
                "kept_percent_lambda": 50.212765957446805,
                "num_examples": 2,
                "num_explored_concrete": 242,
                "num_explored_lambda": 363,
                "num_explored_none": 219,
                "num_inputs": 2,
                "num_kept_concrete": 117,
                "num_kept_lambda": 118,
                "num_values_explored": 824,
                "num_values_kept": 235,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 824
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.161799143999815,
            "num_unique_values": 152,
            "solution": "Drop(IntDivide(x1, Add(x3, 2)), x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 37.02970297029703,
                "explored_percent_lambda": 35.04950495049505,
                "explored_percent_none": 27.92079207920792,
                "kept_percent_concrete": 48.226950354609926,
                "kept_percent_lambda": 51.773049645390074,
                "num_examples": 2,
                "num_explored_concrete": 187,
                "num_explored_lambda": 177,
                "num_explored_none": 141,
                "num_inputs": 3,
                "num_kept_concrete": 68,
                "num_kept_lambda": 73,
                "num_values_explored": 505,
                "num_values_kept": 141,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 505
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 10.512348543852568,
            "num_unique_values": 1366,
            "solution": "Head(ZipWith(lambda u1, u2: (lambda v1: Subtract(Last(x2), v1))(u2), x2, Reverse(x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 76.64804469273743,
                "explored_percent_lambda": 12.327746741154563,
                "explored_percent_none": 11.024208566108008,
                "kept_percent_concrete": 80.08849557522124,
                "kept_percent_lambda": 19.911504424778762,
                "num_examples": 5,
                "num_explored_concrete": 4116,
                "num_explored_lambda": 662,
                "num_explored_none": 592,
                "num_inputs": 2,
                "num_kept_concrete": 1086,
                "num_kept_lambda": 270,
                "num_values_explored": 5370,
                "num_values_kept": 1356,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 5370
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.376856589689851,
            "num_unique_values": 133,
            "solution": "Add(4, IntDivide(Subtract(2, x1), 4))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 21.558441558441558,
                "explored_percent_lambda": 11.220779220779221,
                "explored_percent_none": 67.22077922077922,
                "kept_percent_concrete": 90.3225806451613,
                "kept_percent_lambda": 9.67741935483871,
                "num_examples": 5,
                "num_explored_concrete": 415,
                "num_explored_lambda": 216,
                "num_explored_none": 1294,
                "num_inputs": 1,
                "num_kept_concrete": 112,
                "num_kept_lambda": 12,
                "num_values_explored": 1925,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1925
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6855002883821726,
            "num_unique_values": 225,
            "solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 19.49685534591195,
                "explored_percent_lambda": 59.905660377358494,
                "explored_percent_none": 20.59748427672956,
                "kept_percent_concrete": 37.5,
                "kept_percent_lambda": 62.5,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 381,
                "num_explored_none": 131,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 135,
                "num_values_explored": 636,
                "num_values_kept": 216,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 636
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.3155005276203156,
            "num_unique_values": 666,
            "solution": "Head(ZipWith(lambda u1, u2: (lambda v1: Subtract(v1, Square(x1)))(u2), x2, Reverse(x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 74.79312539783578,
                "explored_percent_lambda": 15.977084659452577,
                "explored_percent_none": 9.22978994271165,
                "kept_percent_concrete": 80.64024390243902,
                "kept_percent_lambda": 19.359756097560975,
                "num_examples": 5,
                "num_explored_concrete": 1175,
                "num_explored_lambda": 251,
                "num_explored_none": 145,
                "num_inputs": 2,
                "num_kept_concrete": 529,
                "num_kept_lambda": 127,
                "num_values_explored": 1571,
                "num_values_kept": 656,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1571
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.187100987881422,
            "num_unique_values": 538,
            "solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), Map(lambda u1: Head(x2), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 56.81655960028551,
                "explored_percent_lambda": 30.47822983583155,
                "explored_percent_none": 12.705210563882941,
                "kept_percent_concrete": 65.15151515151516,
                "kept_percent_lambda": 34.84848484848485,
                "num_examples": 3,
                "num_explored_concrete": 796,
                "num_explored_lambda": 427,
                "num_explored_none": 178,
                "num_inputs": 2,
                "num_kept_concrete": 344,
                "num_kept_lambda": 184,
                "num_values_explored": 1401,
                "num_values_kept": 528,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1401
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.7531711887568235,
            "num_unique_values": 180,
            "solution": "Max(Square(4), Multiply(Square(x1), Add(x1, 3)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 24.939817043813193,
                "explored_percent_lambda": 11.844005777563794,
                "explored_percent_none": 63.21617717862301,
                "kept_percent_concrete": 85.96491228070175,
                "kept_percent_lambda": 14.035087719298245,
                "num_examples": 2,
                "num_explored_concrete": 518,
                "num_explored_lambda": 246,
                "num_explored_none": 1313,
                "num_inputs": 1,
                "num_kept_concrete": 147,
                "num_kept_lambda": 24,
                "num_values_explored": 2077,
                "num_values_kept": 171,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2077
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9948637317866087,
            "num_unique_values": 250,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 35.13513513513514,
                "explored_percent_lambda": 41.05534105534105,
                "explored_percent_none": 23.80952380952381,
                "kept_percent_concrete": 53.75,
                "kept_percent_lambda": 46.25,
                "num_examples": 5,
                "num_explored_concrete": 273,
                "num_explored_lambda": 319,
                "num_explored_none": 185,
                "num_inputs": 2,
                "num_kept_concrete": 129,
                "num_kept_lambda": 111,
                "num_values_explored": 777,
                "num_values_kept": 240,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 777
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.601369144394994,
            "num_unique_values": 582,
            "solution": "Square(Min(Last(x2), Sum(Take(Last(x1), x1))))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 60.53130929791271,
                "explored_percent_lambda": 27.514231499051235,
                "explored_percent_none": 11.954459203036054,
                "kept_percent_concrete": 65.9090909090909,
                "kept_percent_lambda": 34.09090909090909,
                "num_examples": 3,
                "num_explored_concrete": 957,
                "num_explored_lambda": 435,
                "num_explored_none": 189,
                "num_inputs": 2,
                "num_kept_concrete": 377,
                "num_kept_lambda": 195,
                "num_values_explored": 1581,
                "num_values_kept": 572,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1581
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8966445159167051,
            "num_unique_values": 268,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 25.19083969465649,
                "explored_percent_lambda": 55.87786259541985,
                "explored_percent_none": 18.931297709923665,
                "kept_percent_concrete": 36.67953667953668,
                "kept_percent_lambda": 63.32046332046332,
                "num_examples": 2,
                "num_explored_concrete": 165,
                "num_explored_lambda": 366,
                "num_explored_none": 124,
                "num_inputs": 1,
                "num_kept_concrete": 95,
                "num_kept_lambda": 164,
                "num_values_explored": 655,
                "num_values_kept": 259,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 655
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.6306024249643087,
            "num_unique_values": 255,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 24.571428571428573,
                "explored_percent_lambda": 50.628571428571426,
                "explored_percent_none": 24.8,
                "kept_percent_concrete": 32.520325203252035,
                "kept_percent_lambda": 67.47967479674797,
                "num_examples": 4,
                "num_explored_concrete": 215,
                "num_explored_lambda": 443,
                "num_explored_none": 217,
                "num_inputs": 1,
                "num_kept_concrete": 80,
                "num_kept_lambda": 166,
                "num_values_explored": 875,
                "num_values_kept": 246,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 875
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.7995262052863836,
            "num_unique_values": 521,
            "solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), Scanl1(lambda u1, u2: (lambda v1: Multiply(3, v1))(u2), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 57.106918238993714,
                "explored_percent_lambda": 24.528301886792452,
                "explored_percent_none": 18.364779874213838,
                "kept_percent_concrete": 66.53620352250489,
                "kept_percent_lambda": 33.46379647749511,
                "num_examples": 5,
                "num_explored_concrete": 908,
                "num_explored_lambda": 390,
                "num_explored_none": 292,
                "num_inputs": 2,
                "num_kept_concrete": 340,
                "num_kept_lambda": 171,
                "num_values_explored": 1590,
                "num_values_kept": 511,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1590
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 42.87721691094339,
            "num_unique_values": 844,
            "solution": "Multiply(Max(Add(3, Sum(x2)), Subtract(Sum(x2), x1)), -1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 74.49165402124432,
                "explored_percent_lambda": 8.088012139605462,
                "explored_percent_none": 17.420333839150228,
                "kept_percent_concrete": 79.71188475390156,
                "kept_percent_lambda": 20.28811524609844,
                "num_examples": 2,
                "num_explored_concrete": 4909,
                "num_explored_lambda": 533,
                "num_explored_none": 1148,
                "num_inputs": 3,
                "num_kept_concrete": 664,
                "num_kept_lambda": 169,
                "num_values_explored": 6590,
                "num_values_kept": 833,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 23454
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8593645300716162,
            "num_unique_values": 262,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 23.015873015873016,
                "explored_percent_lambda": 50.95238095238095,
                "explored_percent_none": 26.03174603174603,
                "kept_percent_concrete": 30.434782608695652,
                "kept_percent_lambda": 69.56521739130434,
                "num_examples": 2,
                "num_explored_concrete": 145,
                "num_explored_lambda": 321,
                "num_explored_none": 164,
                "num_inputs": 1,
                "num_kept_concrete": 77,
                "num_kept_lambda": 176,
                "num_values_explored": 630,
                "num_values_kept": 253,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 630
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6360051538795233,
            "num_unique_values": 262,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 28.785357737104825,
                "explored_percent_lambda": 44.09317803660566,
                "explored_percent_none": 27.12146422628952,
                "kept_percent_concrete": 37.54940711462451,
                "kept_percent_lambda": 62.45059288537549,
                "num_examples": 2,
                "num_explored_concrete": 173,
                "num_explored_lambda": 265,
                "num_explored_none": 163,
                "num_inputs": 1,
                "num_kept_concrete": 95,
                "num_kept_lambda": 158,
                "num_values_explored": 601,
                "num_values_kept": 253,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 601
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 22.274390388280153,
            "num_unique_values": 534,
            "solution": "Subtract(Subtract(x1, x2), Multiply(Min(x2, 0), Multiply(x2, -1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 29.916366147471802,
                "explored_percent_lambda": 7.028312744571473,
                "explored_percent_none": 63.05532110795672,
                "kept_percent_concrete": 94.08396946564885,
                "kept_percent_lambda": 5.916030534351145,
                "num_examples": 2,
                "num_explored_concrete": 3899,
                "num_explored_lambda": 916,
                "num_explored_none": 8218,
                "num_inputs": 2,
                "num_kept_concrete": 493,
                "num_kept_lambda": 31,
                "num_values_explored": 13033,
                "num_values_kept": 524,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 13033
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.454725679010153,
            "num_unique_values": 162,
            "solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 23.510204081632654,
                "explored_percent_lambda": 20.244897959183675,
                "explored_percent_none": 56.244897959183675,
                "kept_percent_concrete": 58.55263157894737,
                "kept_percent_lambda": 41.44736842105263,
                "num_examples": 4,
                "num_explored_concrete": 288,
                "num_explored_lambda": 248,
                "num_explored_none": 689,
                "num_inputs": 2,
                "num_kept_concrete": 89,
                "num_kept_lambda": 63,
                "num_values_explored": 1225,
                "num_values_kept": 152,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1225
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.8493742123246193,
            "num_unique_values": 470,
            "solution": "Reverse(Map(lambda u1: (lambda v1: Subtract(v1, 1))(u1), Reverse(Take(2, x1))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 48.41867469879518,
                "explored_percent_lambda": 33.28313253012048,
                "explored_percent_none": 18.298192771084338,
                "kept_percent_concrete": 54.56521739130435,
                "kept_percent_lambda": 45.43478260869565,
                "num_examples": 3,
                "num_explored_concrete": 643,
                "num_explored_lambda": 442,
                "num_explored_none": 243,
                "num_inputs": 2,
                "num_kept_concrete": 251,
                "num_kept_lambda": 209,
                "num_values_explored": 1328,
                "num_values_kept": 460,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1328
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.540229398757219,
            "num_unique_values": 512,
            "solution": "Subtract(Square(Add(2, 4)), If(IsEven(Head(x1)), 4, 2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 51.47347740667976,
                "explored_percent_lambda": 23.33005893909627,
                "explored_percent_none": 25.19646365422397,
                "kept_percent_concrete": 64.61232604373757,
                "kept_percent_lambda": 35.387673956262425,
                "num_examples": 4,
                "num_explored_concrete": 1048,
                "num_explored_lambda": 475,
                "num_explored_none": 513,
                "num_inputs": 1,
                "num_kept_concrete": 325,
                "num_kept_lambda": 178,
                "num_values_explored": 2036,
                "num_values_kept": 503,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2036
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.855977151542902,
            "num_unique_values": 125,
            "solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 92.57731958762886,
                "explored_percent_lambda": 5.56701030927835,
                "explored_percent_none": 1.8556701030927836,
                "kept_percent_concrete": 85.34482758620689,
                "kept_percent_lambda": 14.655172413793103,
                "num_examples": 5,
                "num_explored_concrete": 449,
                "num_explored_lambda": 27,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 17,
                "num_values_explored": 485,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 485
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7906740494072437,
            "num_unique_values": 242,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 31.450577663671375,
                "explored_percent_lambda": 30.42362002567394,
                "explored_percent_none": 38.125802310654684,
                "kept_percent_concrete": 51.515151515151516,
                "kept_percent_lambda": 48.484848484848484,
                "num_examples": 2,
                "num_explored_concrete": 245,
                "num_explored_lambda": 237,
                "num_explored_none": 297,
                "num_inputs": 3,
                "num_kept_concrete": 119,
                "num_kept_lambda": 112,
                "num_values_explored": 779,
                "num_values_kept": 231,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 779
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.8573658019304276,
            "num_unique_values": 188,
            "solution": "Max(Subtract(x1, x2), Add(x1, Add(x2, 3)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 25.35816618911175,
                "explored_percent_lambda": 14.087870105062082,
                "explored_percent_none": 60.55396370582617,
                "kept_percent_concrete": 83.70786516853933,
                "kept_percent_lambda": 16.292134831460675,
                "num_examples": 2,
                "num_explored_concrete": 531,
                "num_explored_lambda": 295,
                "num_explored_none": 1268,
                "num_inputs": 2,
                "num_kept_concrete": 149,
                "num_kept_lambda": 29,
                "num_values_explored": 2094,
                "num_values_kept": 178,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2094
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9060671366751194,
            "num_unique_values": 251,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 34.54790823211876,
                "explored_percent_lambda": 36.16734143049933,
                "explored_percent_none": 29.284750337381915,
                "kept_percent_concrete": 54.166666666666664,
                "kept_percent_lambda": 45.833333333333336,
                "num_examples": 4,
                "num_explored_concrete": 256,
                "num_explored_lambda": 268,
                "num_explored_none": 217,
                "num_inputs": 3,
                "num_kept_concrete": 130,
                "num_kept_lambda": 110,
                "num_values_explored": 741,
                "num_values_kept": 240,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 741
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.6279128063470125,
            "num_unique_values": 505,
            "solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 60.427350427350426,
                "explored_percent_lambda": 26.837606837606838,
                "explored_percent_none": 12.735042735042734,
                "kept_percent_concrete": 67.20647773279352,
                "kept_percent_lambda": 32.79352226720648,
                "num_examples": 4,
                "num_explored_concrete": 707,
                "num_explored_lambda": 314,
                "num_explored_none": 149,
                "num_inputs": 3,
                "num_kept_concrete": 332,
                "num_kept_lambda": 162,
                "num_values_explored": 1170,
                "num_values_kept": 494,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1170
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 123.49348680488765,
            "num_unique_values": 127,
            "solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 21.94262707599396,
                "explored_percent_lambda": 12.028183190739808,
                "explored_percent_none": 66.02918973326624,
                "kept_percent_concrete": 84.61538461538461,
                "kept_percent_lambda": 15.384615384615385,
                "num_examples": 4,
                "num_explored_concrete": 436,
                "num_explored_lambda": 239,
                "num_explored_none": 1312,
                "num_inputs": 2,
                "num_kept_concrete": 99,
                "num_kept_lambda": 18,
                "num_values_explored": 1987,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 70205
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.904062282294035,
            "num_unique_values": 1021,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), Drop(1, Take(4, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 64.44703143189756,
                "explored_percent_lambda": 30.011641443539,
                "explored_percent_none": 5.541327124563446,
                "kept_percent_concrete": 48.22134387351779,
                "kept_percent_lambda": 51.77865612648221,
                "num_examples": 5,
                "num_explored_concrete": 2768,
                "num_explored_lambda": 1289,
                "num_explored_none": 238,
                "num_inputs": 1,
                "num_kept_concrete": 488,
                "num_kept_lambda": 524,
                "num_values_explored": 4295,
                "num_values_kept": 1012,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4295
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5214498434215784,
            "num_unique_values": 264,
            "solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 40.03623188405797,
                "explored_percent_lambda": 38.04347826086956,
                "explored_percent_none": 21.920289855072465,
                "kept_percent_concrete": 61.26482213438735,
                "kept_percent_lambda": 38.73517786561265,
                "num_examples": 5,
                "num_explored_concrete": 221,
                "num_explored_lambda": 210,
                "num_explored_none": 121,
                "num_inputs": 3,
                "num_kept_concrete": 155,
                "num_kept_lambda": 98,
                "num_values_explored": 552,
                "num_values_kept": 253,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 183.71434964239597,
            "num_unique_values": 465,
            "solution": "Reverse(Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), Reverse(x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 40.546369518332135,
                "explored_percent_lambda": 38.03019410496046,
                "explored_percent_none": 21.423436376707404,
                "kept_percent_concrete": 43.64035087719298,
                "kept_percent_lambda": 56.35964912280702,
                "num_examples": 3,
                "num_explored_concrete": 564,
                "num_explored_lambda": 529,
                "num_explored_none": 298,
                "num_inputs": 1,
                "num_kept_concrete": 199,
                "num_kept_lambda": 257,
                "num_values_explored": 1391,
                "num_values_kept": 456,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 87129
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 44.10016703233123,
            "num_unique_values": 1285,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Max(1, (lambda v1: Subtract(Add(x1, 1), v1))(v1)))(u2), x2)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 61.6131084950684,
                "explored_percent_lambda": 25.946547884187083,
                "explored_percent_none": 12.440343620744512,
                "kept_percent_concrete": 49.411764705882355,
                "kept_percent_lambda": 50.588235294117645,
                "num_examples": 4,
                "num_explored_concrete": 3873,
                "num_explored_lambda": 1631,
                "num_explored_none": 782,
                "num_inputs": 2,
                "num_kept_concrete": 630,
                "num_kept_lambda": 645,
                "num_values_explored": 6286,
                "num_values_kept": 1275,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 19623
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 601.040852047503,
            "num_unique_values": 2451,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.28844698272896,
                "explored_percent_lambda": 14.75951283286314,
                "explored_percent_none": 8.952040184407899,
                "kept_percent_concrete": 63.31967213114754,
                "kept_percent_lambda": 36.68032786885246,
                "num_examples": 5,
                "num_explored_concrete": 11087,
                "num_explored_lambda": 2145,
                "num_explored_none": 1301,
                "num_inputs": 3,
                "num_kept_concrete": 1545,
                "num_kept_lambda": 895,
                "num_values_explored": 14533,
                "num_values_kept": 2440,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 291655
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.981546649709344,
            "num_unique_values": 229,
            "solution": "ZipWith(lambda u1, u2: Sum(x1), x2, Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 27.04485488126649,
                "explored_percent_lambda": 51.715039577836414,
                "explored_percent_none": 21.240105540897098,
                "kept_percent_concrete": 40.182648401826484,
                "kept_percent_lambda": 59.817351598173516,
                "num_examples": 5,
                "num_explored_concrete": 205,
                "num_explored_lambda": 392,
                "num_explored_none": 161,
                "num_inputs": 2,
                "num_kept_concrete": 88,
                "num_kept_lambda": 131,
                "num_values_explored": 758,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 758
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 47.270391285419464,
            "num_unique_values": 823,
            "solution": "Min(Subtract(x1, 3), Add(2, Subtract(x1, Head(x2))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 59.235044132069305,
                "explored_percent_lambda": 7.006647052413642,
                "explored_percent_none": 33.758308815517054,
                "kept_percent_concrete": 81.54981549815498,
                "kept_percent_lambda": 18.45018450184502,
                "num_examples": 5,
                "num_explored_concrete": 5436,
                "num_explored_lambda": 643,
                "num_explored_none": 3098,
                "num_inputs": 2,
                "num_kept_concrete": 663,
                "num_kept_lambda": 150,
                "num_values_explored": 9177,
                "num_values_kept": 813,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 25739
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.222706669941545,
            "num_unique_values": 1001,
            "solution": "Sort(Scanl1(lambda u1, u2: IntDivide(Add(3, 4), Subtract(x1, 3)), Map(lambda u1: 1, x2)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 62.28123114061557,
                "explored_percent_lambda": 17.35666867833434,
                "explored_percent_none": 20.362100181050092,
                "kept_percent_concrete": 58.93037336024218,
                "kept_percent_lambda": 41.06962663975782,
                "num_examples": 2,
                "num_explored_concrete": 5160,
                "num_explored_lambda": 1438,
                "num_explored_none": 1687,
                "num_inputs": 2,
                "num_kept_concrete": 584,
                "num_kept_lambda": 407,
                "num_values_explored": 8285,
                "num_values_kept": 991,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 8285
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 22.409055322408676,
            "num_unique_values": 508,
            "solution": "Subtract(Add(x1, Multiply(-1, Square(Square(3)))), Square(3))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 30.386740331491712,
                "explored_percent_lambda": 11.837695860882166,
                "explored_percent_none": 57.77556380762612,
                "kept_percent_concrete": 81.56312625250501,
                "kept_percent_lambda": 18.43687374749499,
                "num_examples": 4,
                "num_explored_concrete": 3355,
                "num_explored_lambda": 1307,
                "num_explored_none": 6379,
                "num_inputs": 1,
                "num_kept_concrete": 407,
                "num_kept_lambda": 92,
                "num_values_explored": 11041,
                "num_values_kept": 499,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 11041
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.520389499142766,
            "num_unique_values": 215,
            "solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 26.676829268292682,
                "explored_percent_lambda": 37.65243902439025,
                "explored_percent_none": 35.670731707317074,
                "kept_percent_concrete": 51.21951219512195,
                "kept_percent_lambda": 48.78048780487805,
                "num_examples": 4,
                "num_explored_concrete": 175,
                "num_explored_lambda": 247,
                "num_explored_none": 234,
                "num_inputs": 2,
                "num_kept_concrete": 105,
                "num_kept_lambda": 100,
                "num_values_explored": 656,
                "num_values_kept": 205,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 656
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.51717733219266,
            "num_unique_values": 1195,
            "solution": "Subtract(Multiply(-1, Sum(Drop(3, Reverse(x1)))), Add(4, Square(3)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 80.61797752808988,
                "explored_percent_lambda": 12.80568407138136,
                "explored_percent_none": 6.57633840052875,
                "kept_percent_concrete": 77.65598650927487,
                "kept_percent_lambda": 22.344013490725125,
                "num_examples": 3,
                "num_explored_concrete": 4879,
                "num_explored_lambda": 775,
                "num_explored_none": 398,
                "num_inputs": 1,
                "num_kept_concrete": 921,
                "num_kept_lambda": 265,
                "num_values_explored": 6052,
                "num_values_kept": 1186,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 6052
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.137948468327522,
            "num_unique_values": 461,
            "solution": "Reverse(Scanl1(lambda u1, u2: Add(x1, -1), Map(lambda u1: (lambda v1: Add(-1, v1))(u1), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 34.52605147520402,
                "explored_percent_lambda": 38.6691776522285,
                "explored_percent_none": 26.804770872567484,
                "kept_percent_concrete": 36.58536585365854,
                "kept_percent_lambda": 63.41463414634146,
                "num_examples": 2,
                "num_explored_concrete": 550,
                "num_explored_lambda": 616,
                "num_explored_none": 427,
                "num_inputs": 2,
                "num_kept_concrete": 165,
                "num_kept_lambda": 286,
                "num_values_explored": 1593,
                "num_values_kept": 451,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1593
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.390259627252817,
            "num_unique_values": 315,
            "solution": "Add(Subtract(IntDivide(x1, 3), Add(4, IntDivide(x1, 2))), 1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 26.09254498714653,
                "explored_percent_lambda": 11.359254498714654,
                "explored_percent_none": 62.54820051413882,
                "kept_percent_concrete": 83.98692810457516,
                "kept_percent_lambda": 16.013071895424837,
                "num_examples": 4,
                "num_explored_concrete": 1624,
                "num_explored_lambda": 707,
                "num_explored_none": 3893,
                "num_inputs": 1,
                "num_kept_concrete": 257,
                "num_kept_lambda": 49,
                "num_values_explored": 6224,
                "num_values_kept": 306,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 6224
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.06633465923369,
            "num_unique_values": 999,
            "solution": "Scanl1(lambda u1, u2: Multiply(-1, Add(3, Max(4, Sum(x1)))), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 77.06140350877193,
                "explored_percent_lambda": 16.29385964912281,
                "explored_percent_none": 6.644736842105263,
                "kept_percent_concrete": 69.8685540950455,
                "kept_percent_lambda": 30.1314459049545,
                "num_examples": 2,
                "num_explored_concrete": 3514,
                "num_explored_lambda": 743,
                "num_explored_none": 303,
                "num_inputs": 2,
                "num_kept_concrete": 691,
                "num_kept_lambda": 298,
                "num_values_explored": 4560,
                "num_values_kept": 989,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4560
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 363.3693719152361,
            "num_unique_values": 484,
            "solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 43.842794759825324,
                "explored_percent_lambda": 31.09170305676856,
                "explored_percent_none": 25.065502183406114,
                "kept_percent_concrete": 63.924050632911396,
                "kept_percent_lambda": 36.075949367088604,
                "num_examples": 5,
                "num_explored_concrete": 502,
                "num_explored_lambda": 356,
                "num_explored_none": 287,
                "num_inputs": 2,
                "num_kept_concrete": 303,
                "num_kept_lambda": 171,
                "num_values_explored": 1145,
                "num_values_kept": 474,
                "temperature": 1.0,
                "total_num_restarts": 13,
                "total_num_values_explored": 186033
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.204645646736026,
            "num_unique_values": 542,
            "solution": "Scanl1(lambda u1, u2: Subtract(1, 4), Map(lambda u1: Subtract(Minimum(x1), 4), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 64.9405178446466,
                "explored_percent_lambda": 28.34149755073478,
                "explored_percent_none": 6.717984604618614,
                "kept_percent_concrete": 58.72420262664165,
                "kept_percent_lambda": 41.27579737335835,
                "num_examples": 3,
                "num_explored_concrete": 928,
                "num_explored_lambda": 405,
                "num_explored_none": 96,
                "num_inputs": 1,
                "num_kept_concrete": 313,
                "num_kept_lambda": 220,
                "num_values_explored": 1429,
                "num_values_kept": 533,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1429
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.088344931602478,
            "num_unique_values": 784,
            "solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 66.13348041919471,
                "explored_percent_lambda": 25.261996690568118,
                "explored_percent_none": 8.604522890237176,
                "kept_percent_concrete": 72.22222222222223,
                "kept_percent_lambda": 27.77777777777778,
                "num_examples": 5,
                "num_explored_concrete": 1199,
                "num_explored_lambda": 458,
                "num_explored_none": 156,
                "num_inputs": 2,
                "num_kept_concrete": 559,
                "num_kept_lambda": 215,
                "num_values_explored": 1813,
                "num_values_kept": 774,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1813
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 484.15829541534185,
            "num_unique_values": 533,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u2), x1, x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 42.397914856646395,
                "explored_percent_lambda": 45.26498696785404,
                "explored_percent_none": 12.337098175499566,
                "kept_percent_concrete": 37.786259541984734,
                "kept_percent_lambda": 62.213740458015266,
                "num_examples": 2,
                "num_explored_concrete": 488,
                "num_explored_lambda": 521,
                "num_explored_none": 142,
                "num_inputs": 1,
                "num_kept_concrete": 198,
                "num_kept_lambda": 326,
                "num_values_explored": 1151,
                "num_values_kept": 524,
                "temperature": 1.0,
                "total_num_restarts": 17,
                "total_num_values_explored": 199645
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8911713045090437,
            "num_unique_values": 252,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 28.991596638655462,
                "explored_percent_lambda": 37.39495798319328,
                "explored_percent_none": 33.61344537815126,
                "kept_percent_concrete": 53.11203319502075,
                "kept_percent_lambda": 46.88796680497925,
                "num_examples": 4,
                "num_explored_concrete": 207,
                "num_explored_lambda": 267,
                "num_explored_none": 240,
                "num_inputs": 3,
                "num_kept_concrete": 128,
                "num_kept_lambda": 113,
                "num_values_explored": 714,
                "num_values_kept": 241,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 714
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 20.322526337578893,
            "num_unique_values": 866,
            "solution": "Map(lambda u1: Add(1, Multiply(3, IntDivide(Head(x1), 4))), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 45.75785370327907,
                "explored_percent_lambda": 24.168768631047925,
                "explored_percent_none": 30.07337766567301,
                "kept_percent_concrete": 43.52392065344224,
                "kept_percent_lambda": 56.47607934655776,
                "num_examples": 2,
                "num_explored_concrete": 3991,
                "num_explored_lambda": 2108,
                "num_explored_none": 2623,
                "num_inputs": 1,
                "num_kept_concrete": 373,
                "num_kept_lambda": 484,
                "num_values_explored": 8722,
                "num_values_kept": 857,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 8722
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.9158726669848,
            "num_unique_values": 2398,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 87.76756523348344,
                "explored_percent_lambda": 5.379063598790944,
                "explored_percent_none": 6.853371167725618,
                "kept_percent_concrete": 88.22790113112694,
                "kept_percent_lambda": 11.772098868873062,
                "num_examples": 4,
                "num_explored_concrete": 14228,
                "num_explored_lambda": 872,
                "num_explored_none": 1111,
                "num_inputs": 3,
                "num_kept_concrete": 2106,
                "num_kept_lambda": 281,
                "num_values_explored": 16211,
                "num_values_kept": 2387,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 320828
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 601.1594476178288,
            "num_unique_values": 2157,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.96312734721748,
                "explored_percent_lambda": 39.9965858654831,
                "explored_percent_none": 8.04028678729942,
                "kept_percent_concrete": 33.659217877094974,
                "kept_percent_lambda": 66.34078212290503,
                "num_examples": 3,
                "num_explored_concrete": 6088,
                "num_explored_lambda": 4686,
                "num_explored_none": 942,
                "num_inputs": 1,
                "num_kept_concrete": 723,
                "num_kept_lambda": 1425,
                "num_values_explored": 11716,
                "num_values_kept": 2148,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 234172
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.4202693924308,
            "num_unique_values": 731,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.164003912618195,
                "explored_percent_lambda": 9.409846755787415,
                "explored_percent_none": 59.426149331594395,
                "kept_percent_concrete": 88.08864265927978,
                "kept_percent_lambda": 11.911357340720222,
                "num_examples": 4,
                "num_explored_concrete": 4779,
                "num_explored_lambda": 1443,
                "num_explored_none": 9113,
                "num_inputs": 1,
                "num_kept_concrete": 636,
                "num_kept_lambda": 86,
                "num_values_explored": 15335,
                "num_values_kept": 722,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 312179
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.974574211984873,
            "num_unique_values": 1027,
            "solution": "Scanl1(lambda u1, u2: Square(Sum(Scanl1(lambda u1, u2: 4, x1))), Map(lambda u1: Square(Head(x1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 66.23406193078324,
                "explored_percent_lambda": 24.18032786885246,
                "explored_percent_none": 9.585610200364298,
                "kept_percent_concrete": 49.214145383104125,
                "kept_percent_lambda": 50.785854616895875,
                "num_examples": 2,
                "num_explored_concrete": 2909,
                "num_explored_lambda": 1062,
                "num_explored_none": 421,
                "num_inputs": 1,
                "num_kept_concrete": 501,
                "num_kept_lambda": 517,
                "num_values_explored": 4392,
                "num_values_kept": 1018,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4392
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.255011424422264,
            "num_unique_values": 1158,
            "solution": "Map(lambda u1: If(IsOdd(Sum(x1)), Square(3), Sum(Drop(1, x1))), x3)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 74.58899213724088,
                "explored_percent_lambda": 16.279485346676196,
                "explored_percent_none": 9.131522516082917,
                "kept_percent_concrete": 69.48561464690496,
                "kept_percent_lambda": 30.51438535309503,
                "num_examples": 5,
                "num_explored_concrete": 4174,
                "num_explored_lambda": 911,
                "num_explored_none": 511,
                "num_inputs": 3,
                "num_kept_concrete": 797,
                "num_kept_lambda": 350,
                "num_values_explored": 5596,
                "num_values_kept": 1147,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 5596
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.758355051279068,
            "num_unique_values": 504,
            "solution": "Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), Take(3, x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 54.24317617866005,
                "explored_percent_lambda": 32.55583126550869,
                "explored_percent_none": 13.200992555831265,
                "kept_percent_concrete": 44.93927125506073,
                "kept_percent_lambda": 55.06072874493927,
                "num_examples": 2,
                "num_explored_concrete": 1093,
                "num_explored_lambda": 656,
                "num_explored_none": 266,
                "num_inputs": 2,
                "num_kept_concrete": 222,
                "num_kept_lambda": 272,
                "num_values_explored": 2015,
                "num_values_kept": 494,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2015
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.202251704409719,
            "num_unique_values": 670,
            "solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 40.86500655307995,
                "explored_percent_lambda": 33.28964613368283,
                "explored_percent_none": 25.845347313237223,
                "kept_percent_concrete": 35.24962178517398,
                "kept_percent_lambda": 64.75037821482601,
                "num_examples": 3,
                "num_explored_concrete": 1559,
                "num_explored_lambda": 1270,
                "num_explored_none": 986,
                "num_inputs": 1,
                "num_kept_concrete": 233,
                "num_kept_lambda": 428,
                "num_values_explored": 3815,
                "num_values_kept": 661,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3815
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 473.8673437796533,
            "num_unique_values": 2548,
            "solution": "Min(IntDivide(Sum(x1), Head(x1)), Sum(Map(lambda u1: x2, Drop(2, x1))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 91.38557781722885,
                "explored_percent_lambda": 5.976836588046327,
                "explored_percent_none": 2.637585594724829,
                "kept_percent_concrete": 87.50492707922743,
                "kept_percent_lambda": 12.495072920772566,
                "num_examples": 5,
                "num_explored_concrete": 10810,
                "num_explored_lambda": 707,
                "num_explored_none": 312,
                "num_inputs": 3,
                "num_kept_concrete": 2220,
                "num_kept_lambda": 317,
                "num_values_explored": 11829,
                "num_values_kept": 2537,
                "temperature": 1.0,
                "total_num_restarts": 16,
                "total_num_values_explored": 242023
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.686701526865363,
            "num_unique_values": 952,
            "solution": "Scanl1(lambda u1, u2: Min(-1, IntDivide(x1, Head(x3))), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 65.17490717217119,
                "explored_percent_lambda": 11.412937267930428,
                "explored_percent_none": 23.412155559898377,
                "kept_percent_concrete": 72.79489904357067,
                "kept_percent_lambda": 27.20510095642933,
                "num_examples": 4,
                "num_explored_concrete": 3335,
                "num_explored_lambda": 584,
                "num_explored_none": 1198,
                "num_inputs": 3,
                "num_kept_concrete": 685,
                "num_kept_lambda": 256,
                "num_values_explored": 5117,
                "num_values_kept": 941,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 5117
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.0806374605745077,
            "num_unique_values": 251,
            "solution": "Scanl1(lambda u1, u2: 0, Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Drop(1, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 24.387096774193548,
                "explored_percent_lambda": 48.0,
                "explored_percent_none": 27.612903225806452,
                "kept_percent_concrete": 38.84297520661157,
                "kept_percent_lambda": 61.15702479338843,
                "num_examples": 2,
                "num_explored_concrete": 189,
                "num_explored_lambda": 372,
                "num_explored_none": 214,
                "num_inputs": 1,
                "num_kept_concrete": 94,
                "num_kept_lambda": 148,
                "num_values_explored": 775,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 775
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.678516689687967,
            "num_unique_values": 751,
            "solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 75.95394736842105,
                "explored_percent_lambda": 14.276315789473685,
                "explored_percent_none": 9.769736842105264,
                "kept_percent_concrete": 76.6531713900135,
                "kept_percent_lambda": 23.346828609986506,
                "num_examples": 3,
                "num_explored_concrete": 2309,
                "num_explored_lambda": 434,
                "num_explored_none": 297,
                "num_inputs": 2,
                "num_kept_concrete": 568,
                "num_kept_lambda": 173,
                "num_values_explored": 3040,
                "num_values_kept": 741,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3040
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3325312584639,
            "num_unique_values": 713,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.954433143710855,
                "explored_percent_lambda": 6.079411595701891,
                "explored_percent_none": 62.96615526058726,
                "kept_percent_concrete": 93.4566145092461,
                "kept_percent_lambda": 6.543385490753912,
                "num_examples": 4,
                "num_explored_concrete": 5387,
                "num_explored_lambda": 1058,
                "num_explored_none": 10958,
                "num_inputs": 2,
                "num_kept_concrete": 657,
                "num_kept_lambda": 46,
                "num_values_explored": 17403,
                "num_values_kept": 703,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 349992
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.477961901575327,
            "num_unique_values": 584,
            "solution": "Min(2, Multiply(Sum(x1), Square(Multiply(4, Minimum(Drop(1, x1))))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 53.64238410596027,
                "explored_percent_lambda": 30.132450331125828,
                "explored_percent_none": 16.225165562913908,
                "kept_percent_concrete": 71.82608695652173,
                "kept_percent_lambda": 28.17391304347826,
                "num_examples": 5,
                "num_explored_concrete": 810,
                "num_explored_lambda": 455,
                "num_explored_none": 245,
                "num_inputs": 1,
                "num_kept_concrete": 413,
                "num_kept_lambda": 162,
                "num_values_explored": 1510,
                "num_values_kept": 575,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1510
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.1081881839782,
            "num_unique_values": 493,
            "solution": "Multiply(Subtract(-1, Multiply(x2, 4)), Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 60.59113300492611,
                "explored_percent_lambda": 10.685865858279652,
                "explored_percent_none": 28.72300113679424,
                "kept_percent_concrete": 82.6086956521739,
                "kept_percent_lambda": 17.391304347826086,
                "num_examples": 4,
                "num_explored_concrete": 1599,
                "num_explored_lambda": 282,
                "num_explored_none": 758,
                "num_inputs": 2,
                "num_kept_concrete": 399,
                "num_kept_lambda": 84,
                "num_values_explored": 2639,
                "num_values_kept": 483,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 173317
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 506.9112946074456,
            "num_unique_values": 658,
            "solution": "Add(4, Multiply(3, Multiply(4, Min(1, Subtract(2, Square(x1))))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 28.6897191308956,
                "explored_percent_lambda": 9.678060413354531,
                "explored_percent_none": 61.63222045574987,
                "kept_percent_concrete": 88.4437596302003,
                "kept_percent_lambda": 11.556240369799692,
                "num_examples": 3,
                "num_explored_concrete": 4331,
                "num_explored_lambda": 1461,
                "num_explored_none": 9304,
                "num_inputs": 1,
                "num_kept_concrete": 574,
                "num_kept_lambda": 75,
                "num_values_explored": 15096,
                "num_values_kept": 649,
                "temperature": 1.0,
                "total_num_restarts": 17,
                "total_num_values_explored": 288776
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.146426979452372,
            "num_unique_values": 661,
            "solution": "Take(1, Map(lambda u1: Add(2, Square(Add(3, 4))), Drop(3, x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 57.89473684210526,
                "explored_percent_lambda": 22.523219814241486,
                "explored_percent_none": 19.58204334365325,
                "kept_percent_concrete": 60.52227342549923,
                "kept_percent_lambda": 39.47772657450077,
                "num_examples": 3,
                "num_explored_concrete": 1496,
                "num_explored_lambda": 582,
                "num_explored_none": 506,
                "num_inputs": 2,
                "num_kept_concrete": 394,
                "num_kept_lambda": 257,
                "num_values_explored": 2584,
                "num_values_kept": 651,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2584
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 63.779936665669084,
            "num_unique_values": 498,
            "solution": "Filter(lambda u1: IsEven(Maximum(x1)), Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 42.03691045796309,
                "explored_percent_lambda": 43.403964456596036,
                "explored_percent_none": 14.559125085440876,
                "kept_percent_concrete": 46.21676891615542,
                "kept_percent_lambda": 53.78323108384458,
                "num_examples": 5,
                "num_explored_concrete": 615,
                "num_explored_lambda": 635,
                "num_explored_none": 213,
                "num_inputs": 1,
                "num_kept_concrete": 226,
                "num_kept_lambda": 263,
                "num_values_explored": 1463,
                "num_values_kept": 489,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 28717
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.98029024526477,
            "num_unique_values": 1706,
            "solution": "Max(Sum(x1), Multiply(3, Max(-1, IntDivide(Last(x1), 3))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 77.52853995593831,
                "explored_percent_lambda": 9.633486881634289,
                "explored_percent_none": 12.837973162427398,
                "kept_percent_concrete": 79.90571596935769,
                "kept_percent_lambda": 20.09428403064231,
                "num_examples": 5,
                "num_explored_concrete": 7742,
                "num_explored_lambda": 962,
                "num_explored_none": 1282,
                "num_inputs": 1,
                "num_kept_concrete": 1356,
                "num_kept_lambda": 341,
                "num_values_explored": 9986,
                "num_values_kept": 1697,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 9986
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.725878899917006,
            "num_unique_values": 700,
            "solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 58.60823501083554,
                "explored_percent_lambda": 20.057789549723093,
                "explored_percent_none": 21.333975439441367,
                "kept_percent_concrete": 62.95224312590449,
                "kept_percent_lambda": 37.04775687409551,
                "num_examples": 2,
                "num_explored_concrete": 2434,
                "num_explored_lambda": 833,
                "num_explored_none": 886,
                "num_inputs": 1,
                "num_kept_concrete": 435,
                "num_kept_lambda": 256,
                "num_values_explored": 4153,
                "num_values_kept": 691,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4153
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 24.938880279660225,
            "num_unique_values": 1762,
            "solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Head(x1), Square(4))), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 65.47085201793722,
                "explored_percent_lambda": 18.997930320800275,
                "explored_percent_none": 15.531217661262504,
                "kept_percent_concrete": 64.97432972047918,
                "kept_percent_lambda": 35.025670279520824,
                "num_examples": 4,
                "num_explored_concrete": 7592,
                "num_explored_lambda": 2203,
                "num_explored_none": 1801,
                "num_inputs": 1,
                "num_kept_concrete": 1139,
                "num_kept_lambda": 614,
                "num_values_explored": 11596,
                "num_values_kept": 1753,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 11596
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.7132963519543,
            "num_unique_values": 1165,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.53597639403798,
                "explored_percent_lambda": 24.332299311492775,
                "explored_percent_none": 27.131724294469244,
                "kept_percent_concrete": 38.92733564013841,
                "kept_percent_lambda": 61.07266435986159,
                "num_examples": 2,
                "num_explored_concrete": 6415,
                "num_explored_lambda": 3216,
                "num_explored_none": 3586,
                "num_inputs": 1,
                "num_kept_concrete": 450,
                "num_kept_lambda": 706,
                "num_values_explored": 13217,
                "num_values_kept": 1156,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 258110
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.549318125471473,
            "num_unique_values": 440,
            "solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 34.90332176499752,
                "explored_percent_lambda": 38.27466534457115,
                "explored_percent_none": 26.822012890431335,
                "kept_percent_concrete": 25.52204176334107,
                "kept_percent_lambda": 74.47795823665894,
                "num_examples": 2,
                "num_explored_concrete": 704,
                "num_explored_lambda": 772,
                "num_explored_none": 541,
                "num_inputs": 1,
                "num_kept_concrete": 110,
                "num_kept_lambda": 321,
                "num_values_explored": 2017,
                "num_values_kept": 431,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2017
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3365053497255,
            "num_unique_values": 643,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 36.61931161931162,
                "explored_percent_lambda": 10.522060522060523,
                "explored_percent_none": 52.858627858627855,
                "kept_percent_concrete": 86.27760252365931,
                "kept_percent_lambda": 13.722397476340694,
                "num_examples": 2,
                "num_explored_concrete": 6341,
                "num_explored_lambda": 1822,
                "num_explored_none": 9153,
                "num_inputs": 1,
                "num_kept_concrete": 547,
                "num_kept_lambda": 87,
                "num_values_explored": 17316,
                "num_values_kept": 634,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 337805
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 25.927771704271436,
            "num_unique_values": 632,
            "solution": "Subtract(If(IsEven(x1), Multiply(-1, Square(3)), Add(x1, x1)), 2)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 29.119758216849263,
                "explored_percent_lambda": 16.62259161314696,
                "explored_percent_none": 54.25765017000378,
                "kept_percent_concrete": 71.74959871589085,
                "kept_percent_lambda": 28.25040128410915,
                "num_examples": 2,
                "num_explored_concrete": 3854,
                "num_explored_lambda": 2200,
                "num_explored_none": 7181,
                "num_inputs": 1,
                "num_kept_concrete": 447,
                "num_kept_lambda": 176,
                "num_values_explored": 13235,
                "num_values_kept": 623,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 13235
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.144734064117074,
            "num_unique_values": 444,
            "solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 27.0197904540163,
                "explored_percent_lambda": 19.90686845168801,
                "explored_percent_none": 53.07334109429569,
                "kept_percent_concrete": 67.28110599078342,
                "kept_percent_lambda": 32.71889400921659,
                "num_examples": 2,
                "num_explored_concrete": 2321,
                "num_explored_lambda": 1710,
                "num_explored_none": 4559,
                "num_inputs": 2,
                "num_kept_concrete": 292,
                "num_kept_lambda": 142,
                "num_values_explored": 8590,
                "num_values_kept": 434,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 8590
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3639352060854,
            "num_unique_values": 740,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.23105134474328,
                "explored_percent_lambda": 13.575794621026894,
                "explored_percent_none": 54.19315403422983,
                "kept_percent_concrete": 75.75342465753425,
                "kept_percent_lambda": 24.246575342465754,
                "num_examples": 2,
                "num_explored_concrete": 5273,
                "num_explored_lambda": 2221,
                "num_explored_none": 8866,
                "num_inputs": 2,
                "num_kept_concrete": 553,
                "num_kept_lambda": 177,
                "num_values_explored": 16360,
                "num_values_kept": 730,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 323820
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3586520757526,
            "num_unique_values": 677,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.163139042657114,
                "explored_percent_lambda": 15.97525236079453,
                "explored_percent_none": 54.86160859654836,
                "kept_percent_concrete": 72.11394302848576,
                "kept_percent_lambda": 27.886056971514243,
                "num_examples": 2,
                "num_explored_concrete": 4478,
                "num_explored_lambda": 2453,
                "num_explored_none": 8424,
                "num_inputs": 2,
                "num_kept_concrete": 481,
                "num_kept_lambda": 186,
                "num_values_explored": 15355,
                "num_values_kept": 667,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 316289
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.348149292171,
            "num_unique_values": 710,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.1787072243346,
                "explored_percent_lambda": 13.80041139437761,
                "explored_percent_none": 55.020881381287786,
                "kept_percent_concrete": 78.28571428571429,
                "kept_percent_lambda": 21.714285714285715,
                "num_examples": 2,
                "num_explored_concrete": 5002,
                "num_explored_lambda": 2214,
                "num_explored_none": 8827,
                "num_inputs": 2,
                "num_kept_concrete": 548,
                "num_kept_lambda": 152,
                "num_values_explored": 16043,
                "num_values_kept": 700,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 318369
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.6911405976862,
            "num_unique_values": 1195,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.48763277129912,
                "explored_percent_lambda": 26.977642427393597,
                "explored_percent_none": 27.534724801307288,
                "kept_percent_concrete": 35.32883642495784,
                "kept_percent_lambda": 64.67116357504216,
                "num_examples": 2,
                "num_explored_concrete": 6124,
                "num_explored_lambda": 3632,
                "num_explored_none": 3707,
                "num_inputs": 1,
                "num_kept_concrete": 419,
                "num_kept_lambda": 767,
                "num_values_explored": 13463,
                "num_values_kept": 1186,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 272186
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 83.16259722597897,
            "num_unique_values": 554,
            "solution": "Add(3, Max(Add(x1, x1), Multiply(Square(4), Add(3, 4))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 30.953282350268797,
                "explored_percent_lambda": 12.01635496327705,
                "explored_percent_none": 57.030362686454154,
                "kept_percent_concrete": 89.1743119266055,
                "kept_percent_lambda": 10.825688073394495,
                "num_examples": 3,
                "num_explored_concrete": 4088,
                "num_explored_lambda": 1587,
                "num_explored_none": 7532,
                "num_inputs": 1,
                "num_kept_concrete": 486,
                "num_kept_lambda": 59,
                "num_values_explored": 13207,
                "num_values_kept": 545,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 47130
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.89
}