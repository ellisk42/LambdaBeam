{
    "num_tasks": 100,
    "num_tasks_solved": 82,
    "results": [
        {
            "elapsed_time": 1.9940688610076904,
            "num_unique_values": 219,
            "solution": "Map(lambda u1: 1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 19.20980926430518,
                "explored_percent_lambda": 56.130790190735695,
                "explored_percent_none": 24.659400544959126,
                "kept_percent_concrete": 30.476190476190474,
                "kept_percent_lambda": 69.52380952380952,
                "num_examples": 2,
                "num_explored_concrete": 141,
                "num_explored_lambda": 412,
                "num_explored_none": 181,
                "num_inputs": 1,
                "num_kept_concrete": 64,
                "num_kept_lambda": 146,
                "num_values_explored": 734,
                "num_values_kept": 210,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9568003341555595,
            "num_unique_values": 262,
            "solution": "Scanl1(lambda u1, u2: x2, ZipWith(lambda u1, u2: (lambda v1: Max(1, v1))(u1), x1, x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 32.17821782178218,
                "explored_percent_lambda": 40.59405940594059,
                "explored_percent_none": 27.22772277227723,
                "kept_percent_concrete": 58.73015873015873,
                "kept_percent_lambda": 41.26984126984127,
                "num_examples": 3,
                "num_explored_concrete": 260,
                "num_explored_lambda": 328,
                "num_explored_none": 220,
                "num_inputs": 2,
                "num_kept_concrete": 148,
                "num_kept_lambda": 104,
                "num_values_explored": 808,
                "num_values_kept": 252,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0269644800573587,
            "num_unique_values": 163,
            "solution": "Access(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 15.217391304347826,
                "explored_percent_lambda": 66.03260869565217,
                "explored_percent_none": 18.75,
                "kept_percent_concrete": 26.623376623376622,
                "kept_percent_lambda": 73.37662337662337,
                "num_examples": 5,
                "num_explored_concrete": 56,
                "num_explored_lambda": 243,
                "num_explored_none": 69,
                "num_inputs": 1,
                "num_kept_concrete": 41,
                "num_kept_lambda": 113,
                "num_values_explored": 368,
                "num_values_kept": 154,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.946606382727623,
            "num_unique_values": 155,
            "solution": "Drop(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 11.11111111111111,
                "explored_percent_lambda": 68.94586894586895,
                "explored_percent_none": 19.943019943019944,
                "kept_percent_concrete": 22.602739726027398,
                "kept_percent_lambda": 77.3972602739726,
                "num_examples": 5,
                "num_explored_concrete": 39,
                "num_explored_lambda": 242,
                "num_explored_none": 70,
                "num_inputs": 1,
                "num_kept_concrete": 33,
                "num_kept_lambda": 113,
                "num_values_explored": 351,
                "num_values_kept": 146,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8293277509510517,
            "num_unique_values": 143,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 35.949367088607595,
                "explored_percent_lambda": 31.139240506329113,
                "explored_percent_none": 32.91139240506329,
                "kept_percent_concrete": 58.64661654135338,
                "kept_percent_lambda": 41.35338345864662,
                "num_examples": 4,
                "num_explored_concrete": 142,
                "num_explored_lambda": 123,
                "num_explored_none": 130,
                "num_inputs": 2,
                "num_kept_concrete": 78,
                "num_kept_lambda": 55,
                "num_values_explored": 395,
                "num_values_kept": 133,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9757408145815134,
            "num_unique_values": 153,
            "solution": "Drop(1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 9.91501416430595,
                "explored_percent_lambda": 71.95467422096317,
                "explored_percent_none": 18.13031161473088,
                "kept_percent_concrete": 16.783216783216783,
                "kept_percent_lambda": 83.21678321678321,
                "num_examples": 4,
                "num_explored_concrete": 35,
                "num_explored_lambda": 254,
                "num_explored_none": 64,
                "num_inputs": 2,
                "num_kept_concrete": 24,
                "num_kept_lambda": 119,
                "num_values_explored": 353,
                "num_values_kept": 143,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9694162048399448,
            "num_unique_values": 151,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 9.859154929577464,
                "explored_percent_lambda": 73.80281690140845,
                "explored_percent_none": 16.338028169014084,
                "kept_percent_concrete": 14.788732394366198,
                "kept_percent_lambda": 85.21126760563381,
                "num_examples": 2,
                "num_explored_concrete": 35,
                "num_explored_lambda": 262,
                "num_explored_none": 58,
                "num_inputs": 1,
                "num_kept_concrete": 21,
                "num_kept_lambda": 121,
                "num_values_explored": 355,
                "num_values_kept": 142,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.010530799627304,
            "num_unique_values": 152,
            "solution": "Drop(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 8.426966292134832,
                "explored_percent_lambda": 70.78651685393258,
                "explored_percent_none": 20.786516853932586,
                "kept_percent_concrete": 12.587412587412587,
                "kept_percent_lambda": 87.41258741258741,
                "num_examples": 2,
                "num_explored_concrete": 30,
                "num_explored_lambda": 252,
                "num_explored_none": 74,
                "num_inputs": 1,
                "num_kept_concrete": 18,
                "num_kept_lambda": 125,
                "num_values_explored": 356,
                "num_values_kept": 143,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7661456055939198,
            "num_unique_values": 259,
            "solution": "Scanl1(lambda u1, u2: 3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 20.972644376899694,
                "explored_percent_lambda": 49.24012158054711,
                "explored_percent_none": 29.78723404255319,
                "kept_percent_concrete": 29.2,
                "kept_percent_lambda": 70.8,
                "num_examples": 4,
                "num_explored_concrete": 138,
                "num_explored_lambda": 324,
                "num_explored_none": 196,
                "num_inputs": 1,
                "num_kept_concrete": 73,
                "num_kept_lambda": 177,
                "num_values_explored": 658,
                "num_values_kept": 250,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8871311862021685,
            "num_unique_values": 163,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 28.860759493670887,
                "explored_percent_lambda": 43.79746835443038,
                "explored_percent_none": 27.341772151898734,
                "kept_percent_concrete": 45.751633986928105,
                "kept_percent_lambda": 54.248366013071895,
                "num_examples": 5,
                "num_explored_concrete": 114,
                "num_explored_lambda": 173,
                "num_explored_none": 108,
                "num_inputs": 2,
                "num_kept_concrete": 70,
                "num_kept_lambda": 83,
                "num_values_explored": 395,
                "num_values_kept": 153,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.7879930175840855,
            "num_unique_values": 367,
            "solution": "Head(Map(lambda u1: (lambda v1: IntDivide(v1, x1))(u1), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 56.75316034597472,
                "explored_percent_lambda": 13.972055888223553,
                "explored_percent_none": 29.27478376580173,
                "kept_percent_concrete": 75.35014005602241,
                "kept_percent_lambda": 24.649859943977592,
                "num_examples": 4,
                "num_explored_concrete": 853,
                "num_explored_lambda": 210,
                "num_explored_none": 440,
                "num_inputs": 2,
                "num_kept_concrete": 269,
                "num_kept_lambda": 88,
                "num_values_explored": 1503,
                "num_values_kept": 357,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1871065478771925,
            "num_unique_values": 70,
            "solution": "Max(x1, Square(4))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 97.82608695652173,
                "explored_percent_lambda": 2.1739130434782608,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 96.72131147540983,
                "kept_percent_lambda": 3.278688524590164,
                "num_examples": 2,
                "num_explored_concrete": 90,
                "num_explored_lambda": 2,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 2,
                "num_values_explored": 92,
                "num_values_kept": 61,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.873859480023384,
            "num_unique_values": 336,
            "solution": "Max(Access(2, x1), Multiply(2, Min(4, Head(x1))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 34.02328589909444,
                "explored_percent_lambda": 45.92496765847348,
                "explored_percent_none": 20.051746442432083,
                "kept_percent_concrete": 59.63302752293578,
                "kept_percent_lambda": 40.36697247706422,
                "num_examples": 4,
                "num_explored_concrete": 263,
                "num_explored_lambda": 355,
                "num_explored_none": 155,
                "num_inputs": 1,
                "num_kept_concrete": 195,
                "num_kept_lambda": 132,
                "num_values_explored": 773,
                "num_values_kept": 327,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.3565302323549986,
            "num_unique_values": 275,
            "solution": "Multiply(4, Count(lambda u1: (lambda v1: Less(v1, 1))(u1), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 39.55223880597015,
                "explored_percent_lambda": 38.059701492537314,
                "explored_percent_none": 22.388059701492537,
                "kept_percent_concrete": 48.1203007518797,
                "kept_percent_lambda": 51.8796992481203,
                "num_examples": 2,
                "num_explored_concrete": 371,
                "num_explored_lambda": 357,
                "num_explored_none": 210,
                "num_inputs": 1,
                "num_kept_concrete": 128,
                "num_kept_lambda": 138,
                "num_values_explored": 938,
                "num_values_kept": 266,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.397722952067852,
            "num_unique_values": 267,
            "solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 36.82170542635659,
                "explored_percent_lambda": 45.93023255813954,
                "explored_percent_none": 17.248062015503876,
                "kept_percent_concrete": 52.52918287937743,
                "kept_percent_lambda": 47.47081712062257,
                "num_examples": 5,
                "num_explored_concrete": 190,
                "num_explored_lambda": 237,
                "num_explored_none": 89,
                "num_inputs": 2,
                "num_kept_concrete": 135,
                "num_kept_lambda": 122,
                "num_values_explored": 516,
                "num_values_kept": 257,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.829471794888377,
            "num_unique_values": 470,
            "solution": "Sum(Reverse(Map(lambda u1: (lambda v1: Subtract(1, v1))(u1), x1)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 36.25429553264605,
                "explored_percent_lambda": 30.06872852233677,
                "explored_percent_none": 33.67697594501718,
                "kept_percent_concrete": 45.98698481561822,
                "kept_percent_lambda": 54.01301518438178,
                "num_examples": 3,
                "num_explored_concrete": 633,
                "num_explored_lambda": 525,
                "num_explored_none": 588,
                "num_inputs": 1,
                "num_kept_concrete": 212,
                "num_kept_lambda": 249,
                "num_values_explored": 1746,
                "num_values_kept": 461,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8166732769459486,
            "num_unique_values": 260,
            "solution": "Scanl1(lambda u1, u2: Sum(Take(3, x2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 28.075253256150507,
                "explored_percent_lambda": 49.204052098408106,
                "explored_percent_none": 22.72069464544139,
                "kept_percent_concrete": 48.0,
                "kept_percent_lambda": 52.0,
                "num_examples": 2,
                "num_explored_concrete": 194,
                "num_explored_lambda": 340,
                "num_explored_none": 157,
                "num_inputs": 2,
                "num_kept_concrete": 120,
                "num_kept_lambda": 130,
                "num_values_explored": 691,
                "num_values_kept": 250,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.775044297799468,
            "num_unique_values": 245,
            "solution": "ZipWith(lambda u1, u2: (lambda v1, v2: Min(v1, v2))(u1, u2), Sort(x1), Drop(1, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 24.73604826546003,
                "explored_percent_lambda": 44.34389140271493,
                "explored_percent_none": 30.920060331825038,
                "kept_percent_concrete": 26.694915254237287,
                "kept_percent_lambda": 73.30508474576271,
                "num_examples": 3,
                "num_explored_concrete": 164,
                "num_explored_lambda": 294,
                "num_explored_none": 205,
                "num_inputs": 1,
                "num_kept_concrete": 63,
                "num_kept_lambda": 173,
                "num_values_explored": 663,
                "num_values_kept": 236,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.3363388311117887,
            "num_unique_values": 198,
            "solution": "Sum(Drop(x1, Take(4, x2)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 23.15270935960591,
                "explored_percent_lambda": 39.73727422003284,
                "explored_percent_none": 37.11001642036125,
                "kept_percent_concrete": 51.06382978723404,
                "kept_percent_lambda": 48.93617021276596,
                "num_examples": 3,
                "num_explored_concrete": 141,
                "num_explored_lambda": 242,
                "num_explored_none": 226,
                "num_inputs": 2,
                "num_kept_concrete": 96,
                "num_kept_lambda": 92,
                "num_values_explored": 609,
                "num_values_kept": 188,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9029927123337984,
            "num_unique_values": 204,
            "solution": "Map(lambda u1: Head(x2), Drop(2, x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 20.763723150357997,
                "explored_percent_lambda": 54.653937947494036,
                "explored_percent_none": 24.58233890214797,
                "kept_percent_concrete": 26.804123711340207,
                "kept_percent_lambda": 73.19587628865979,
                "num_examples": 2,
                "num_explored_concrete": 174,
                "num_explored_lambda": 458,
                "num_explored_none": 206,
                "num_inputs": 2,
                "num_kept_concrete": 52,
                "num_kept_lambda": 142,
                "num_values_explored": 838,
                "num_values_kept": 194,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.168094176799059,
            "num_unique_values": 251,
            "solution": "Scanl1(lambda u1, u2: Head(x2), ZipWith(lambda u1, u2: Last(x2), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 29.51388888888889,
                "explored_percent_lambda": 39.81481481481482,
                "explored_percent_none": 30.671296296296298,
                "kept_percent_concrete": 41.49377593360996,
                "kept_percent_lambda": 58.50622406639004,
                "num_examples": 3,
                "num_explored_concrete": 255,
                "num_explored_lambda": 344,
                "num_explored_none": 265,
                "num_inputs": 2,
                "num_kept_concrete": 100,
                "num_kept_lambda": 141,
                "num_values_explored": 864,
                "num_values_kept": 241,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.165002526715398,
            "num_unique_values": 610,
            "solution": "Min(Add(1, 4), Add(Minimum(x1), Count(lambda u1: (lambda v1: IsEven(v1))(u1), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 56.43212508884151,
                "explored_percent_lambda": 26.226012793176974,
                "explored_percent_none": 17.34186211798152,
                "kept_percent_concrete": 71.0,
                "kept_percent_lambda": 29.0,
                "num_examples": 4,
                "num_explored_concrete": 794,
                "num_explored_lambda": 369,
                "num_explored_none": 244,
                "num_inputs": 2,
                "num_kept_concrete": 426,
                "num_kept_lambda": 174,
                "num_values_explored": 1407,
                "num_values_kept": 600,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.781970033422112,
            "num_unique_values": 1378,
            "solution": "Access(Access(4, x1), Map(lambda u1: (lambda v1: IntDivide(Multiply(3, 4), v1))(u1), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 81.90086402910414,
                "explored_percent_lambda": 10.989843868425043,
                "explored_percent_none": 7.10929210247082,
                "kept_percent_concrete": 76.69831994156318,
                "kept_percent_lambda": 23.301680058436816,
                "num_examples": 5,
                "num_explored_concrete": 5403,
                "num_explored_lambda": 725,
                "num_explored_none": 469,
                "num_inputs": 1,
                "num_kept_concrete": 1050,
                "num_kept_lambda": 319,
                "num_values_explored": 6597,
                "num_values_kept": 1369,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.4914102610200644,
            "num_unique_values": 546,
            "solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 58.32521908471276,
                "explored_percent_lambda": 33.49561830574489,
                "explored_percent_none": 8.179162609542356,
                "kept_percent_concrete": 66.7910447761194,
                "kept_percent_lambda": 33.208955223880594,
                "num_examples": 5,
                "num_explored_concrete": 599,
                "num_explored_lambda": 344,
                "num_explored_none": 84,
                "num_inputs": 2,
                "num_kept_concrete": 358,
                "num_kept_lambda": 178,
                "num_values_explored": 1027,
                "num_values_kept": 536,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.998510081321001,
            "num_unique_values": 249,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Min(2, (lambda v1: IntDivide(v1, x1))(v1)))(u1), x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 29.23832923832924,
                "explored_percent_lambda": 45.45454545454545,
                "explored_percent_none": 25.307125307125308,
                "kept_percent_concrete": 49.37238493723849,
                "kept_percent_lambda": 50.62761506276151,
                "num_examples": 2,
                "num_explored_concrete": 238,
                "num_explored_lambda": 370,
                "num_explored_none": 206,
                "num_inputs": 2,
                "num_kept_concrete": 118,
                "num_kept_lambda": 121,
                "num_values_explored": 814,
                "num_values_kept": 239,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0751242451369762,
            "num_unique_values": 154,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 35.84521384928717,
                "explored_percent_lambda": 35.64154786150713,
                "explored_percent_none": 28.513238289205702,
                "kept_percent_concrete": 48.95104895104895,
                "kept_percent_lambda": 51.04895104895105,
                "num_examples": 2,
                "num_explored_concrete": 176,
                "num_explored_lambda": 175,
                "num_explored_none": 140,
                "num_inputs": 3,
                "num_kept_concrete": 70,
                "num_kept_lambda": 73,
                "num_values_explored": 491,
                "num_values_kept": 143,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 60.23320424556732,
            "num_unique_values": 4405,
            "solution": "Subtract(Add(Last(x2), Add(2, Subtract(-1, Last(x1)))), 1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 87.33941537888661,
                "explored_percent_lambda": 4.524297151368461,
                "explored_percent_none": 8.136287469744927,
                "kept_percent_concrete": 92.37770193401593,
                "kept_percent_lambda": 7.622298065984073,
                "num_examples": 5,
                "num_explored_concrete": 28146,
                "num_explored_lambda": 1458,
                "num_explored_none": 2622,
                "num_inputs": 2,
                "num_kept_concrete": 4060,
                "num_kept_lambda": 335,
                "num_values_explored": 32226,
                "num_values_kept": 4395,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 10.652849547564983,
            "num_unique_values": 315,
            "solution": "Subtract(Add(Subtract(2, Add(4, IntDivide(x1, 4))), Square(3)), 3)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 27.314888853350393,
                "explored_percent_lambda": 9.915240684471454,
                "explored_percent_none": 62.769870462178154,
                "kept_percent_concrete": 91.83006535947712,
                "kept_percent_lambda": 8.169934640522875,
                "num_examples": 5,
                "num_explored_concrete": 1708,
                "num_explored_lambda": 620,
                "num_explored_none": 3925,
                "num_inputs": 1,
                "num_kept_concrete": 281,
                "num_kept_lambda": 25,
                "num_values_explored": 6253,
                "num_values_kept": 306,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5682880487293005,
            "num_unique_values": 224,
            "solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 19.2846034214619,
                "explored_percent_lambda": 59.56454121306376,
                "explored_percent_none": 21.15085536547434,
                "kept_percent_concrete": 36.74418604651163,
                "kept_percent_lambda": 63.25581395348837,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 383,
                "num_explored_none": 136,
                "num_inputs": 1,
                "num_kept_concrete": 79,
                "num_kept_lambda": 136,
                "num_values_explored": 643,
                "num_values_kept": 215,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 469.0774364247918,
            "num_unique_values": 15890,
            "solution": "Add(Min(Last(x2), 0), Subtract(Max(0, Last(x2)), Square(x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 90.66609391360377,
                "explored_percent_lambda": 3.433296641340242,
                "explored_percent_none": 5.900609445055978,
                "kept_percent_concrete": 93.93576826196474,
                "kept_percent_lambda": 6.064231738035264,
                "num_examples": 5,
                "num_explored_concrete": 168852,
                "num_explored_lambda": 6394,
                "num_explored_none": 10989,
                "num_inputs": 2,
                "num_kept_concrete": 14917,
                "num_kept_lambda": 963,
                "num_values_explored": 186235,
                "num_values_kept": 15880,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.3670574426651,
            "num_unique_values": 537,
            "solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), Map(lambda u1: Head(x2), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 54.65793304221252,
                "explored_percent_lambda": 32.96943231441048,
                "explored_percent_none": 12.372634643377001,
                "kept_percent_concrete": 64.13662239089184,
                "kept_percent_lambda": 35.86337760910816,
                "num_examples": 3,
                "num_explored_concrete": 751,
                "num_explored_lambda": 453,
                "num_explored_none": 170,
                "num_inputs": 2,
                "num_kept_concrete": 338,
                "num_kept_lambda": 189,
                "num_values_explored": 1374,
                "num_values_kept": 527,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.589769884943962,
            "num_unique_values": 151,
            "solution": "Multiply(4, Multiply(4, Add(x1, 3)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 20.95959595959596,
                "explored_percent_lambda": 13.232323232323232,
                "explored_percent_none": 65.8080808080808,
                "kept_percent_concrete": 78.87323943661971,
                "kept_percent_lambda": 21.12676056338028,
                "num_examples": 2,
                "num_explored_concrete": 415,
                "num_explored_lambda": 262,
                "num_explored_none": 1303,
                "num_inputs": 1,
                "num_kept_concrete": 112,
                "num_kept_lambda": 30,
                "num_values_explored": 1980,
                "num_values_kept": 142,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8725842647254467,
            "num_unique_values": 252,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.07601572739188,
                "explored_percent_lambda": 44.95412844036697,
                "explored_percent_none": 20.969855832241155,
                "kept_percent_concrete": 52.892561983471076,
                "kept_percent_lambda": 47.107438016528924,
                "num_examples": 5,
                "num_explored_concrete": 260,
                "num_explored_lambda": 343,
                "num_explored_none": 160,
                "num_inputs": 2,
                "num_kept_concrete": 128,
                "num_kept_lambda": 114,
                "num_values_explored": 763,
                "num_values_kept": 242,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.140302760526538,
            "num_unique_values": 330,
            "solution": "Max(Square(Last(x2)), Square(Head(x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 37.37980769230769,
                "explored_percent_lambda": 43.50961538461539,
                "explored_percent_none": 19.110576923076923,
                "kept_percent_concrete": 55.0,
                "kept_percent_lambda": 45.0,
                "num_examples": 3,
                "num_explored_concrete": 311,
                "num_explored_lambda": 362,
                "num_explored_none": 159,
                "num_inputs": 2,
                "num_kept_concrete": 176,
                "num_kept_lambda": 144,
                "num_values_explored": 832,
                "num_values_kept": 320,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.5159787982702255,
            "num_unique_values": 537,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Min((lambda v1: Square(v1))(v1), (lambda v1: IntDivide(v1, 3))(v1)))(u1), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 39.55808980755524,
                "explored_percent_lambda": 46.97077690662865,
                "explored_percent_none": 13.471133285816109,
                "kept_percent_concrete": 34.65909090909091,
                "kept_percent_lambda": 65.3409090909091,
                "num_examples": 2,
                "num_explored_concrete": 555,
                "num_explored_lambda": 659,
                "num_explored_none": 189,
                "num_inputs": 1,
                "num_kept_concrete": 183,
                "num_kept_lambda": 345,
                "num_values_explored": 1403,
                "num_values_kept": 528,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.73175352625549,
            "num_unique_values": 2846,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Add(-1, (lambda v1: Multiply(-1, (lambda v1: Square(v1))(v1)))(v1)))(u2), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 65.52724077328647,
                "explored_percent_lambda": 27.81195079086116,
                "explored_percent_none": 6.660808435852372,
                "kept_percent_concrete": 43.60239689813183,
                "kept_percent_lambda": 56.39760310186817,
                "num_examples": 4,
                "num_explored_concrete": 14914,
                "num_explored_lambda": 6330,
                "num_explored_none": 1516,
                "num_inputs": 1,
                "num_kept_concrete": 1237,
                "num_kept_lambda": 1600,
                "num_values_explored": 22760,
                "num_values_kept": 2837,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.39010158367455,
            "num_unique_values": 527,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Max(v1, Min(x2, Sum(x1))))(u2), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 53.260123541523676,
                "explored_percent_lambda": 28.757721345229925,
                "explored_percent_none": 17.982155113246396,
                "kept_percent_concrete": 62.86266924564797,
                "kept_percent_lambda": 37.13733075435203,
                "num_examples": 5,
                "num_explored_concrete": 776,
                "num_explored_lambda": 419,
                "num_explored_none": 262,
                "num_inputs": 2,
                "num_kept_concrete": 325,
                "num_kept_lambda": 192,
                "num_values_explored": 1457,
                "num_values_kept": 517,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.55626623518765,
            "num_unique_values": 1150,
            "solution": "Subtract(x3, If(IsEven(x1), Sum(x2), Add(3, Head(x2))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 80.20643039824625,
                "explored_percent_lambda": 6.23858238947753,
                "explored_percent_none": 13.554987212276215,
                "kept_percent_concrete": 82.44073748902547,
                "kept_percent_lambda": 17.559262510974538,
                "num_examples": 2,
                "num_explored_concrete": 8781,
                "num_explored_lambda": 683,
                "num_explored_none": 1484,
                "num_inputs": 3,
                "num_kept_concrete": 939,
                "num_kept_lambda": 200,
                "num_values_explored": 10948,
                "num_values_kept": 1139,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 12.685815231874585,
            "num_unique_values": 1318,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 4))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 56.09014487569308,
                "explored_percent_lambda": 32.140940797710606,
                "explored_percent_none": 11.768914326596315,
                "kept_percent_concrete": 36.66921313980138,
                "kept_percent_lambda": 63.33078686019862,
                "num_examples": 2,
                "num_explored_concrete": 3136,
                "num_explored_lambda": 1797,
                "num_explored_none": 658,
                "num_inputs": 1,
                "num_kept_concrete": 480,
                "num_kept_lambda": 829,
                "num_values_explored": 5591,
                "num_values_kept": 1309,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6640999279916286,
            "num_unique_values": 269,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 28.870967741935484,
                "explored_percent_lambda": 43.87096774193548,
                "explored_percent_none": 27.258064516129032,
                "kept_percent_concrete": 38.46153846153846,
                "kept_percent_lambda": 61.53846153846154,
                "num_examples": 2,
                "num_explored_concrete": 179,
                "num_explored_lambda": 272,
                "num_explored_none": 169,
                "num_inputs": 1,
                "num_kept_concrete": 100,
                "num_kept_lambda": 160,
                "num_values_explored": 620,
                "num_values_kept": 260,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.5407368279993534,
            "num_unique_values": 123,
            "solution": "Add(Subtract(x1, x2), Square(IntDivide(4, x2)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 22.580645161290324,
                "explored_percent_lambda": 13.05210918114144,
                "explored_percent_none": 64.36724565756823,
                "kept_percent_concrete": 78.76106194690266,
                "kept_percent_lambda": 21.238938053097346,
                "num_examples": 2,
                "num_explored_concrete": 455,
                "num_explored_lambda": 263,
                "num_explored_none": 1297,
                "num_inputs": 2,
                "num_kept_concrete": 89,
                "num_kept_lambda": 24,
                "num_values_explored": 2015,
                "num_values_kept": 113,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.39672714099288,
            "num_unique_values": 371,
            "solution": "Map(lambda u1: Add(Max(4, IntDivide(x2, 4)), -1), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 42.754120879120876,
                "explored_percent_lambda": 14.457417582417582,
                "explored_percent_none": 42.78846153846154,
                "kept_percent_concrete": 63.43490304709141,
                "kept_percent_lambda": 36.56509695290859,
                "num_examples": 4,
                "num_explored_concrete": 1245,
                "num_explored_lambda": 421,
                "num_explored_none": 1246,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 132,
                "num_values_explored": 2912,
                "num_values_kept": 361,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 21.323784608393908,
            "num_unique_values": 1876,
            "solution": "Scanl1(lambda u1, u2: Add(-1, Access(1, x1)), Map(lambda u1: Add(Head(x1), -1), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 79.69273023774784,
                "explored_percent_lambda": 14.445112007553,
                "explored_percent_none": 5.862157754699168,
                "kept_percent_concrete": 71.11468381564845,
                "kept_percent_lambda": 28.885316184351556,
                "num_examples": 3,
                "num_explored_concrete": 9285,
                "num_explored_lambda": 1683,
                "num_explored_none": 683,
                "num_inputs": 2,
                "num_kept_concrete": 1327,
                "num_kept_lambda": 539,
                "num_values_explored": 11651,
                "num_values_kept": 1866,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.343224048614502,
            "num_unique_values": 523,
            "solution": "Subtract(Square(Add(2, 4)), If(IsOdd(Head(x1)), 2, 4))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 52.05214872042492,
                "explored_percent_lambda": 22.93577981651376,
                "explored_percent_none": 25.01207146306132,
                "kept_percent_concrete": 64.00778210116732,
                "kept_percent_lambda": 35.992217898832685,
                "num_examples": 4,
                "num_explored_concrete": 1078,
                "num_explored_lambda": 475,
                "num_explored_none": 518,
                "num_inputs": 1,
                "num_kept_concrete": 329,
                "num_kept_lambda": 185,
                "num_values_explored": 2071,
                "num_values_kept": 514,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7888716273009777,
            "num_unique_values": 132,
            "solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 94.41964285714286,
                "explored_percent_lambda": 5.357142857142857,
                "explored_percent_none": 0.22321428571428573,
                "kept_percent_concrete": 80.48780487804878,
                "kept_percent_lambda": 19.51219512195122,
                "num_examples": 5,
                "num_explored_concrete": 423,
                "num_explored_lambda": 24,
                "num_explored_none": 1,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 24,
                "num_values_explored": 448,
                "num_values_kept": 123,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.823735810816288,
            "num_unique_values": 236,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x3, Take(-1, x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 32.05619412515964,
                "explored_percent_lambda": 30.140485312899106,
                "explored_percent_none": 37.80332056194125,
                "kept_percent_concrete": 49.77777777777778,
                "kept_percent_lambda": 50.22222222222222,
                "num_examples": 2,
                "num_explored_concrete": 251,
                "num_explored_lambda": 236,
                "num_explored_none": 296,
                "num_inputs": 3,
                "num_kept_concrete": 112,
                "num_kept_lambda": 113,
                "num_values_explored": 783,
                "num_values_kept": 225,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.1141791343688965,
            "num_unique_values": 213,
            "solution": "Add(2, Max(x1, Add(x2, Add(x1, 1))))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 26.10978520286396,
                "explored_percent_lambda": 11.408114558472553,
                "explored_percent_none": 62.482100238663485,
                "kept_percent_concrete": 81.2807881773399,
                "kept_percent_lambda": 18.7192118226601,
                "num_examples": 2,
                "num_explored_concrete": 1094,
                "num_explored_lambda": 478,
                "num_explored_none": 2618,
                "num_inputs": 2,
                "num_kept_concrete": 165,
                "num_kept_lambda": 38,
                "num_values_explored": 4190,
                "num_values_kept": 203,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.067724986001849,
            "num_unique_values": 469,
            "solution": "Reverse(Drop(Sum(x2), Map(lambda u1: (lambda v1: Add(x1, v1))(u1), Reverse(x3))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 51.26719768283852,
                "explored_percent_lambda": 29.688631426502536,
                "explored_percent_none": 19.044170890658943,
                "kept_percent_concrete": 56.11353711790393,
                "kept_percent_lambda": 43.88646288209607,
                "num_examples": 4,
                "num_explored_concrete": 708,
                "num_explored_lambda": 410,
                "num_explored_none": 263,
                "num_inputs": 3,
                "num_kept_concrete": 257,
                "num_kept_lambda": 201,
                "num_values_explored": 1381,
                "num_values_kept": 458,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.4763117879629135,
            "num_unique_values": 505,
            "solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 57.608695652173914,
                "explored_percent_lambda": 29.80072463768116,
                "explored_percent_none": 12.590579710144928,
                "kept_percent_concrete": 65.38461538461539,
                "kept_percent_lambda": 34.61538461538461,
                "num_examples": 4,
                "num_explored_concrete": 636,
                "num_explored_lambda": 329,
                "num_explored_none": 139,
                "num_inputs": 3,
                "num_kept_concrete": 323,
                "num_kept_lambda": 171,
                "num_values_explored": 1104,
                "num_values_kept": 494,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 56.757105151191354,
            "num_unique_values": 1328,
            "solution": "Subtract(Max(x1, Min(Add(x1, 4), Square(Subtract(x1, x2)))), -1)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 31.78341082945853,
                "explored_percent_lambda": 7.44562771861407,
                "explored_percent_none": 60.770961451927406,
                "kept_percent_concrete": 93.55083459787556,
                "kept_percent_lambda": 6.449165402124431,
                "num_examples": 4,
                "num_explored_concrete": 10595,
                "num_explored_lambda": 2482,
                "num_explored_none": 20258,
                "num_inputs": 2,
                "num_kept_concrete": 1233,
                "num_kept_lambda": 85,
                "num_values_explored": 33335,
                "num_values_kept": 1318,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 218.0723625086248,
            "num_unique_values": 6001,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(Add(3, Head(x1)), v1))(u1), Take(3, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 79.49227462589724,
                "explored_percent_lambda": 18.215458858834502,
                "explored_percent_none": 2.292266515268259,
                "kept_percent_concrete": 51.00133511348464,
                "kept_percent_lambda": 48.99866488651536,
                "num_examples": 5,
                "num_explored_concrete": 78408,
                "num_explored_lambda": 17967,
                "num_explored_none": 2261,
                "num_inputs": 1,
                "num_kept_concrete": 3056,
                "num_kept_lambda": 2936,
                "num_values_explored": 98636,
                "num_values_kept": 5992,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7973296977579594,
            "num_unique_values": 262,
            "solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 36.97996918335902,
                "explored_percent_lambda": 35.43913713405239,
                "explored_percent_none": 27.5808936825886,
                "kept_percent_concrete": 61.354581673306775,
                "kept_percent_lambda": 38.645418326693225,
                "num_examples": 5,
                "num_explored_concrete": 240,
                "num_explored_lambda": 230,
                "num_explored_none": 179,
                "num_inputs": 3,
                "num_kept_concrete": 154,
                "num_kept_lambda": 97,
                "num_values_explored": 649,
                "num_values_kept": 251,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9171802308410406,
            "num_unique_values": 240,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: IntDivide(v1, Add(3, 4)))(u2), x1, x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 23.58974358974359,
                "explored_percent_lambda": 50.12820512820513,
                "explored_percent_none": 26.28205128205128,
                "kept_percent_concrete": 40.25974025974026,
                "kept_percent_lambda": 59.74025974025974,
                "num_examples": 3,
                "num_explored_concrete": 184,
                "num_explored_lambda": 391,
                "num_explored_none": 205,
                "num_inputs": 1,
                "num_kept_concrete": 93,
                "num_kept_lambda": 138,
                "num_values_explored": 780,
                "num_values_kept": 231,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9737823400646448,
            "num_unique_values": 249,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 29.223181257706536,
                "explored_percent_lambda": 43.89642416769421,
                "explored_percent_none": 26.88039457459926,
                "kept_percent_concrete": 48.53556485355649,
                "kept_percent_lambda": 51.46443514644351,
                "num_examples": 4,
                "num_explored_concrete": 237,
                "num_explored_lambda": 356,
                "num_explored_none": 218,
                "num_inputs": 2,
                "num_kept_concrete": 116,
                "num_kept_lambda": 123,
                "num_values_explored": 811,
                "num_values_kept": 239,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0124614071101,
            "num_unique_values": 16061,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 79.11585696970751,
                "explored_percent_lambda": 14.225267063152453,
                "explored_percent_none": 6.6588759671400455,
                "kept_percent_concrete": 73.19626168224299,
                "kept_percent_lambda": 26.80373831775701,
                "num_examples": 5,
                "num_explored_concrete": 182116,
                "num_explored_lambda": 32745,
                "num_explored_none": 15328,
                "num_inputs": 3,
                "num_kept_concrete": 11748,
                "num_kept_lambda": 4302,
                "num_values_explored": 230189,
                "num_values_kept": 16050,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.10815486125648,
            "num_unique_values": 232,
            "solution": "ZipWith(lambda u1, u2: Sum(x1), Drop(3, x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 25.970548862115127,
                "explored_percent_lambda": 53.14591700133869,
                "explored_percent_none": 20.883534136546185,
                "kept_percent_concrete": 40.54054054054054,
                "kept_percent_lambda": 59.45945945945946,
                "num_examples": 5,
                "num_explored_concrete": 194,
                "num_explored_lambda": 397,
                "num_explored_none": 156,
                "num_inputs": 2,
                "num_kept_concrete": 90,
                "num_kept_lambda": 132,
                "num_values_explored": 747,
                "num_values_kept": 222,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.57112574018538,
            "num_unique_values": 614,
            "solution": "Min(Subtract(x1, 3), Add(1, Subtract(Add(x1, 1), Head(x2))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 48.951760635049865,
                "explored_percent_lambda": 12.88418481579483,
                "explored_percent_none": 38.1640545491553,
                "kept_percent_concrete": 69.5364238410596,
                "kept_percent_lambda": 30.4635761589404,
                "num_examples": 5,
                "num_explored_concrete": 2405,
                "num_explored_lambda": 633,
                "num_explored_none": 1875,
                "num_inputs": 2,
                "num_kept_concrete": 420,
                "num_kept_lambda": 184,
                "num_values_explored": 4913,
                "num_values_kept": 604,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 58.78270920179784,
            "num_unique_values": 2192,
            "solution": "Sort(Scanl1(lambda u1, u2: IntDivide(Add(4, 3), IntDivide(x1, 3)), Map(lambda u1: 1, x2)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 69.86305934095225,
                "explored_percent_lambda": 16.059707460100622,
                "explored_percent_none": 14.077233198947123,
                "kept_percent_concrete": 58.43263061411549,
                "kept_percent_lambda": 41.56736938588451,
                "num_examples": 2,
                "num_explored_concrete": 20968,
                "num_explored_lambda": 4820,
                "num_explored_none": 4225,
                "num_inputs": 2,
                "num_kept_concrete": 1275,
                "num_kept_lambda": 907,
                "num_values_explored": 30013,
                "num_values_kept": 2182,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 15.697883613407612,
            "num_unique_values": 405,
            "solution": "Add(4, Subtract(Subtract(Add(x1, 3), Square(Square(3))), Square(4)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 30.957708659655403,
                "explored_percent_lambda": 11.479078093533229,
                "explored_percent_none": 57.563213246811365,
                "kept_percent_concrete": 82.82828282828282,
                "kept_percent_lambda": 17.171717171717173,
                "num_examples": 4,
                "num_explored_concrete": 2767,
                "num_explored_lambda": 1026,
                "num_explored_none": 5145,
                "num_inputs": 1,
                "num_kept_concrete": 328,
                "num_kept_lambda": 68,
                "num_values_explored": 8938,
                "num_values_kept": 396,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4149213805794716,
            "num_unique_values": 213,
            "solution": "Map(lambda u1: (lambda v1: If(IsOdd(x2), v1, 3))(u1), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 25.914634146341463,
                "explored_percent_lambda": 39.48170731707317,
                "explored_percent_none": 34.603658536585364,
                "kept_percent_concrete": 48.76847290640394,
                "kept_percent_lambda": 51.23152709359606,
                "num_examples": 4,
                "num_explored_concrete": 170,
                "num_explored_lambda": 259,
                "num_explored_none": 227,
                "num_inputs": 2,
                "num_kept_concrete": 99,
                "num_kept_lambda": 104,
                "num_values_explored": 656,
                "num_values_kept": 203,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 60.488367607817054,
            "num_unique_values": 3390,
            "solution": "Subtract(3, Square(Min(IntDivide(Head(x1), 4), Add(4, 4))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 87.38346799254195,
                "explored_percent_lambda": 6.259433543460889,
                "explored_percent_none": 6.357098463997159,
                "kept_percent_concrete": 87.28186926944691,
                "kept_percent_lambda": 12.71813073055309,
                "num_examples": 3,
                "num_explored_concrete": 29526,
                "num_explored_lambda": 2115,
                "num_explored_none": 2148,
                "num_inputs": 1,
                "num_kept_concrete": 2951,
                "num_kept_lambda": 430,
                "num_values_explored": 33789,
                "num_values_kept": 3381,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.815033918246627,
            "num_unique_values": 519,
            "solution": "Scanl1(lambda u1, u2: Subtract(Head(x2), 1), Map(lambda u1: Add(x1, -1), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 30.211480362537763,
                "explored_percent_lambda": 36.404833836858,
                "explored_percent_none": 33.383685800604226,
                "kept_percent_concrete": 38.89980353634578,
                "kept_percent_lambda": 61.10019646365422,
                "num_examples": 2,
                "num_explored_concrete": 600,
                "num_explored_lambda": 723,
                "num_explored_none": 663,
                "num_inputs": 2,
                "num_kept_concrete": 198,
                "num_kept_lambda": 311,
                "num_values_explored": 1986,
                "num_values_kept": 509,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0157598573714,
            "num_unique_values": 6759,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.29052092228864,
                "explored_percent_lambda": 8.41058923996584,
                "explored_percent_none": 50.29888983774552,
                "kept_percent_concrete": 94.71111111111111,
                "kept_percent_lambda": 5.288888888888889,
                "num_examples": 4,
                "num_explored_concrete": 120878,
                "num_explored_lambda": 24622,
                "num_explored_none": 147250,
                "num_inputs": 1,
                "num_kept_concrete": 6393,
                "num_kept_lambda": 357,
                "num_values_explored": 292750,
                "num_values_kept": 6750,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 27.250401724129915,
            "num_unique_values": 1897,
            "solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 83.92455327597618,
                "explored_percent_lambda": 10.939774983454665,
                "explored_percent_none": 5.135671740569159,
                "kept_percent_concrete": 76.52358240593534,
                "kept_percent_lambda": 23.476417594064653,
                "num_examples": 2,
                "num_explored_concrete": 12681,
                "num_explored_lambda": 1653,
                "num_explored_none": 776,
                "num_inputs": 2,
                "num_kept_concrete": 1444,
                "num_kept_lambda": 443,
                "num_values_explored": 15110,
                "num_values_kept": 1887,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.1197833307087,
            "num_unique_values": 15657,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 89.38081687935683,
                "explored_percent_lambda": 2.434650065650227,
                "explored_percent_none": 8.184533054992938,
                "kept_percent_concrete": 94.82328880935643,
                "kept_percent_lambda": 5.176711190643574,
                "num_examples": 5,
                "num_explored_concrete": 215793,
                "num_explored_lambda": 5878,
                "num_explored_none": 19760,
                "num_inputs": 2,
                "num_kept_concrete": 14837,
                "num_kept_lambda": 810,
                "num_values_explored": 241431,
                "num_values_kept": 15647,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.703983312472701,
            "num_unique_values": 542,
            "solution": "Scanl1(lambda u1, u2: Subtract(1, 4), Map(lambda u1: Subtract(Minimum(x1), 4), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 66.42140468227424,
                "explored_percent_lambda": 27.692307692307693,
                "explored_percent_none": 5.88628762541806,
                "kept_percent_concrete": 59.66228893058161,
                "kept_percent_lambda": 40.33771106941839,
                "num_examples": 3,
                "num_explored_concrete": 993,
                "num_explored_lambda": 414,
                "num_explored_none": 88,
                "num_inputs": 1,
                "num_kept_concrete": 318,
                "num_kept_lambda": 215,
                "num_values_explored": 1495,
                "num_values_kept": 533,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.7469006031751633,
            "num_unique_values": 782,
            "solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 68.3105981112277,
                "explored_percent_lambda": 23.24239244491081,
                "explored_percent_none": 8.44700944386149,
                "kept_percent_concrete": 73.70466321243524,
                "kept_percent_lambda": 26.295336787564768,
                "num_examples": 5,
                "num_explored_concrete": 1302,
                "num_explored_lambda": 443,
                "num_explored_none": 161,
                "num_inputs": 2,
                "num_kept_concrete": 569,
                "num_kept_lambda": 203,
                "num_values_explored": 1906,
                "num_values_kept": 772,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 93.92228286713362,
            "num_unique_values": 4544,
            "solution": "Map(lambda u1: (lambda v1: Min(Min(4, Maximum(x1)), (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 58.737340585146285,
                "explored_percent_lambda": 32.48077644411103,
                "explored_percent_none": 8.781882970742686,
                "kept_percent_concrete": 39.691289966923925,
                "kept_percent_lambda": 60.308710033076075,
                "num_examples": 2,
                "num_explored_concrete": 25055,
                "num_explored_lambda": 13855,
                "num_explored_none": 3746,
                "num_inputs": 1,
                "num_kept_concrete": 1800,
                "num_kept_lambda": 2735,
                "num_values_explored": 42656,
                "num_values_kept": 4535,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.74881274625659,
            "num_unique_values": 252,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u1), x2, x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 29.70027247956403,
                "explored_percent_lambda": 35.967302452316076,
                "explored_percent_none": 34.33242506811989,
                "kept_percent_concrete": 53.941908713692946,
                "kept_percent_lambda": 46.058091286307054,
                "num_examples": 4,
                "num_explored_concrete": 218,
                "num_explored_lambda": 264,
                "num_explored_none": 252,
                "num_inputs": 3,
                "num_kept_concrete": 130,
                "num_kept_lambda": 111,
                "num_values_explored": 734,
                "num_values_kept": 241,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.833906987681985,
            "num_unique_values": 883,
            "solution": "Map(lambda u1: Add(Multiply(3, IntDivide(Head(x1), 4)), 1), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 46.05804253319234,
                "explored_percent_lambda": 25.40242039713312,
                "explored_percent_none": 28.539537069674537,
                "kept_percent_concrete": 42.21967963386728,
                "kept_percent_lambda": 57.78032036613272,
                "num_examples": 2,
                "num_explored_concrete": 3920,
                "num_explored_lambda": 2162,
                "num_explored_none": 2429,
                "num_inputs": 1,
                "num_kept_concrete": 369,
                "num_kept_lambda": 505,
                "num_values_explored": 8511,
                "num_values_kept": 874,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0244473591447,
            "num_unique_values": 14939,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 90.61445965510148,
                "explored_percent_lambda": 2.257016546279513,
                "explored_percent_none": 7.128523798619009,
                "kept_percent_concrete": 95.5184887459807,
                "kept_percent_lambda": 4.481511254019293,
                "num_examples": 4,
                "num_explored_concrete": 233460,
                "num_explored_lambda": 5815,
                "num_explored_none": 18366,
                "num_inputs": 3,
                "num_kept_concrete": 14259,
                "num_kept_lambda": 669,
                "num_values_explored": 257641,
                "num_values_kept": 14928,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.2703369874507,
            "num_unique_values": 12264,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.8979502452698,
                "explored_percent_lambda": 34.74509460406447,
                "explored_percent_none": 5.3569551506657325,
                "kept_percent_concrete": 39.31456548347613,
                "kept_percent_lambda": 60.68543451652387,
                "num_examples": 3,
                "num_explored_concrete": 136759,
                "num_explored_lambda": 79330,
                "num_explored_none": 12231,
                "num_inputs": 1,
                "num_kept_concrete": 4818,
                "num_kept_lambda": 7437,
                "num_values_explored": 228320,
                "num_values_kept": 12255,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3443706929684,
            "num_unique_values": 7523,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.96652810747494,
                "explored_percent_lambda": 7.957996869460656,
                "explored_percent_none": 51.075475023064406,
                "kept_percent_concrete": 94.19749800372638,
                "kept_percent_lambda": 5.802501996273622,
                "num_examples": 4,
                "num_explored_concrete": 118560,
                "num_explored_lambda": 23031,
                "num_explored_none": 147816,
                "num_inputs": 1,
                "num_kept_concrete": 7078,
                "num_kept_lambda": 436,
                "num_values_explored": 289407,
                "num_values_kept": 7514,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 13.020177893340588,
            "num_unique_values": 1259,
            "solution": "Scanl1(lambda u1, u2: Square(Sum(Scanl1(lambda u1, u2: 4, x1))), Reverse(Scanl1(lambda u1, u2: Square(Head(x1)), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 70.3125,
                "explored_percent_lambda": 21.568627450980394,
                "explored_percent_none": 8.118872549019608,
                "kept_percent_concrete": 51.36,
                "kept_percent_lambda": 48.64,
                "num_examples": 2,
                "num_explored_concrete": 4590,
                "num_explored_lambda": 1408,
                "num_explored_none": 530,
                "num_inputs": 1,
                "num_kept_concrete": 642,
                "num_kept_lambda": 608,
                "num_values_explored": 6528,
                "num_values_kept": 1250,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 39.12714375182986,
            "num_unique_values": 2553,
            "solution": "Map(lambda u1: If(IsOdd(Sum(x1)), Square(3), Sum(Drop(1, x1))), x3)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 84.26413924443067,
                "explored_percent_lambda": 8.472474423136543,
                "explored_percent_none": 7.263386332432791,
                "kept_percent_concrete": 77.81274586939418,
                "kept_percent_lambda": 22.187254130605822,
                "num_examples": 5,
                "num_explored_concrete": 19026,
                "num_explored_lambda": 1913,
                "num_explored_none": 1640,
                "num_inputs": 3,
                "num_kept_concrete": 1978,
                "num_kept_lambda": 564,
                "num_values_explored": 22579,
                "num_values_kept": 2542,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.0281044244766235,
            "num_unique_values": 522,
            "solution": "Scanl1(lambda u1, u2: Last(x2), Take(3, Map(lambda u1: Add(-1, -1), x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 50.87071240105541,
                "explored_percent_lambda": 32.031662269129285,
                "explored_percent_none": 17.097625329815305,
                "kept_percent_concrete": 41.9921875,
                "kept_percent_lambda": 58.0078125,
                "num_examples": 2,
                "num_explored_concrete": 964,
                "num_explored_lambda": 607,
                "num_explored_none": 324,
                "num_inputs": 2,
                "num_kept_concrete": 215,
                "num_kept_lambda": 297,
                "num_values_explored": 1895,
                "num_values_kept": 512,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0323878414929,
            "num_unique_values": 7386,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.35214845820686,
                "explored_percent_lambda": 18.77441875989021,
                "explored_percent_none": 22.873432781902928,
                "kept_percent_concrete": 66.17866341331164,
                "kept_percent_lambda": 33.82133658668835,
                "num_examples": 3,
                "num_explored_concrete": 148606,
                "num_explored_lambda": 47813,
                "num_explored_none": 58252,
                "num_inputs": 1,
                "num_kept_concrete": 4882,
                "num_kept_lambda": 2495,
                "num_values_explored": 254671,
                "num_values_kept": 7377,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 220.90116357058287,
            "num_unique_values": 10568,
            "solution": "If(IsEven(x2), 2, Subtract(Sum(Reverse(Scanl1(lambda u1, u2: x2, x1))), Maximum(x3)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 92.49810925591949,
                "explored_percent_lambda": 2.671282021447825,
                "explored_percent_none": 4.830608722632691,
                "kept_percent_concrete": 93.55877616747182,
                "kept_percent_lambda": 6.4412238325281805,
                "num_examples": 5,
                "num_explored_concrete": 95397,
                "num_explored_lambda": 2755,
                "num_explored_none": 4982,
                "num_inputs": 3,
                "num_kept_concrete": 9877,
                "num_kept_lambda": 680,
                "num_values_explored": 103134,
                "num_values_kept": 10557,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 166.8261909969151,
            "num_unique_values": 4309,
            "solution": "Scanl1(lambda u1, u2: Min(-1, IntDivide(x1, Head(x3))), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 79.36303630363037,
                "explored_percent_lambda": 6.493949394939494,
                "explored_percent_none": 14.143014301430142,
                "kept_percent_concrete": 79.22289436947418,
                "kept_percent_lambda": 20.777105630525828,
                "num_examples": 4,
                "num_explored_concrete": 72141,
                "num_explored_lambda": 5903,
                "num_explored_none": 12856,
                "num_inputs": 3,
                "num_kept_concrete": 3405,
                "num_kept_lambda": 893,
                "num_values_explored": 90900,
                "num_values_kept": 4298,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.386557720601559,
            "num_unique_values": 929,
            "solution": "Take(-1, Scanl1(lambda u1, u2: 0, Map(lambda u1: Subtract(4, Access(1, x1)), x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 60.028169014084504,
                "explored_percent_lambda": 30.929577464788732,
                "explored_percent_none": 9.04225352112676,
                "kept_percent_concrete": 49.67391304347826,
                "kept_percent_lambda": 50.32608695652174,
                "num_examples": 2,
                "num_explored_concrete": 2131,
                "num_explored_lambda": 1098,
                "num_explored_none": 321,
                "num_inputs": 1,
                "num_kept_concrete": 457,
                "num_kept_lambda": 463,
                "num_values_explored": 3550,
                "num_values_kept": 920,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.458651011809707,
            "num_unique_values": 951,
            "solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 82.56978478585127,
                "explored_percent_lambda": 10.036224163647987,
                "explored_percent_none": 7.393991050500746,
                "kept_percent_concrete": 83.10308182784271,
                "kept_percent_lambda": 16.896918172157278,
                "num_examples": 3,
                "num_explored_concrete": 3875,
                "num_explored_lambda": 471,
                "num_explored_none": 347,
                "num_inputs": 2,
                "num_kept_concrete": 782,
                "num_kept_lambda": 159,
                "num_values_explored": 4693,
                "num_values_kept": 941,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0262761581689,
            "num_unique_values": 7783,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.69873812346641,
                "explored_percent_lambda": 5.867841467885061,
                "explored_percent_none": 53.43342040864853,
                "kept_percent_concrete": 97.13109481538659,
                "kept_percent_lambda": 2.8689051846134053,
                "num_examples": 4,
                "num_explored_concrete": 123237,
                "num_explored_lambda": 17768,
                "num_explored_none": 161798,
                "num_inputs": 2,
                "num_kept_concrete": 7550,
                "num_kept_lambda": 223,
                "num_values_explored": 302803,
                "num_values_kept": 7773,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 307.0515206474811,
            "num_unique_values": 10406,
            "solution": "Min(2, Multiply(Sum(Take(Minimum(Drop(1, x1)), x1)), Square(4)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 92.35871509245307,
                "explored_percent_lambda": 3.2911321100142237,
                "explored_percent_none": 4.350152797532707,
                "kept_percent_concrete": 93.36347023179763,
                "kept_percent_lambda": 6.636529768202366,
                "num_examples": 5,
                "num_explored_concrete": 131166,
                "num_explored_lambda": 4674,
                "num_explored_none": 6178,
                "num_inputs": 1,
                "num_kept_concrete": 9707,
                "num_kept_lambda": 690,
                "num_values_explored": 142018,
                "num_values_kept": 10397,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.1966862156987,
            "num_unique_values": 10819,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 86.76399329927594,
                "explored_percent_lambda": 1.8174329581481636,
                "explored_percent_none": 11.418573742575902,
                "kept_percent_concrete": 96.31788324544361,
                "kept_percent_lambda": 3.682116754556388,
                "num_examples": 4,
                "num_explored_concrete": 250682,
                "num_explored_lambda": 5251,
                "num_explored_none": 32991,
                "num_inputs": 2,
                "num_kept_concrete": 10411,
                "num_kept_lambda": 398,
                "num_values_explored": 288924,
                "num_values_kept": 10809,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 302.4399329535663,
            "num_unique_values": 4621,
            "solution": "Multiply(4, Min(4, Add(4, Subtract(3, Multiply(3, Square(x1))))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 37.56380427815104,
                "explored_percent_lambda": 7.845848863987085,
                "explored_percent_none": 54.590346857861874,
                "kept_percent_concrete": 96.7692974848222,
                "kept_percent_lambda": 3.230702515177797,
                "num_examples": 3,
                "num_explored_concrete": 63289,
                "num_explored_lambda": 13219,
                "num_explored_none": 91976,
                "num_inputs": 1,
                "num_kept_concrete": 4463,
                "num_kept_lambda": 149,
                "num_values_explored": 168484,
                "num_values_kept": 4612,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.798785964027047,
            "num_unique_values": 679,
            "solution": "Drop(3, Take(4, Map(lambda u1: Add(2, Square(Add(3, 4))), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 60.07782101167315,
                "explored_percent_lambda": 22.101167315175097,
                "explored_percent_none": 17.82101167315175,
                "kept_percent_concrete": 59.79073243647235,
                "kept_percent_lambda": 40.20926756352765,
                "num_examples": 3,
                "num_explored_concrete": 1544,
                "num_explored_lambda": 568,
                "num_explored_none": 458,
                "num_inputs": 2,
                "num_kept_concrete": 400,
                "num_kept_lambda": 269,
                "num_values_explored": 2570,
                "num_values_kept": 669,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0252626053989,
            "num_unique_values": 12098,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.06475973505464,
                "explored_percent_lambda": 29.681474918786652,
                "explored_percent_none": 5.253765346158714,
                "kept_percent_concrete": 38.63843163206221,
                "kept_percent_lambda": 61.36156836793779,
                "num_examples": 5,
                "num_explored_concrete": 154223,
                "num_explored_lambda": 70354,
                "num_explored_none": 12453,
                "num_inputs": 1,
                "num_kept_concrete": 4671,
                "num_kept_lambda": 7418,
                "num_values_explored": 237030,
                "num_values_kept": 12089,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 99.87898620031774,
            "num_unique_values": 4208,
            "solution": "Multiply(3, IntDivide(Max(-1, Max(Sum(x1), Last(x1))), 3))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 82.19567040170745,
                "explored_percent_lambda": 4.386767284091775,
                "explored_percent_none": 13.417562314200778,
                "kept_percent_concrete": 87.68754465348893,
                "kept_percent_lambda": 12.312455346511074,
                "num_examples": 5,
                "num_explored_concrete": 43133,
                "num_explored_lambda": 2302,
                "num_explored_none": 7041,
                "num_inputs": 1,
                "num_kept_concrete": 3682,
                "num_kept_lambda": 517,
                "num_values_explored": 52476,
                "num_values_kept": 4199,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0922977831215,
            "num_unique_values": 6238,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.88657669037963,
                "explored_percent_lambda": 5.449438202247191,
                "explored_percent_none": 18.66398510737318,
                "kept_percent_concrete": 90.07866431208862,
                "kept_percent_lambda": 9.921335687911382,
                "num_examples": 2,
                "num_explored_concrete": 228282,
                "num_explored_lambda": 16393,
                "num_explored_none": 56145,
                "num_inputs": 1,
                "num_kept_concrete": 5611,
                "num_kept_lambda": 618,
                "num_values_explored": 300820,
                "num_values_kept": 6229,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 13.723809627816081,
            "num_unique_values": 1259,
            "solution": "Scanl1(lambda u1, u2: Add(3, Max(Head(x1), Square(4))), Take(2, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 59.55513784461153,
                "explored_percent_lambda": 22.728696741854638,
                "explored_percent_none": 17.716165413533833,
                "kept_percent_concrete": 62.4,
                "kept_percent_lambda": 37.6,
                "num_examples": 4,
                "num_explored_concrete": 3802,
                "num_explored_lambda": 1451,
                "num_explored_none": 1131,
                "num_inputs": 1,
                "num_kept_concrete": 780,
                "num_kept_lambda": 470,
                "num_values_explored": 6384,
                "num_values_kept": 1250,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0391776505858,
            "num_unique_values": 6606,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.70748122825224,
                "explored_percent_lambda": 21.695104083999755,
                "explored_percent_none": 20.597414687748,
                "kept_percent_concrete": 43.671365772320755,
                "kept_percent_lambda": 56.328634227679245,
                "num_examples": 2,
                "num_explored_concrete": 151249,
                "num_explored_lambda": 56862,
                "num_explored_none": 53985,
                "num_inputs": 1,
                "num_kept_concrete": 2881,
                "num_kept_lambda": 3716,
                "num_values_explored": 262096,
                "num_values_kept": 6597,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.5693538170307875,
            "num_unique_values": 446,
            "solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 34.68468468468468,
                "explored_percent_lambda": 39.589589589589586,
                "explored_percent_none": 25.725725725725727,
                "kept_percent_concrete": 25.62929061784897,
                "kept_percent_lambda": 74.37070938215103,
                "num_examples": 2,
                "num_explored_concrete": 693,
                "num_explored_lambda": 791,
                "num_explored_none": 514,
                "num_inputs": 1,
                "num_kept_concrete": 112,
                "num_kept_lambda": 325,
                "num_values_explored": 1998,
                "num_values_kept": 437,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0187970306724,
            "num_unique_values": 5708,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.37285914101548,
                "explored_percent_lambda": 9.314631689114508,
                "explored_percent_none": 50.312509169870005,
                "kept_percent_concrete": 91.10370240393051,
                "kept_percent_lambda": 8.896297596069486,
                "num_examples": 2,
                "num_explored_concrete": 123828,
                "num_explored_lambda": 28569,
                "num_explored_none": 154314,
                "num_inputs": 1,
                "num_kept_concrete": 5192,
                "num_kept_lambda": 507,
                "num_values_explored": 306711,
                "num_values_kept": 5699,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.1157359872013,
            "num_unique_values": 5416,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.89246720866482,
                "explored_percent_lambda": 10.187599278825209,
                "explored_percent_none": 45.91993351250997,
                "kept_percent_concrete": 91.30756426854079,
                "kept_percent_lambda": 8.69243573145922,
                "num_examples": 2,
                "num_explored_concrete": 130976,
                "num_explored_lambda": 30400,
                "num_explored_none": 137026,
                "num_inputs": 1,
                "num_kept_concrete": 4937,
                "num_kept_lambda": 470,
                "num_values_explored": 298402,
                "num_values_kept": 5407,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.967995792627335,
            "num_unique_values": 450,
            "solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 27.14434541034842,
                "explored_percent_lambda": 19.342516494964695,
                "explored_percent_none": 53.51313809468689,
                "kept_percent_concrete": 65.9090909090909,
                "kept_percent_lambda": 34.09090909090909,
                "num_examples": 2,
                "num_explored_concrete": 2345,
                "num_explored_lambda": 1671,
                "num_explored_none": 4623,
                "num_inputs": 2,
                "num_kept_concrete": 290,
                "num_kept_lambda": 150,
                "num_values_explored": 8639,
                "num_values_kept": 440,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.014582592994,
            "num_unique_values": 4860,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.783027231173314,
                "explored_percent_lambda": 11.046371758409434,
                "explored_percent_none": 47.17060101041725,
                "kept_percent_concrete": 87.36082474226804,
                "kept_percent_lambda": 12.639175257731958,
                "num_examples": 2,
                "num_explored_concrete": 126786,
                "num_explored_lambda": 33519,
                "num_explored_none": 143134,
                "num_inputs": 2,
                "num_kept_concrete": 4237,
                "num_kept_lambda": 613,
                "num_values_explored": 303439,
                "num_values_kept": 4850,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.1010464597493,
            "num_unique_values": 4471,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.411136017274124,
                "explored_percent_lambda": 10.703505844170806,
                "explored_percent_none": 46.88535813855507,
                "kept_percent_concrete": 89.73324366733917,
                "kept_percent_lambda": 10.266756332660838,
                "num_examples": 2,
                "num_explored_concrete": 128848,
                "num_explored_lambda": 32518,
                "num_explored_none": 142441,
                "num_inputs": 2,
                "num_kept_concrete": 4003,
                "num_kept_lambda": 458,
                "num_values_explored": 303807,
                "num_values_kept": 4461,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0934992693365,
            "num_unique_values": 4487,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.73415703467517,
                "explored_percent_lambda": 10.64102564102564,
                "explored_percent_none": 46.62481732429919,
                "kept_percent_concrete": 86.50882287245923,
                "kept_percent_lambda": 13.491177127540764,
                "num_examples": 2,
                "num_explored_concrete": 128664,
                "num_explored_lambda": 32038,
                "num_explored_none": 140378,
                "num_inputs": 2,
                "num_kept_concrete": 3873,
                "num_kept_lambda": 604,
                "num_values_explored": 301080,
                "num_values_kept": 4477,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0965878069401,
            "num_unique_values": 6728,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.77389162373155,
                "explored_percent_lambda": 24.569214469038904,
                "explored_percent_none": 21.65689390722955,
                "kept_percent_concrete": 41.777050156273255,
                "kept_percent_lambda": 58.222949843726745,
                "num_examples": 2,
                "num_explored_concrete": 140587,
                "num_explored_lambda": 64234,
                "num_explored_none": 56620,
                "num_inputs": 1,
                "num_kept_concrete": 2807,
                "num_kept_lambda": 3912,
                "num_values_explored": 261441,
                "num_values_kept": 6719,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 238.91639480553567,
            "num_unique_values": 2906,
            "solution": "Add(3, Max(Multiply(Square(4), Add(3, 4)), Add(x1, x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 40.62338960288583,
                "explored_percent_lambda": 11.085778534284866,
                "explored_percent_none": 48.2908318628293,
                "kept_percent_concrete": 92.02623403520883,
                "kept_percent_lambda": 7.973765964791164,
                "num_examples": 3,
                "num_explored_concrete": 52028,
                "num_explored_lambda": 14198,
                "num_explored_none": 61848,
                "num_inputs": 1,
                "num_kept_concrete": 2666,
                "num_kept_lambda": 231,
                "num_values_explored": 128074,
                "num_values_kept": 2897,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.82
}