{
    "num_tasks": 100,
    "num_tasks_solved": 82,
    "results": [
        {
            "elapsed_time": 1.9056856073439121,
            "num_unique_values": 219,
            "solution": "Map(lambda u1: 1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 19.62750716332378,
                "explored_percent_lambda": 56.01719197707737,
                "explored_percent_none": 24.355300859598852,
                "kept_percent_concrete": 30.0,
                "kept_percent_lambda": 70.0,
                "num_examples": 2,
                "num_explored_concrete": 137,
                "num_explored_lambda": 391,
                "num_explored_none": 170,
                "num_inputs": 1,
                "num_kept_concrete": 63,
                "num_kept_lambda": 147,
                "num_values_explored": 698,
                "num_values_kept": 210,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7876484729349613,
            "num_unique_values": 253,
            "solution": "Scanl1(lambda u1, u2: x2, ZipWith(lambda u1, u2: (lambda v1: Max(1, v1))(u2), x1, x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 37.27959697732997,
                "explored_percent_lambda": 33.249370277078086,
                "explored_percent_none": 29.47103274559194,
                "kept_percent_concrete": 69.1358024691358,
                "kept_percent_lambda": 30.864197530864196,
                "num_examples": 3,
                "num_explored_concrete": 296,
                "num_explored_lambda": 264,
                "num_explored_none": 234,
                "num_inputs": 2,
                "num_kept_concrete": 168,
                "num_kept_lambda": 75,
                "num_values_explored": 794,
                "num_values_kept": 243,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9608526285737753,
            "num_unique_values": 163,
            "solution": "Access(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 13.61111111111111,
                "explored_percent_lambda": 65.27777777777777,
                "explored_percent_none": 21.11111111111111,
                "kept_percent_concrete": 27.272727272727273,
                "kept_percent_lambda": 72.72727272727273,
                "num_examples": 5,
                "num_explored_concrete": 49,
                "num_explored_lambda": 235,
                "num_explored_none": 76,
                "num_inputs": 1,
                "num_kept_concrete": 42,
                "num_kept_lambda": 112,
                "num_values_explored": 360,
                "num_values_kept": 154,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0200428571552038,
            "num_unique_values": 155,
            "solution": "Drop(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 12.605042016806722,
                "explored_percent_lambda": 68.34733893557423,
                "explored_percent_none": 19.047619047619047,
                "kept_percent_concrete": 21.91780821917808,
                "kept_percent_lambda": 78.08219178082192,
                "num_examples": 5,
                "num_explored_concrete": 45,
                "num_explored_lambda": 244,
                "num_explored_none": 68,
                "num_inputs": 1,
                "num_kept_concrete": 32,
                "num_kept_lambda": 114,
                "num_values_explored": 357,
                "num_values_kept": 146,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8475853838026524,
            "num_unique_values": 143,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 30.158730158730158,
                "explored_percent_lambda": 36.77248677248677,
                "explored_percent_none": 33.06878306878307,
                "kept_percent_concrete": 50.37593984962406,
                "kept_percent_lambda": 49.62406015037594,
                "num_examples": 4,
                "num_explored_concrete": 114,
                "num_explored_lambda": 139,
                "num_explored_none": 125,
                "num_inputs": 2,
                "num_kept_concrete": 67,
                "num_kept_lambda": 66,
                "num_values_explored": 378,
                "num_values_kept": 133,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9605341255664825,
            "num_unique_values": 153,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 9.116809116809117,
                "explored_percent_lambda": 71.22507122507122,
                "explored_percent_none": 19.65811965811966,
                "kept_percent_concrete": 16.783216783216783,
                "kept_percent_lambda": 83.21678321678321,
                "num_examples": 4,
                "num_explored_concrete": 32,
                "num_explored_lambda": 250,
                "num_explored_none": 69,
                "num_inputs": 2,
                "num_kept_concrete": 24,
                "num_kept_lambda": 119,
                "num_values_explored": 351,
                "num_values_kept": 143,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0155561957508326,
            "num_unique_values": 151,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 10.335195530726256,
                "explored_percent_lambda": 74.86033519553072,
                "explored_percent_none": 14.804469273743017,
                "kept_percent_concrete": 14.788732394366198,
                "kept_percent_lambda": 85.21126760563381,
                "num_examples": 2,
                "num_explored_concrete": 37,
                "num_explored_lambda": 268,
                "num_explored_none": 53,
                "num_inputs": 1,
                "num_kept_concrete": 21,
                "num_kept_lambda": 121,
                "num_values_explored": 358,
                "num_values_kept": 142,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0532198548316956,
            "num_unique_values": 153,
            "solution": "Drop(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 10.743801652892563,
                "explored_percent_lambda": 69.14600550964187,
                "explored_percent_none": 20.110192837465565,
                "kept_percent_concrete": 14.583333333333334,
                "kept_percent_lambda": 85.41666666666667,
                "num_examples": 2,
                "num_explored_concrete": 39,
                "num_explored_lambda": 251,
                "num_explored_none": 73,
                "num_inputs": 1,
                "num_kept_concrete": 21,
                "num_kept_lambda": 123,
                "num_values_explored": 363,
                "num_values_kept": 144,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9162339717149734,
            "num_unique_values": 257,
            "solution": "Scanl1(lambda u1, u2: 3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 22.585227272727273,
                "explored_percent_lambda": 50.56818181818182,
                "explored_percent_none": 26.84659090909091,
                "kept_percent_concrete": 31.451612903225808,
                "kept_percent_lambda": 68.54838709677419,
                "num_examples": 4,
                "num_explored_concrete": 159,
                "num_explored_lambda": 356,
                "num_explored_none": 189,
                "num_inputs": 1,
                "num_kept_concrete": 78,
                "num_kept_lambda": 170,
                "num_values_explored": 704,
                "num_values_kept": 248,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9282586760818958,
            "num_unique_values": 165,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 33.16831683168317,
                "explored_percent_lambda": 38.366336633663366,
                "explored_percent_none": 28.465346534653467,
                "kept_percent_concrete": 53.54838709677419,
                "kept_percent_lambda": 46.45161290322581,
                "num_examples": 5,
                "num_explored_concrete": 134,
                "num_explored_lambda": 155,
                "num_explored_none": 115,
                "num_inputs": 2,
                "num_kept_concrete": 83,
                "num_kept_lambda": 72,
                "num_values_explored": 404,
                "num_values_kept": 155,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.6642935667186975,
            "num_unique_values": 374,
            "solution": "Head(Map(lambda u1: (lambda v1: IntDivide(v1, x1))(u1), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 53.477935676888556,
                "explored_percent_lambda": 16.30516080777861,
                "explored_percent_none": 30.216903515332834,
                "kept_percent_concrete": 73.07692307692308,
                "kept_percent_lambda": 26.923076923076923,
                "num_examples": 4,
                "num_explored_concrete": 715,
                "num_explored_lambda": 218,
                "num_explored_none": 404,
                "num_inputs": 2,
                "num_kept_concrete": 266,
                "num_kept_lambda": 98,
                "num_values_explored": 1337,
                "num_values_kept": 364,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19491194002330303,
            "num_unique_values": 70,
            "solution": "Max(x1, Square(4))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 100.0,
                "explored_percent_lambda": 0.0,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 100.0,
                "kept_percent_lambda": 0.0,
                "num_examples": 2,
                "num_explored_concrete": 97,
                "num_explored_lambda": 0,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 61,
                "num_kept_lambda": 0,
                "num_values_explored": 97,
                "num_values_kept": 61,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8080408852547407,
            "num_unique_values": 291,
            "solution": "Multiply(4, Minimum(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 27.932960893854748,
                "explored_percent_lambda": 50.83798882681564,
                "explored_percent_none": 21.22905027932961,
                "kept_percent_concrete": 52.4822695035461,
                "kept_percent_lambda": 47.5177304964539,
                "num_examples": 4,
                "num_explored_concrete": 200,
                "num_explored_lambda": 364,
                "num_explored_none": 152,
                "num_inputs": 1,
                "num_kept_concrete": 148,
                "num_kept_lambda": 134,
                "num_values_explored": 716,
                "num_values_kept": 282,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.5082442723214626,
            "num_unique_values": 269,
            "solution": "Multiply(4, Count(lambda u1: (lambda v1: Less(v1, 1))(u1), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 45.1381780962129,
                "explored_percent_lambda": 37.768679631525075,
                "explored_percent_none": 17.09314227226203,
                "kept_percent_concrete": 49.61538461538461,
                "kept_percent_lambda": 50.38461538461539,
                "num_examples": 2,
                "num_explored_concrete": 441,
                "num_explored_lambda": 369,
                "num_explored_none": 167,
                "num_inputs": 1,
                "num_kept_concrete": 129,
                "num_kept_lambda": 131,
                "num_values_explored": 977,
                "num_values_kept": 260,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.437439203262329,
            "num_unique_values": 265,
            "solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 38.74045801526717,
                "explored_percent_lambda": 43.70229007633588,
                "explored_percent_none": 17.557251908396946,
                "kept_percent_concrete": 53.72549019607843,
                "kept_percent_lambda": 46.27450980392157,
                "num_examples": 5,
                "num_explored_concrete": 203,
                "num_explored_lambda": 229,
                "num_explored_none": 92,
                "num_inputs": 2,
                "num_kept_concrete": 137,
                "num_kept_lambda": 118,
                "num_values_explored": 524,
                "num_values_kept": 255,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.8098364677280188,
            "num_unique_values": 465,
            "solution": "Sum(Map(lambda u1: (lambda v1: Subtract(1, v1))(u1), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 37.869137232194554,
                "explored_percent_lambda": 29.24145917776491,
                "explored_percent_none": 32.88940359004053,
                "kept_percent_concrete": 48.68421052631579,
                "kept_percent_lambda": 51.31578947368421,
                "num_examples": 3,
                "num_explored_concrete": 654,
                "num_explored_lambda": 505,
                "num_explored_none": 568,
                "num_inputs": 1,
                "num_kept_concrete": 222,
                "num_kept_lambda": 234,
                "num_values_explored": 1727,
                "num_values_kept": 456,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9166186098009348,
            "num_unique_values": 260,
            "solution": "Scanl1(lambda u1, u2: Sum(Take(3, x2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 30.392156862745097,
                "explored_percent_lambda": 46.63865546218487,
                "explored_percent_none": 22.969187675070028,
                "kept_percent_concrete": 49.2,
                "kept_percent_lambda": 50.8,
                "num_examples": 2,
                "num_explored_concrete": 217,
                "num_explored_lambda": 333,
                "num_explored_none": 164,
                "num_inputs": 2,
                "num_kept_concrete": 123,
                "num_kept_lambda": 127,
                "num_values_explored": 714,
                "num_values_kept": 250,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8213576320558786,
            "num_unique_values": 248,
            "solution": "ZipWith(lambda u1, u2: (lambda v1, v2: Min(v1, v2))(u1, u2), Sort(x1), Drop(1, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 23.773006134969325,
                "explored_percent_lambda": 45.39877300613497,
                "explored_percent_none": 30.828220858895705,
                "kept_percent_concrete": 26.778242677824267,
                "kept_percent_lambda": 73.22175732217573,
                "num_examples": 3,
                "num_explored_concrete": 155,
                "num_explored_lambda": 296,
                "num_explored_none": 201,
                "num_inputs": 1,
                "num_kept_concrete": 64,
                "num_kept_lambda": 175,
                "num_values_explored": 652,
                "num_values_kept": 239,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.3455054927617311,
            "num_unique_values": 196,
            "solution": "Sum(Reverse(Drop(x1, Take(4, x2))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 29.291338582677167,
                "explored_percent_lambda": 32.91338582677165,
                "explored_percent_none": 37.79527559055118,
                "kept_percent_concrete": 60.215053763440864,
                "kept_percent_lambda": 39.784946236559136,
                "num_examples": 3,
                "num_explored_concrete": 186,
                "num_explored_lambda": 209,
                "num_explored_none": 240,
                "num_inputs": 2,
                "num_kept_concrete": 112,
                "num_kept_lambda": 74,
                "num_values_explored": 635,
                "num_values_kept": 186,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8809775076806545,
            "num_unique_values": 203,
            "solution": "Map(lambda u1: Head(x2), Drop(2, x2))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 22.87166454891995,
                "explored_percent_lambda": 56.16264294790343,
                "explored_percent_none": 20.96569250317662,
                "kept_percent_concrete": 27.46113989637306,
                "kept_percent_lambda": 72.53886010362694,
                "num_examples": 2,
                "num_explored_concrete": 180,
                "num_explored_lambda": 442,
                "num_explored_none": 165,
                "num_inputs": 2,
                "num_kept_concrete": 53,
                "num_kept_lambda": 140,
                "num_values_explored": 787,
                "num_values_kept": 193,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.1152170691639185,
            "num_unique_values": 251,
            "solution": "Scanl1(lambda u1, u2: Head(x2), ZipWith(lambda u1, u2: Last(x2), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 28.418549346016647,
                "explored_percent_lambda": 39.357907253269914,
                "explored_percent_none": 32.22354340071344,
                "kept_percent_concrete": 40.66390041493776,
                "kept_percent_lambda": 59.33609958506224,
                "num_examples": 3,
                "num_explored_concrete": 239,
                "num_explored_lambda": 331,
                "num_explored_none": 271,
                "num_inputs": 2,
                "num_kept_concrete": 98,
                "num_kept_lambda": 143,
                "num_values_explored": 841,
                "num_values_kept": 241,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5707824975252151,
            "num_unique_values": 311,
            "solution": "IntDivide(Sum(x1), Head(x2))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 39.93115318416523,
                "explored_percent_lambda": 42.3407917383821,
                "explored_percent_none": 17.72805507745267,
                "kept_percent_concrete": 55.81395348837209,
                "kept_percent_lambda": 44.18604651162791,
                "num_examples": 4,
                "num_explored_concrete": 232,
                "num_explored_lambda": 246,
                "num_explored_none": 103,
                "num_inputs": 2,
                "num_kept_concrete": 168,
                "num_kept_lambda": 133,
                "num_values_explored": 581,
                "num_values_kept": 301,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.066585451364517,
            "num_unique_values": 1150,
            "solution": "Access(Access(4, x1), Map(lambda u1: (lambda v1: IntDivide(Multiply(3, 4), v1))(u1), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 78.47634650829409,
                "explored_percent_lambda": 13.946344460372721,
                "explored_percent_none": 7.577309031333197,
                "kept_percent_concrete": 75.28483786152498,
                "kept_percent_lambda": 24.715162138475023,
                "num_examples": 5,
                "num_explored_concrete": 3832,
                "num_explored_lambda": 681,
                "num_explored_none": 370,
                "num_inputs": 1,
                "num_kept_concrete": 859,
                "num_kept_lambda": 282,
                "num_values_explored": 4883,
                "num_values_kept": 1141,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.5942856445908546,
            "num_unique_values": 546,
            "solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), Reverse(Scanl1(lambda u1, u2: Head(x2), x1)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 57.42379547689282,
                "explored_percent_lambda": 33.92330383480826,
                "explored_percent_none": 8.652900688298919,
                "kept_percent_concrete": 65.48507462686567,
                "kept_percent_lambda": 34.514925373134325,
                "num_examples": 5,
                "num_explored_concrete": 584,
                "num_explored_lambda": 345,
                "num_explored_none": 88,
                "num_inputs": 2,
                "num_kept_concrete": 351,
                "num_kept_lambda": 185,
                "num_values_explored": 1017,
                "num_values_kept": 536,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9372448679059744,
            "num_unique_values": 250,
            "solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 27.385377942998762,
                "explored_percent_lambda": 43.12267657992565,
                "explored_percent_none": 29.49194547707559,
                "kept_percent_concrete": 49.166666666666664,
                "kept_percent_lambda": 50.833333333333336,
                "num_examples": 2,
                "num_explored_concrete": 221,
                "num_explored_lambda": 348,
                "num_explored_none": 238,
                "num_inputs": 2,
                "num_kept_concrete": 118,
                "num_kept_lambda": 122,
                "num_values_explored": 807,
                "num_values_kept": 240,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0642748586833477,
            "num_unique_values": 154,
            "solution": "Drop(IntDivide(1, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 36.96098562628337,
                "explored_percent_lambda": 33.26488706365503,
                "explored_percent_none": 29.7741273100616,
                "kept_percent_concrete": 51.74825174825175,
                "kept_percent_lambda": 48.25174825174825,
                "num_examples": 2,
                "num_explored_concrete": 180,
                "num_explored_lambda": 162,
                "num_explored_none": 145,
                "num_inputs": 3,
                "num_kept_concrete": 74,
                "num_kept_lambda": 69,
                "num_values_explored": 487,
                "num_values_kept": 143,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 60.9027906190604,
            "num_unique_values": 4032,
            "solution": "Subtract(Add(Last(x2), Last(Map(lambda u1: (lambda v1: Subtract(1, v1))(u1), x1))), 1)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 86.41614702986544,
                "explored_percent_lambda": 4.827699376435839,
                "explored_percent_none": 8.75615359369872,
                "kept_percent_concrete": 91.64594728990552,
                "kept_percent_lambda": 8.35405271009448,
                "num_examples": 5,
                "num_explored_concrete": 26331,
                "num_explored_lambda": 1471,
                "num_explored_none": 2668,
                "num_inputs": 2,
                "num_kept_concrete": 3686,
                "num_kept_lambda": 336,
                "num_values_explored": 30470,
                "num_values_kept": 4022,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6396525483578444,
            "num_unique_values": 154,
            "solution": "Multiply(Subtract(IntDivide(x1, 4), 4), -1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 24.263604593110333,
                "explored_percent_lambda": 11.682476285571642,
                "explored_percent_none": 64.05391912131802,
                "kept_percent_concrete": 87.58620689655173,
                "kept_percent_lambda": 12.413793103448276,
                "num_examples": 5,
                "num_explored_concrete": 486,
                "num_explored_lambda": 234,
                "num_explored_none": 1283,
                "num_inputs": 1,
                "num_kept_concrete": 127,
                "num_kept_lambda": 18,
                "num_values_explored": 2003,
                "num_values_kept": 145,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6235969867557287,
            "num_unique_values": 224,
            "solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 19.554848966613672,
                "explored_percent_lambda": 59.61844197138315,
                "explored_percent_none": 20.82670906200318,
                "kept_percent_concrete": 37.674418604651166,
                "kept_percent_lambda": 62.325581395348834,
                "num_examples": 3,
                "num_explored_concrete": 123,
                "num_explored_lambda": 375,
                "num_explored_none": 131,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 134,
                "num_values_explored": 629,
                "num_values_kept": 215,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.2825030907988548,
            "num_unique_values": 288,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 49.61832061068702,
                "explored_percent_lambda": 25.763358778625953,
                "explored_percent_none": 24.61832061068702,
                "kept_percent_concrete": 77.6978417266187,
                "kept_percent_lambda": 22.302158273381295,
                "num_examples": 5,
                "num_explored_concrete": 260,
                "num_explored_lambda": 135,
                "num_explored_none": 129,
                "num_inputs": 2,
                "num_kept_concrete": 216,
                "num_kept_lambda": 62,
                "num_values_explored": 524,
                "num_values_kept": 278,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.05561981536448,
            "num_unique_values": 537,
            "solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), Map(lambda u1: Head(x2), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 56.51851851851852,
                "explored_percent_lambda": 31.25925925925926,
                "explored_percent_none": 12.222222222222221,
                "kept_percent_concrete": 65.46489563567363,
                "kept_percent_lambda": 34.53510436432637,
                "num_examples": 3,
                "num_explored_concrete": 763,
                "num_explored_lambda": 422,
                "num_explored_none": 165,
                "num_inputs": 2,
                "num_kept_concrete": 345,
                "num_kept_lambda": 182,
                "num_values_explored": 1350,
                "num_values_kept": 527,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.49425265006721,
            "num_unique_values": 230,
            "solution": "Subtract(Add(Square(4), Square(Add(x1, Add(x1, 2)))), 4)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 23.80250552689757,
                "explored_percent_lambda": 12.65045443380005,
                "explored_percent_none": 63.54704003930238,
                "kept_percent_concrete": 79.18552036199095,
                "kept_percent_lambda": 20.81447963800905,
                "num_examples": 2,
                "num_explored_concrete": 969,
                "num_explored_lambda": 515,
                "num_explored_none": 2587,
                "num_inputs": 1,
                "num_kept_concrete": 175,
                "num_kept_lambda": 46,
                "num_values_explored": 4071,
                "num_values_kept": 221,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9164617825299501,
            "num_unique_values": 253,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 33.46203346203346,
                "explored_percent_lambda": 41.57014157014157,
                "explored_percent_none": 24.967824967824967,
                "kept_percent_concrete": 52.26337448559671,
                "kept_percent_lambda": 47.73662551440329,
                "num_examples": 5,
                "num_explored_concrete": 260,
                "num_explored_lambda": 323,
                "num_explored_none": 194,
                "num_inputs": 2,
                "num_kept_concrete": 127,
                "num_kept_lambda": 116,
                "num_values_explored": 777,
                "num_values_kept": 243,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.0953427720814943,
            "num_unique_values": 330,
            "solution": "Max(Square(Head(x1)), Square(Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 43.044619422572175,
                "explored_percent_lambda": 40.55118110236221,
                "explored_percent_none": 16.404199475065617,
                "kept_percent_concrete": 55.625,
                "kept_percent_lambda": 44.375,
                "num_examples": 3,
                "num_explored_concrete": 328,
                "num_explored_lambda": 309,
                "num_explored_none": 125,
                "num_inputs": 2,
                "num_kept_concrete": 178,
                "num_kept_lambda": 142,
                "num_values_explored": 762,
                "num_values_kept": 320,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 119.60673609003425,
            "num_unique_values": 5218,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), Reverse(Scanl1(lambda u1, u2: Head(x1), Sort(x1))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 64.11235776239357,
                "explored_percent_lambda": 32.18946447043845,
                "explored_percent_none": 3.6981777671679796,
                "kept_percent_concrete": 39.37416010750624,
                "kept_percent_lambda": 60.62583989249376,
                "num_examples": 2,
                "num_explored_concrete": 32228,
                "num_explored_lambda": 16181,
                "num_explored_none": 1859,
                "num_inputs": 1,
                "num_kept_concrete": 2051,
                "num_kept_lambda": 3158,
                "num_values_explored": 50268,
                "num_values_kept": 5209,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.2679578363895416,
            "num_unique_values": 254,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 24.936386768447836,
                "explored_percent_lambda": 55.59796437659033,
                "explored_percent_none": 19.46564885496183,
                "kept_percent_concrete": 33.87755102040816,
                "kept_percent_lambda": 66.12244897959184,
                "num_examples": 4,
                "num_explored_concrete": 196,
                "num_explored_lambda": 437,
                "num_explored_none": 153,
                "num_inputs": 1,
                "num_kept_concrete": 83,
                "num_kept_lambda": 162,
                "num_values_explored": 786,
                "num_values_kept": 245,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.423667149618268,
            "num_unique_values": 523,
            "solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), Map(lambda u1: (lambda v1: Min(4, v1))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 53.374233128834355,
                "explored_percent_lambda": 28.425357873210633,
                "explored_percent_none": 18.20040899795501,
                "kept_percent_concrete": 62.76803118908382,
                "kept_percent_lambda": 37.23196881091618,
                "num_examples": 5,
                "num_explored_concrete": 783,
                "num_explored_lambda": 417,
                "num_explored_none": 267,
                "num_inputs": 2,
                "num_kept_concrete": 322,
                "num_kept_lambda": 191,
                "num_values_explored": 1467,
                "num_values_kept": 513,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.9524336587637663,
            "num_unique_values": 236,
            "solution": "Subtract(Min(x1, x3), Sum(x2))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 48.79890185312286,
                "explored_percent_lambda": 16.129032258064516,
                "explored_percent_none": 35.07206588881263,
                "kept_percent_concrete": 72.0,
                "kept_percent_lambda": 28.0,
                "num_examples": 2,
                "num_explored_concrete": 711,
                "num_explored_lambda": 235,
                "num_explored_none": 511,
                "num_inputs": 3,
                "num_kept_concrete": 162,
                "num_kept_lambda": 63,
                "num_values_explored": 1457,
                "num_values_kept": 225,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.750124216079712,
            "num_unique_values": 265,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 21.824104234527688,
                "explored_percent_lambda": 51.954397394136805,
                "explored_percent_none": 26.221498371335503,
                "kept_percent_concrete": 29.6875,
                "kept_percent_lambda": 70.3125,
                "num_examples": 2,
                "num_explored_concrete": 134,
                "num_explored_lambda": 319,
                "num_explored_none": 161,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 180,
                "num_values_explored": 614,
                "num_values_kept": 256,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.765187345445156,
            "num_unique_values": 266,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 30.298273155416013,
                "explored_percent_lambda": 43.956043956043956,
                "explored_percent_none": 25.74568288854003,
                "kept_percent_concrete": 39.688715953307394,
                "kept_percent_lambda": 60.311284046692606,
                "num_examples": 2,
                "num_explored_concrete": 193,
                "num_explored_lambda": 280,
                "num_explored_none": 164,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 155,
                "num_values_explored": 637,
                "num_values_kept": 257,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.2540916204452515,
            "num_unique_values": 218,
            "solution": "Add(Subtract(x1, x2), Square(IntDivide(4, x2)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 25.344286059434648,
                "explored_percent_lambda": 10.292341145204155,
                "explored_percent_none": 64.3633727953612,
                "kept_percent_concrete": 84.13461538461539,
                "kept_percent_lambda": 15.865384615384615,
                "num_examples": 2,
                "num_explored_concrete": 1049,
                "num_explored_lambda": 426,
                "num_explored_none": 2664,
                "num_inputs": 2,
                "num_kept_concrete": 175,
                "num_kept_lambda": 33,
                "num_values_explored": 4139,
                "num_values_kept": 208,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.133077822625637,
            "num_unique_values": 174,
            "solution": "Map(lambda u1: Max(3, IntDivide(Subtract(x2, 4), 4)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 30.119453924914676,
                "explored_percent_lambda": 17.66211604095563,
                "explored_percent_none": 52.218430034129696,
                "kept_percent_concrete": 64.63414634146342,
                "kept_percent_lambda": 35.36585365853659,
                "num_examples": 4,
                "num_explored_concrete": 353,
                "num_explored_lambda": 207,
                "num_explored_none": 612,
                "num_inputs": 2,
                "num_kept_concrete": 106,
                "num_kept_lambda": 58,
                "num_values_explored": 1172,
                "num_values_kept": 164,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.64504649117589,
            "num_unique_values": 1703,
            "solution": "Scanl1(lambda u1, u2: Subtract(Access(1, x1), 1), Map(lambda u1: Add(Head(x1), -1), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 79.25600343053173,
                "explored_percent_lambda": 15.383790737564322,
                "explored_percent_none": 5.360205831903945,
                "kept_percent_concrete": 69.6396928529238,
                "kept_percent_lambda": 30.360307147076195,
                "num_examples": 3,
                "num_explored_concrete": 7393,
                "num_explored_lambda": 1435,
                "num_explored_none": 500,
                "num_inputs": 2,
                "num_kept_concrete": 1179,
                "num_kept_lambda": 514,
                "num_values_explored": 9328,
                "num_values_kept": 1693,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.872075729072094,
            "num_unique_values": 753,
            "solution": "Add(Head(x1), Add(Head(x1), Multiply(2, Square(4))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 63.71578334304019,
                "explored_percent_lambda": 18.462434478741994,
                "explored_percent_none": 17.821782178217823,
                "kept_percent_concrete": 67.8763440860215,
                "kept_percent_lambda": 32.123655913978496,
                "num_examples": 4,
                "num_explored_concrete": 2188,
                "num_explored_lambda": 634,
                "num_explored_none": 612,
                "num_inputs": 1,
                "num_kept_concrete": 505,
                "num_kept_lambda": 239,
                "num_values_explored": 3434,
                "num_values_kept": 744,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9163994807749987,
            "num_unique_values": 134,
            "solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 92.26305609284333,
                "explored_percent_lambda": 5.996131528046422,
                "explored_percent_none": 1.7408123791102514,
                "kept_percent_concrete": 82.4,
                "kept_percent_lambda": 17.6,
                "num_examples": 5,
                "num_explored_concrete": 477,
                "num_explored_lambda": 31,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 103,
                "num_kept_lambda": 22,
                "num_values_explored": 517,
                "num_values_kept": 125,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7950856946408749,
            "num_unique_values": 241,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 31.362467866323907,
                "explored_percent_lambda": 30.848329048843187,
                "explored_percent_none": 37.789203084832906,
                "kept_percent_concrete": 49.130434782608695,
                "kept_percent_lambda": 50.869565217391305,
                "num_examples": 2,
                "num_explored_concrete": 244,
                "num_explored_lambda": 240,
                "num_explored_none": 294,
                "num_inputs": 3,
                "num_kept_concrete": 113,
                "num_kept_lambda": 117,
                "num_values_explored": 778,
                "num_values_kept": 230,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7597764786332846,
            "num_unique_values": 115,
            "solution": "If(IsOdd(x1), IntDivide(x1, 4), Subtract(x1, x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 87.08971553610503,
                "explored_percent_lambda": 10.50328227571116,
                "explored_percent_none": 2.4070021881838075,
                "kept_percent_concrete": 75.23809523809524,
                "kept_percent_lambda": 24.761904761904763,
                "num_examples": 2,
                "num_explored_concrete": 398,
                "num_explored_lambda": 48,
                "num_explored_none": 11,
                "num_inputs": 2,
                "num_kept_concrete": 79,
                "num_kept_lambda": 26,
                "num_values_explored": 457,
                "num_values_kept": 105,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.840987615287304,
            "num_unique_values": 248,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(x1, (lambda v1: Add(x1, v1))(v1)))(u2), x2, x3)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 34.552845528455286,
                "explored_percent_lambda": 36.043360433604335,
                "explored_percent_none": 29.40379403794038,
                "kept_percent_concrete": 52.742616033755276,
                "kept_percent_lambda": 47.257383966244724,
                "num_examples": 4,
                "num_explored_concrete": 255,
                "num_explored_lambda": 266,
                "num_explored_none": 217,
                "num_inputs": 3,
                "num_kept_concrete": 125,
                "num_kept_lambda": 112,
                "num_values_explored": 738,
                "num_values_kept": 237,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.4066283237189054,
            "num_unique_values": 768,
            "solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 73.501303214596,
                "explored_percent_lambda": 17.680278019113814,
                "explored_percent_none": 8.818418766290183,
                "kept_percent_concrete": 73.57992073976222,
                "kept_percent_lambda": 26.42007926023778,
                "num_examples": 4,
                "num_explored_concrete": 1692,
                "num_explored_lambda": 407,
                "num_explored_none": 203,
                "num_inputs": 3,
                "num_kept_concrete": 557,
                "num_kept_lambda": 200,
                "num_values_explored": 2302,
                "num_values_kept": 757,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.3655751142650843,
            "num_unique_values": 126,
            "solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 21.54471544715447,
                "explored_percent_lambda": 11.026422764227643,
                "explored_percent_none": 67.42886178861788,
                "kept_percent_concrete": 87.06896551724138,
                "kept_percent_lambda": 12.931034482758621,
                "num_examples": 4,
                "num_explored_concrete": 424,
                "num_explored_lambda": 217,
                "num_explored_none": 1327,
                "num_inputs": 2,
                "num_kept_concrete": 101,
                "num_kept_lambda": 15,
                "num_values_explored": 1968,
                "num_values_kept": 116,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.095552120357752,
            "num_unique_values": 257,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), Drop(1, Take(4, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 26.29582806573957,
                "explored_percent_lambda": 52.97092288242731,
                "explored_percent_none": 20.733249051833123,
                "kept_percent_concrete": 40.32258064516129,
                "kept_percent_lambda": 59.67741935483871,
                "num_examples": 5,
                "num_explored_concrete": 208,
                "num_explored_lambda": 419,
                "num_explored_none": 164,
                "num_inputs": 1,
                "num_kept_concrete": 100,
                "num_kept_lambda": 148,
                "num_values_explored": 791,
                "num_values_kept": 248,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6546945814043283,
            "num_unique_values": 262,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Max(v1, x3))(u2), Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 37.61609907120743,
                "explored_percent_lambda": 35.44891640866873,
                "explored_percent_none": 26.934984520123837,
                "kept_percent_concrete": 61.354581673306775,
                "kept_percent_lambda": 38.645418326693225,
                "num_examples": 5,
                "num_explored_concrete": 243,
                "num_explored_lambda": 229,
                "num_explored_none": 174,
                "num_inputs": 3,
                "num_kept_concrete": 154,
                "num_kept_lambda": 97,
                "num_values_explored": 646,
                "num_values_kept": 251,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 13.491765988990664,
            "num_unique_values": 1225,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1, Reverse(x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 61.683822399754185,
                "explored_percent_lambda": 24.458442157013366,
                "explored_percent_none": 13.857735443232448,
                "kept_percent_concrete": 54.93421052631579,
                "kept_percent_lambda": 45.06578947368421,
                "num_examples": 3,
                "num_explored_concrete": 4015,
                "num_explored_lambda": 1592,
                "num_explored_none": 902,
                "num_inputs": 1,
                "num_kept_concrete": 668,
                "num_kept_lambda": 548,
                "num_values_explored": 6509,
                "num_values_kept": 1216,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.0399831384420395,
            "num_unique_values": 249,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 28.571428571428573,
                "explored_percent_lambda": 42.124542124542124,
                "explored_percent_none": 29.304029304029303,
                "kept_percent_concrete": 46.44351464435147,
                "kept_percent_lambda": 53.55648535564853,
                "num_examples": 4,
                "num_explored_concrete": 234,
                "num_explored_lambda": 345,
                "num_explored_none": 240,
                "num_inputs": 2,
                "num_kept_concrete": 111,
                "num_kept_lambda": 128,
                "num_values_explored": 819,
                "num_values_kept": 239,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0082351919264,
            "num_unique_values": 15827,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 79.07264784038193,
                "explored_percent_lambda": 14.093140566590101,
                "explored_percent_none": 6.834211593027969,
                "kept_percent_concrete": 73.46358118361154,
                "kept_percent_lambda": 26.53641881638847,
                "num_examples": 5,
                "num_explored_concrete": 175565,
                "num_explored_lambda": 31291,
                "num_explored_none": 15174,
                "num_inputs": 3,
                "num_kept_concrete": 11619,
                "num_kept_lambda": 4197,
                "num_values_explored": 222030,
                "num_values_kept": 15816,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.193212555721402,
            "num_unique_values": 233,
            "solution": "ZipWith(lambda u1, u2: Sum(x1), x1, Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 25.871313672922252,
                "explored_percent_lambda": 51.60857908847185,
                "explored_percent_none": 22.5201072386059,
                "kept_percent_concrete": 41.70403587443946,
                "kept_percent_lambda": 58.29596412556054,
                "num_examples": 5,
                "num_explored_concrete": 193,
                "num_explored_lambda": 385,
                "num_explored_none": 168,
                "num_inputs": 2,
                "num_kept_concrete": 93,
                "num_kept_lambda": 130,
                "num_values_explored": 746,
                "num_values_kept": 223,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 64.71318743564188,
            "num_unique_values": 2017,
            "solution": "Min(Subtract(x1, 3), Add(2, Min(Subtract(x1, Head(x2)), 3)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 67.15978041028605,
                "explored_percent_lambda": 5.842242126553019,
                "explored_percent_none": 26.997977463160936,
                "kept_percent_concrete": 87.54359740906825,
                "kept_percent_lambda": 12.45640259093174,
                "num_examples": 5,
                "num_explored_concrete": 23244,
                "num_explored_lambda": 2022,
                "num_explored_none": 9344,
                "num_inputs": 2,
                "num_kept_concrete": 1757,
                "num_kept_lambda": 250,
                "num_values_explored": 34610,
                "num_values_kept": 2007,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.057255625724792,
            "num_unique_values": 1012,
            "solution": "Sort(Scanl1(lambda u1, u2: IntDivide(Add(3, 4), Subtract(x1, 3)), Map(lambda u1: 1, x2)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 60.10435225248155,
                "explored_percent_lambda": 18.961567828964114,
                "explored_percent_none": 20.93407991855434,
                "kept_percent_concrete": 57.684630738522955,
                "kept_percent_lambda": 42.315369261477045,
                "num_examples": 2,
                "num_explored_concrete": 4723,
                "num_explored_lambda": 1490,
                "num_explored_none": 1645,
                "num_inputs": 2,
                "num_kept_concrete": 578,
                "num_kept_lambda": 424,
                "num_values_explored": 7858,
                "num_values_kept": 1002,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 70.74946499988437,
            "num_unique_values": 1166,
            "solution": "Subtract(Subtract(x1, Add(4, Add(3, Square(Square(3))))), 2)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 36.26385113945223,
                "explored_percent_lambda": 9.711478151787581,
                "explored_percent_none": 54.02467070876019,
                "kept_percent_concrete": 91.78910976663785,
                "kept_percent_lambda": 8.210890233362143,
                "num_examples": 4,
                "num_explored_concrete": 13876,
                "num_explored_lambda": 3716,
                "num_explored_none": 20672,
                "num_inputs": 1,
                "num_kept_concrete": 1062,
                "num_kept_lambda": 95,
                "num_values_explored": 38264,
                "num_values_kept": 1157,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5912797767668962,
            "num_unique_values": 217,
            "solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 29.44606413994169,
                "explored_percent_lambda": 37.02623906705539,
                "explored_percent_none": 33.52769679300292,
                "kept_percent_concrete": 51.690821256038646,
                "kept_percent_lambda": 48.309178743961354,
                "num_examples": 4,
                "num_explored_concrete": 202,
                "num_explored_lambda": 254,
                "num_explored_none": 230,
                "num_inputs": 2,
                "num_kept_concrete": 107,
                "num_kept_lambda": 100,
                "num_values_explored": 686,
                "num_values_kept": 207,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.872784819453955,
            "num_unique_values": 1403,
            "solution": "Subtract(3, Multiply(4, Square(If(IsEven(Sum(x1)), 2, 4))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 83.19390685478837,
                "explored_percent_lambda": 10.737919840179798,
                "explored_percent_none": 6.06817330503184,
                "kept_percent_concrete": 79.98565279770445,
                "kept_percent_lambda": 20.014347202295554,
                "num_examples": 3,
                "num_explored_concrete": 6663,
                "num_explored_lambda": 860,
                "num_explored_none": 486,
                "num_inputs": 1,
                "num_kept_concrete": 1115,
                "num_kept_lambda": 279,
                "num_values_explored": 8009,
                "num_values_kept": 1394,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.490813912823796,
            "num_unique_values": 446,
            "solution": "Reverse(Scanl1(lambda u1, u2: Add(x1, -1), Map(lambda u1: (lambda v1: Subtract(v1, 1))(u1), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 30.810520665593128,
                "explored_percent_lambda": 36.01717659688674,
                "explored_percent_none": 33.17230273752013,
                "kept_percent_concrete": 33.71559633027523,
                "kept_percent_lambda": 66.28440366972477,
                "num_examples": 2,
                "num_explored_concrete": 574,
                "num_explored_lambda": 671,
                "num_explored_none": 618,
                "num_inputs": 2,
                "num_kept_concrete": 147,
                "num_kept_lambda": 289,
                "num_values_explored": 1863,
                "num_values_kept": 436,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0232375785708,
            "num_unique_values": 6547,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.01715917160621,
                "explored_percent_lambda": 8.498065245431226,
                "explored_percent_none": 50.48477558296256,
                "kept_percent_concrete": 94.23371061486694,
                "kept_percent_lambda": 5.766289385133068,
                "num_examples": 4,
                "num_explored_concrete": 113209,
                "num_explored_lambda": 23455,
                "num_explored_none": 139340,
                "num_inputs": 1,
                "num_kept_concrete": 6161,
                "num_kept_lambda": 377,
                "num_values_explored": 276004,
                "num_values_kept": 6538,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 49.50023566931486,
            "num_unique_values": 2418,
            "solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 82.91992343276439,
                "explored_percent_lambda": 10.448237358430372,
                "explored_percent_none": 6.631839208805232,
                "kept_percent_concrete": 75.29069767441861,
                "kept_percent_lambda": 24.709302325581394,
                "num_examples": 2,
                "num_explored_concrete": 20793,
                "num_explored_lambda": 2620,
                "num_explored_none": 1663,
                "num_inputs": 2,
                "num_kept_concrete": 1813,
                "num_kept_lambda": 595,
                "num_values_explored": 25076,
                "num_values_kept": 2408,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 511.9057131167501,
            "num_unique_values": 13057,
            "solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 89.85218033998522,
                "explored_percent_lambda": 2.315348608031535,
                "explored_percent_none": 7.832471051983247,
                "kept_percent_concrete": 95.32459569249636,
                "kept_percent_lambda": 4.675404307503641,
                "num_examples": 5,
                "num_explored_concrete": 182355,
                "num_explored_lambda": 4699,
                "num_explored_none": 15896,
                "num_inputs": 2,
                "num_kept_concrete": 12437,
                "num_kept_lambda": 610,
                "num_values_explored": 202950,
                "num_values_kept": 13047,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.589869387447834,
            "num_unique_values": 542,
            "solution": "Scanl1(lambda u1, u2: Subtract(-1, 2), Map(lambda u1: Subtract(Minimum(x1), 4), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 66.42622950819673,
                "explored_percent_lambda": 28.065573770491802,
                "explored_percent_none": 5.508196721311475,
                "kept_percent_concrete": 57.97373358348968,
                "kept_percent_lambda": 42.02626641651032,
                "num_examples": 3,
                "num_explored_concrete": 1013,
                "num_explored_lambda": 428,
                "num_explored_none": 84,
                "num_inputs": 1,
                "num_kept_concrete": 309,
                "num_kept_lambda": 224,
                "num_values_explored": 1525,
                "num_values_kept": 533,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.111497012898326,
            "num_unique_values": 774,
            "solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 70.03433055419323,
                "explored_percent_lambda": 20.99068170671898,
                "explored_percent_none": 8.974987739087789,
                "kept_percent_concrete": 74.08376963350786,
                "kept_percent_lambda": 25.916230366492147,
                "num_examples": 5,
                "num_explored_concrete": 1428,
                "num_explored_lambda": 428,
                "num_explored_none": 183,
                "num_inputs": 2,
                "num_kept_concrete": 566,
                "num_kept_lambda": 198,
                "num_values_explored": 2039,
                "num_values_kept": 764,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 232.78479645214975,
            "num_unique_values": 7143,
            "solution": "Map(lambda u1: (lambda v1: Min(Min(4, Maximum(x1)), (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 59.684117589352866,
                "explored_percent_lambda": 31.859651417546843,
                "explored_percent_none": 8.456230993100291,
                "kept_percent_concrete": 38.25343425848052,
                "kept_percent_lambda": 61.74656574151948,
                "num_examples": 2,
                "num_explored_concrete": 54756,
                "num_explored_lambda": 29229,
                "num_explored_none": 7758,
                "num_inputs": 1,
                "num_kept_concrete": 2729,
                "num_kept_lambda": 4405,
                "num_values_explored": 91743,
                "num_values_kept": 7134,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.009511288255453,
            "num_unique_values": 247,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u1), x2, x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 27.52043596730245,
                "explored_percent_lambda": 38.69209809264305,
                "explored_percent_none": 33.787465940054496,
                "kept_percent_concrete": 51.69491525423729,
                "kept_percent_lambda": 48.30508474576271,
                "num_examples": 4,
                "num_explored_concrete": 202,
                "num_explored_lambda": 284,
                "num_explored_none": 248,
                "num_inputs": 3,
                "num_kept_concrete": 122,
                "num_kept_lambda": 114,
                "num_values_explored": 734,
                "num_values_kept": 236,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.243144996464252,
            "num_unique_values": 900,
            "solution": "Map(lambda u1: Add(1, Multiply(3, IntDivide(Head(x1), 4))), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 47.61904761904762,
                "explored_percent_lambda": 24.693540782649695,
                "explored_percent_none": 27.68741159830269,
                "kept_percent_concrete": 44.44444444444444,
                "kept_percent_lambda": 55.55555555555556,
                "num_examples": 2,
                "num_explored_concrete": 4040,
                "num_explored_lambda": 2095,
                "num_explored_none": 2349,
                "num_inputs": 1,
                "num_kept_concrete": 396,
                "num_kept_lambda": 495,
                "num_values_explored": 8484,
                "num_values_kept": 891,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0276486538351,
            "num_unique_values": 13710,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 89.64865125523626,
                "explored_percent_lambda": 2.490764463416373,
                "explored_percent_none": 7.860584281347361,
                "kept_percent_concrete": 95.18213008248777,
                "kept_percent_lambda": 4.817869917512227,
                "num_examples": 4,
                "num_explored_concrete": 213795,
                "num_explored_lambda": 5940,
                "num_explored_none": 18746,
                "num_inputs": 3,
                "num_kept_concrete": 13039,
                "num_kept_lambda": 660,
                "num_values_explored": 238481,
                "num_values_kept": 13699,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.251855911687,
            "num_unique_values": 11537,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.12271605055728,
                "explored_percent_lambda": 34.81783109834124,
                "explored_percent_none": 6.059452851101481,
                "kept_percent_concrete": 39.67730742539903,
                "kept_percent_lambda": 60.32269257460097,
                "num_examples": 3,
                "num_explored_concrete": 124286,
                "num_explored_lambda": 73193,
                "num_explored_none": 12738,
                "num_inputs": 1,
                "num_kept_concrete": 4574,
                "num_kept_lambda": 6954,
                "num_values_explored": 210217,
                "num_values_kept": 11528,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3232528567314,
            "num_unique_values": 6807,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.986745047693056,
                "explored_percent_lambda": 8.038935249313978,
                "explored_percent_none": 50.97431970299297,
                "kept_percent_concrete": 93.77758164165931,
                "kept_percent_lambda": 6.222418358340688,
                "num_examples": 4,
                "num_explored_concrete": 109185,
                "num_explored_lambda": 21415,
                "num_explored_none": 135791,
                "num_inputs": 1,
                "num_kept_concrete": 6375,
                "num_kept_lambda": 423,
                "num_values_explored": 266391,
                "num_values_kept": 6798,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 12.741727661341429,
            "num_unique_values": 1236,
            "solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 69.48160535117057,
                "explored_percent_lambda": 22.357859531772576,
                "explored_percent_none": 8.160535117056856,
                "kept_percent_concrete": 50.8557457212714,
                "kept_percent_lambda": 49.1442542787286,
                "num_examples": 2,
                "num_explored_concrete": 4155,
                "num_explored_lambda": 1337,
                "num_explored_none": 488,
                "num_inputs": 1,
                "num_kept_concrete": 624,
                "num_kept_lambda": 603,
                "num_values_explored": 5980,
                "num_values_kept": 1227,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 10.79242593050003,
            "num_unique_values": 1165,
            "solution": "Map(lambda u1: Square(Subtract(Count(lambda u1: IsEven(Last(x1)), x2), Sum(x2))), x3)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 75.43704750132439,
                "explored_percent_lambda": 15.256930955324034,
                "explored_percent_none": 9.30602154335158,
                "kept_percent_concrete": 71.31715771230503,
                "kept_percent_lambda": 28.682842287694974,
                "num_examples": 5,
                "num_explored_concrete": 4272,
                "num_explored_lambda": 864,
                "num_explored_none": 527,
                "num_inputs": 3,
                "num_kept_concrete": 823,
                "num_kept_lambda": 331,
                "num_values_explored": 5663,
                "num_values_kept": 1154,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.645800052210689,
            "num_unique_values": 510,
            "solution": "Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), Take(3, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 49.90224828934506,
                "explored_percent_lambda": 33.62658846529814,
                "explored_percent_none": 16.471163245356795,
                "kept_percent_concrete": 43.6,
                "kept_percent_lambda": 56.4,
                "num_examples": 2,
                "num_explored_concrete": 1021,
                "num_explored_lambda": 688,
                "num_explored_none": 337,
                "num_inputs": 2,
                "num_kept_concrete": 218,
                "num_kept_lambda": 282,
                "num_values_explored": 2046,
                "num_values_kept": 500,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 60.057053841650486,
            "num_unique_values": 1834,
            "solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square(v1))(v1)))(u1), Map(lambda u1: (lambda v1: Square(v1))(u1), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 54.42899251757237,
                "explored_percent_lambda": 21.717935152293855,
                "explored_percent_none": 23.853072330133777,
                "kept_percent_concrete": 55.45205479452055,
                "kept_percent_lambda": 44.54794520547945,
                "num_examples": 3,
                "num_explored_concrete": 14403,
                "num_explored_lambda": 5747,
                "num_explored_none": 6312,
                "num_inputs": 1,
                "num_kept_concrete": 1012,
                "num_kept_lambda": 813,
                "num_values_explored": 26462,
                "num_values_kept": 1825,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0501325707883,
            "num_unique_values": 17997,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 92.73304824790617,
                "explored_percent_lambda": 2.186311355094955,
                "explored_percent_none": 5.080640396998877,
                "kept_percent_concrete": 94.54019793172468,
                "kept_percent_lambda": 5.459802068275326,
                "num_examples": 5,
                "num_explored_concrete": 204060,
                "num_explored_lambda": 4811,
                "num_explored_none": 11180,
                "num_inputs": 3,
                "num_kept_concrete": 17004,
                "num_kept_lambda": 982,
                "num_values_explored": 220051,
                "num_values_kept": 17986,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 25.61478336714208,
            "num_unique_values": 1620,
            "solution": "Scanl1(lambda u1, u2: Min(-1, IntDivide(x1, Head(x3))), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 74.37118090095211,
                "explored_percent_lambda": 7.993463123490123,
                "explored_percent_none": 17.635355975557765,
                "kept_percent_concrete": 77.06650093225606,
                "kept_percent_lambda": 22.93349906774394,
                "num_examples": 4,
                "num_explored_concrete": 10467,
                "num_explored_lambda": 1125,
                "num_explored_none": 2482,
                "num_inputs": 3,
                "num_kept_concrete": 1240,
                "num_kept_lambda": 369,
                "num_values_explored": 14074,
                "num_values_kept": 1609,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.316449524834752,
            "num_unique_values": 1134,
            "solution": "Take(-1, Scanl1(lambda u1, u2: 0, Map(lambda u1: Subtract(4, Access(1, x1)), x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 66.07767347690043,
                "explored_percent_lambda": 26.320633167679,
                "explored_percent_none": 7.601693355420578,
                "kept_percent_concrete": 52.266666666666666,
                "kept_percent_lambda": 47.733333333333334,
                "num_examples": 2,
                "num_explored_concrete": 3590,
                "num_explored_lambda": 1430,
                "num_explored_none": 413,
                "num_inputs": 1,
                "num_kept_concrete": 588,
                "num_kept_lambda": 537,
                "num_values_explored": 5433,
                "num_values_kept": 1125,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 25.42539556324482,
            "num_unique_values": 2142,
            "solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 90.56718845293759,
                "explored_percent_lambda": 6.586704614759097,
                "explored_percent_none": 2.8461069323033135,
                "kept_percent_concrete": 89.07129455909944,
                "kept_percent_lambda": 10.928705440900563,
                "num_examples": 3,
                "num_explored_concrete": 13365,
                "num_explored_lambda": 972,
                "num_explored_none": 420,
                "num_inputs": 2,
                "num_kept_concrete": 1899,
                "num_kept_lambda": 233,
                "num_values_explored": 14757,
                "num_values_kept": 2132,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 223.86656998842955,
            "num_unique_values": 3775,
            "solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 38.573017507723996,
                "explored_percent_lambda": 5.2111225540679715,
                "explored_percent_none": 56.215859938208034,
                "kept_percent_concrete": 97.37051792828686,
                "kept_percent_lambda": 2.6294820717131473,
                "num_examples": 4,
                "num_explored_concrete": 46818,
                "num_explored_lambda": 6325,
                "num_explored_none": 68232,
                "num_inputs": 2,
                "num_kept_concrete": 3666,
                "num_kept_lambda": 99,
                "num_values_explored": 121375,
                "num_values_kept": 3765,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.075401019305,
            "num_unique_values": 14762,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 92.60863349283906,
                "explored_percent_lambda": 2.99346559133455,
                "explored_percent_none": 4.397900915826388,
                "kept_percent_concrete": 94.04188978512845,
                "kept_percent_lambda": 5.958110214871551,
                "num_examples": 5,
                "num_explored_concrete": 220240,
                "num_explored_lambda": 7119,
                "num_explored_none": 10459,
                "num_inputs": 1,
                "num_kept_concrete": 13874,
                "num_kept_lambda": 879,
                "num_values_explored": 237818,
                "num_values_kept": 14753,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.2702539153397,
            "num_unique_values": 10679,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 87.00813160108422,
                "explored_percent_lambda": 1.8247571663778785,
                "explored_percent_none": 11.167111232537907,
                "kept_percent_concrete": 96.19458243509233,
                "kept_percent_lambda": 3.8054175649076765,
                "num_examples": 4,
                "num_explored_concrete": 242034,
                "num_explored_lambda": 5076,
                "num_explored_none": 31064,
                "num_inputs": 2,
                "num_kept_concrete": 10263,
                "num_kept_lambda": 406,
                "num_values_explored": 278174,
                "num_values_kept": 10669,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.2106328681111,
            "num_unique_values": 7064,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.3781429139931,
                "explored_percent_lambda": 7.239760965871531,
                "explored_percent_none": 53.38209612013537,
                "kept_percent_concrete": 97.34939759036145,
                "kept_percent_lambda": 2.6506024096385543,
                "num_examples": 3,
                "num_explored_concrete": 119732,
                "num_explored_lambda": 22013,
                "num_explored_none": 162312,
                "num_inputs": 1,
                "num_kept_concrete": 6868,
                "num_kept_lambda": 187,
                "num_values_explored": 304057,
                "num_values_kept": 7055,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6331406086683273,
            "num_unique_values": 475,
            "solution": "Map(lambda u1: Add(2, Square(Add(3, 4))), Drop(3, Take(4, x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 48.6594409583571,
                "explored_percent_lambda": 25.955504848830575,
                "explored_percent_none": 25.385054192812323,
                "kept_percent_concrete": 58.064516129032256,
                "kept_percent_lambda": 41.935483870967744,
                "num_examples": 3,
                "num_explored_concrete": 853,
                "num_explored_lambda": 455,
                "num_explored_none": 445,
                "num_inputs": 2,
                "num_kept_concrete": 270,
                "num_kept_lambda": 195,
                "num_values_explored": 1753,
                "num_values_kept": 465,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0185787323862,
            "num_unique_values": 11897,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.26322653566926,
                "explored_percent_lambda": 29.608311959309656,
                "explored_percent_none": 5.128461505021084,
                "kept_percent_concrete": 39.11507402422611,
                "kept_percent_lambda": 60.88492597577389,
                "num_examples": 5,
                "num_explored_concrete": 150125,
                "num_explored_lambda": 68108,
                "num_explored_none": 11797,
                "num_inputs": 1,
                "num_kept_concrete": 4650,
                "num_kept_lambda": 7238,
                "num_values_explored": 230030,
                "num_values_kept": 11888,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 186.8768329527229,
            "num_unique_values": 5917,
            "solution": "Multiply(3, IntDivide(Max(-1, Max(Sum(x1), Last(x1))), 3))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 84.26403674917815,
                "explored_percent_lambda": 3.501839635991553,
                "explored_percent_none": 12.234123614830295,
                "kept_percent_concrete": 90.30128639133379,
                "kept_percent_lambda": 9.698713608666216,
                "num_examples": 5,
                "num_explored_concrete": 77410,
                "num_explored_lambda": 3217,
                "num_explored_none": 11239,
                "num_inputs": 1,
                "num_kept_concrete": 5335,
                "num_kept_lambda": 573,
                "num_values_explored": 91866,
                "num_values_kept": 5908,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.1241237316281,
            "num_unique_values": 6091,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.57612111219572,
                "explored_percent_lambda": 5.562013431615692,
                "explored_percent_none": 18.861865456188582,
                "kept_percent_concrete": 90.38145346925353,
                "kept_percent_lambda": 9.618546530746466,
                "num_examples": 2,
                "num_explored_concrete": 219105,
                "num_explored_lambda": 16125,
                "num_explored_none": 54683,
                "num_inputs": 1,
                "num_kept_concrete": 5497,
                "num_kept_lambda": 585,
                "num_values_explored": 289913,
                "num_values_kept": 6082,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 10.072531001642346,
            "num_unique_values": 1023,
            "solution": "Scanl1(lambda u1, u2: Add(3, Max(Head(x1), Square(4))), Take(2, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 57.15491768678768,
                "explored_percent_lambda": 23.91304347826087,
                "explored_percent_none": 18.932038834951456,
                "kept_percent_concrete": 62.1301775147929,
                "kept_percent_lambda": 37.8698224852071,
                "num_examples": 4,
                "num_explored_concrete": 2708,
                "num_explored_lambda": 1133,
                "num_explored_none": 897,
                "num_inputs": 1,
                "num_kept_concrete": 630,
                "num_kept_lambda": 384,
                "num_values_explored": 4738,
                "num_values_kept": 1014,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0317449308932,
            "num_unique_values": 6541,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.98489934895158,
                "explored_percent_lambda": 22.549986228589447,
                "explored_percent_none": 20.465114422458974,
                "kept_percent_concrete": 42.48315982853644,
                "kept_percent_lambda": 57.51684017146356,
                "num_examples": 2,
                "num_explored_concrete": 142758,
                "num_explored_lambda": 56492,
                "num_explored_none": 51269,
                "num_inputs": 1,
                "num_kept_concrete": 2775,
                "num_kept_lambda": 3757,
                "num_values_explored": 250519,
                "num_values_kept": 6532,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.123591350391507,
            "num_unique_values": 666,
            "solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 45.87942477876106,
                "explored_percent_lambda": 31.913716814159294,
                "explored_percent_none": 22.206858407079647,
                "kept_percent_concrete": 34.398782343987826,
                "kept_percent_lambda": 65.60121765601218,
                "num_examples": 2,
                "num_explored_concrete": 1659,
                "num_explored_lambda": 1154,
                "num_explored_none": 803,
                "num_inputs": 1,
                "num_kept_concrete": 226,
                "num_kept_lambda": 431,
                "num_values_explored": 3616,
                "num_values_kept": 657,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.02535219118,
            "num_unique_values": 5618,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.062769239040584,
                "explored_percent_lambda": 9.218475930617814,
                "explored_percent_none": 50.7187548303416,
                "kept_percent_concrete": 90.67569976822963,
                "kept_percent_lambda": 9.32430023177037,
                "num_examples": 2,
                "num_explored_concrete": 119226,
                "num_explored_lambda": 27434,
                "num_explored_none": 150938,
                "num_inputs": 1,
                "num_kept_concrete": 5086,
                "num_kept_lambda": 523,
                "num_values_explored": 297598,
                "num_values_kept": 5609,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.1168506331742,
            "num_unique_values": 5208,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.18484867214702,
                "explored_percent_lambda": 10.066203789548867,
                "explored_percent_none": 45.74894753830411,
                "kept_percent_concrete": 91.74841315637623,
                "kept_percent_lambda": 8.251586843623773,
                "num_examples": 2,
                "num_explored_concrete": 128676,
                "num_explored_lambda": 29315,
                "num_explored_none": 133231,
                "num_inputs": 1,
                "num_kept_concrete": 4770,
                "num_kept_lambda": 429,
                "num_values_explored": 291222,
                "num_values_kept": 5199,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 12.742814721539617,
            "num_unique_values": 361,
            "solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 23.902517753389283,
                "explored_percent_lambda": 23.06326662362815,
                "explored_percent_none": 53.03421562298257,
                "kept_percent_concrete": 61.25356125356125,
                "kept_percent_lambda": 38.74643874643875,
                "num_examples": 2,
                "num_explored_concrete": 1481,
                "num_explored_lambda": 1429,
                "num_explored_none": 3286,
                "num_inputs": 2,
                "num_kept_concrete": 215,
                "num_kept_lambda": 136,
                "num_values_explored": 6196,
                "num_values_kept": 351,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0116845443845,
            "num_unique_values": 4889,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.632131628158675,
                "explored_percent_lambda": 11.209217259071012,
                "explored_percent_none": 47.158651112770315,
                "kept_percent_concrete": 86.12420577987292,
                "kept_percent_lambda": 13.875794220127075,
                "num_examples": 2,
                "num_explored_concrete": 121555,
                "num_explored_lambda": 32728,
                "num_explored_none": 137691,
                "num_inputs": 2,
                "num_kept_concrete": 4202,
                "num_kept_lambda": 677,
                "num_values_explored": 291974,
                "num_values_kept": 4879,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.1034895833582,
            "num_unique_values": 4440,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.37395992993212,
                "explored_percent_lambda": 10.82767681191154,
                "explored_percent_none": 46.798363258156336,
                "kept_percent_concrete": 89.0744920993228,
                "kept_percent_lambda": 10.925507900677202,
                "num_examples": 2,
                "num_explored_concrete": 123854,
                "num_explored_lambda": 31648,
                "num_explored_none": 136786,
                "num_inputs": 2,
                "num_kept_concrete": 3946,
                "num_kept_lambda": 484,
                "num_values_explored": 292288,
                "num_values_kept": 4430,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0930401850492,
            "num_unique_values": 4455,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.98534941625253,
                "explored_percent_lambda": 9.853562099384831,
                "explored_percent_none": 47.16108848436264,
                "kept_percent_concrete": 87.1541057367829,
                "kept_percent_lambda": 12.845894263217097,
                "num_examples": 2,
                "num_explored_concrete": 126545,
                "num_explored_lambda": 29008,
                "num_explored_none": 138838,
                "num_inputs": 2,
                "num_kept_concrete": 3874,
                "num_kept_lambda": 571,
                "num_values_explored": 294391,
                "num_values_kept": 4445,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.0955410208553,
            "num_unique_values": 6466,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.11112468329741,
                "explored_percent_lambda": 24.07451918340971,
                "explored_percent_none": 21.81435613329288,
                "kept_percent_concrete": 43.62707139538485,
                "kept_percent_lambda": 56.37292860461515,
                "num_examples": 2,
                "num_explored_concrete": 137327,
                "num_explored_lambda": 61098,
                "num_explored_none": 55362,
                "num_inputs": 1,
                "num_kept_concrete": 2817,
                "num_kept_lambda": 3640,
                "num_values_explored": 253787,
                "num_values_kept": 6457,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 94.65331682935357,
            "num_unique_values": 1509,
            "solution": "Add(3, Max(Add(x1, x1), Multiply(Square(4), Add(3, 4))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 38.11277597937545,
                "explored_percent_lambda": 10.986838279478183,
                "explored_percent_none": 50.900385741146366,
                "kept_percent_concrete": 91.33333333333333,
                "kept_percent_lambda": 8.666666666666666,
                "num_examples": 3,
                "num_explored_concrete": 19662,
                "num_explored_lambda": 5668,
                "num_explored_none": 26259,
                "num_inputs": 1,
                "num_kept_concrete": 1370,
                "num_kept_lambda": 130,
                "num_values_explored": 51589,
                "num_values_kept": 1500,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.82
}