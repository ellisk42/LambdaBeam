{
    "num_tasks": 100,
    "num_tasks_solved": 86,
    "results": [
        {
            "elapsed_time": 1.956218309700489,
            "num_unique_values": 219,
            "solution": "Map(lambda u1: 1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 19.62750716332378,
                "explored_percent_lambda": 56.01719197707737,
                "explored_percent_none": 24.355300859598852,
                "kept_percent_concrete": 30.0,
                "kept_percent_lambda": 70.0,
                "num_examples": 2,
                "num_explored_concrete": 137,
                "num_explored_lambda": 391,
                "num_explored_none": 170,
                "num_inputs": 1,
                "num_kept_concrete": 63,
                "num_kept_lambda": 147,
                "num_values_explored": 698,
                "num_values_kept": 210,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 698
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8436811938881874,
            "num_unique_values": 253,
            "solution": "Scanl1(lambda u1, u2: x2, ZipWith(lambda u1, u2: (lambda v1: Max(1, v1))(u2), x1, x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 37.27959697732997,
                "explored_percent_lambda": 33.249370277078086,
                "explored_percent_none": 29.47103274559194,
                "kept_percent_concrete": 69.1358024691358,
                "kept_percent_lambda": 30.864197530864196,
                "num_examples": 3,
                "num_explored_concrete": 296,
                "num_explored_lambda": 264,
                "num_explored_none": 234,
                "num_inputs": 2,
                "num_kept_concrete": 168,
                "num_kept_lambda": 75,
                "num_values_explored": 794,
                "num_values_kept": 243,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 794
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9841727167367935,
            "num_unique_values": 163,
            "solution": "Access(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 13.61111111111111,
                "explored_percent_lambda": 65.27777777777777,
                "explored_percent_none": 21.11111111111111,
                "kept_percent_concrete": 27.272727272727273,
                "kept_percent_lambda": 72.72727272727273,
                "num_examples": 5,
                "num_explored_concrete": 49,
                "num_explored_lambda": 235,
                "num_explored_none": 76,
                "num_inputs": 1,
                "num_kept_concrete": 42,
                "num_kept_lambda": 112,
                "num_values_explored": 360,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 360
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0229144282639027,
            "num_unique_values": 155,
            "solution": "Drop(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 12.605042016806722,
                "explored_percent_lambda": 68.34733893557423,
                "explored_percent_none": 19.047619047619047,
                "kept_percent_concrete": 21.91780821917808,
                "kept_percent_lambda": 78.08219178082192,
                "num_examples": 5,
                "num_explored_concrete": 45,
                "num_explored_lambda": 244,
                "num_explored_none": 68,
                "num_inputs": 1,
                "num_kept_concrete": 32,
                "num_kept_lambda": 114,
                "num_values_explored": 357,
                "num_values_kept": 146,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 357
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8545985035598278,
            "num_unique_values": 143,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 30.158730158730158,
                "explored_percent_lambda": 36.77248677248677,
                "explored_percent_none": 33.06878306878307,
                "kept_percent_concrete": 50.37593984962406,
                "kept_percent_lambda": 49.62406015037594,
                "num_examples": 4,
                "num_explored_concrete": 114,
                "num_explored_lambda": 139,
                "num_explored_none": 125,
                "num_inputs": 2,
                "num_kept_concrete": 67,
                "num_kept_lambda": 66,
                "num_values_explored": 378,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 378
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9990214258432388,
            "num_unique_values": 153,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 9.116809116809117,
                "explored_percent_lambda": 71.22507122507122,
                "explored_percent_none": 19.65811965811966,
                "kept_percent_concrete": 16.783216783216783,
                "kept_percent_lambda": 83.21678321678321,
                "num_examples": 4,
                "num_explored_concrete": 32,
                "num_explored_lambda": 250,
                "num_explored_none": 69,
                "num_inputs": 2,
                "num_kept_concrete": 24,
                "num_kept_lambda": 119,
                "num_values_explored": 351,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 351
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0179460849612951,
            "num_unique_values": 151,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 10.335195530726256,
                "explored_percent_lambda": 74.86033519553072,
                "explored_percent_none": 14.804469273743017,
                "kept_percent_concrete": 14.788732394366198,
                "kept_percent_lambda": 85.21126760563381,
                "num_examples": 2,
                "num_explored_concrete": 37,
                "num_explored_lambda": 268,
                "num_explored_none": 53,
                "num_inputs": 1,
                "num_kept_concrete": 21,
                "num_kept_lambda": 121,
                "num_values_explored": 358,
                "num_values_kept": 142,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 358
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0561555214226246,
            "num_unique_values": 153,
            "solution": "Drop(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 10.743801652892563,
                "explored_percent_lambda": 69.14600550964187,
                "explored_percent_none": 20.110192837465565,
                "kept_percent_concrete": 14.583333333333334,
                "kept_percent_lambda": 85.41666666666667,
                "num_examples": 2,
                "num_explored_concrete": 39,
                "num_explored_lambda": 251,
                "num_explored_none": 73,
                "num_inputs": 1,
                "num_kept_concrete": 21,
                "num_kept_lambda": 123,
                "num_values_explored": 363,
                "num_values_kept": 144,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 363
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9430373925715685,
            "num_unique_values": 257,
            "solution": "Scanl1(lambda u1, u2: 3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 22.585227272727273,
                "explored_percent_lambda": 50.56818181818182,
                "explored_percent_none": 26.84659090909091,
                "kept_percent_concrete": 31.451612903225808,
                "kept_percent_lambda": 68.54838709677419,
                "num_examples": 4,
                "num_explored_concrete": 159,
                "num_explored_lambda": 356,
                "num_explored_none": 189,
                "num_inputs": 1,
                "num_kept_concrete": 78,
                "num_kept_lambda": 170,
                "num_values_explored": 704,
                "num_values_kept": 248,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 704
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9245565515011549,
            "num_unique_values": 165,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 33.16831683168317,
                "explored_percent_lambda": 38.366336633663366,
                "explored_percent_none": 28.465346534653467,
                "kept_percent_concrete": 53.54838709677419,
                "kept_percent_lambda": 46.45161290322581,
                "num_examples": 5,
                "num_explored_concrete": 134,
                "num_explored_lambda": 155,
                "num_explored_none": 115,
                "num_inputs": 2,
                "num_kept_concrete": 83,
                "num_kept_lambda": 72,
                "num_values_explored": 404,
                "num_values_kept": 155,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 404
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.7239307556301355,
            "num_unique_values": 374,
            "solution": "Head(Map(lambda u1: (lambda v1: IntDivide(v1, x1))(u1), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 53.477935676888556,
                "explored_percent_lambda": 16.30516080777861,
                "explored_percent_none": 30.216903515332834,
                "kept_percent_concrete": 73.07692307692308,
                "kept_percent_lambda": 26.923076923076923,
                "num_examples": 4,
                "num_explored_concrete": 715,
                "num_explored_lambda": 218,
                "num_explored_none": 404,
                "num_inputs": 2,
                "num_kept_concrete": 266,
                "num_kept_lambda": 98,
                "num_values_explored": 1337,
                "num_values_kept": 364,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1337
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20201562717556953,
            "num_unique_values": 70,
            "solution": "Max(x1, Square(4))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 100.0,
                "explored_percent_lambda": 0.0,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 100.0,
                "kept_percent_lambda": 0.0,
                "num_examples": 2,
                "num_explored_concrete": 97,
                "num_explored_lambda": 0,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 61,
                "num_kept_lambda": 0,
                "num_values_explored": 97,
                "num_values_kept": 61,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 97
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9095291998237371,
            "num_unique_values": 291,
            "solution": "Multiply(4, Minimum(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 27.932960893854748,
                "explored_percent_lambda": 50.83798882681564,
                "explored_percent_none": 21.22905027932961,
                "kept_percent_concrete": 52.4822695035461,
                "kept_percent_lambda": 47.5177304964539,
                "num_examples": 4,
                "num_explored_concrete": 200,
                "num_explored_lambda": 364,
                "num_explored_none": 152,
                "num_inputs": 1,
                "num_kept_concrete": 148,
                "num_kept_lambda": 134,
                "num_values_explored": 716,
                "num_values_kept": 282,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 716
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.564955275505781,
            "num_unique_values": 269,
            "solution": "Multiply(4, Count(lambda u1: (lambda v1: Less(v1, 1))(u1), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 45.1381780962129,
                "explored_percent_lambda": 37.768679631525075,
                "explored_percent_none": 17.09314227226203,
                "kept_percent_concrete": 49.61538461538461,
                "kept_percent_lambda": 50.38461538461539,
                "num_examples": 2,
                "num_explored_concrete": 441,
                "num_explored_lambda": 369,
                "num_explored_none": 167,
                "num_inputs": 1,
                "num_kept_concrete": 129,
                "num_kept_lambda": 131,
                "num_values_explored": 977,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 977
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4536174964159727,
            "num_unique_values": 265,
            "solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 38.74045801526717,
                "explored_percent_lambda": 43.70229007633588,
                "explored_percent_none": 17.557251908396946,
                "kept_percent_concrete": 53.72549019607843,
                "kept_percent_lambda": 46.27450980392157,
                "num_examples": 5,
                "num_explored_concrete": 203,
                "num_explored_lambda": 229,
                "num_explored_none": 92,
                "num_inputs": 2,
                "num_kept_concrete": 137,
                "num_kept_lambda": 118,
                "num_values_explored": 524,
                "num_values_kept": 255,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 524
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.854131333529949,
            "num_unique_values": 465,
            "solution": "Sum(Map(lambda u1: (lambda v1: Subtract(1, v1))(u1), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 37.869137232194554,
                "explored_percent_lambda": 29.24145917776491,
                "explored_percent_none": 32.88940359004053,
                "kept_percent_concrete": 48.68421052631579,
                "kept_percent_lambda": 51.31578947368421,
                "num_examples": 3,
                "num_explored_concrete": 654,
                "num_explored_lambda": 505,
                "num_explored_none": 568,
                "num_inputs": 1,
                "num_kept_concrete": 222,
                "num_kept_lambda": 234,
                "num_values_explored": 1727,
                "num_values_kept": 456,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1727
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9354978129267693,
            "num_unique_values": 260,
            "solution": "Scanl1(lambda u1, u2: Sum(Take(3, x2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 30.392156862745097,
                "explored_percent_lambda": 46.63865546218487,
                "explored_percent_none": 22.969187675070028,
                "kept_percent_concrete": 49.2,
                "kept_percent_lambda": 50.8,
                "num_examples": 2,
                "num_explored_concrete": 217,
                "num_explored_lambda": 333,
                "num_explored_none": 164,
                "num_inputs": 2,
                "num_kept_concrete": 123,
                "num_kept_lambda": 127,
                "num_values_explored": 714,
                "num_values_kept": 250,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 714
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.841232307255268,
            "num_unique_values": 248,
            "solution": "ZipWith(lambda u1, u2: (lambda v1, v2: Min(v1, v2))(u1, u2), Sort(x1), Drop(1, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 23.773006134969325,
                "explored_percent_lambda": 45.39877300613497,
                "explored_percent_none": 30.828220858895705,
                "kept_percent_concrete": 26.778242677824267,
                "kept_percent_lambda": 73.22175732217573,
                "num_examples": 3,
                "num_explored_concrete": 155,
                "num_explored_lambda": 296,
                "num_explored_none": 201,
                "num_inputs": 1,
                "num_kept_concrete": 64,
                "num_kept_lambda": 175,
                "num_values_explored": 652,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 652
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.3647714406251907,
            "num_unique_values": 196,
            "solution": "Sum(Reverse(Drop(x1, Take(4, x2))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 29.291338582677167,
                "explored_percent_lambda": 32.91338582677165,
                "explored_percent_none": 37.79527559055118,
                "kept_percent_concrete": 60.215053763440864,
                "kept_percent_lambda": 39.784946236559136,
                "num_examples": 3,
                "num_explored_concrete": 186,
                "num_explored_lambda": 209,
                "num_explored_none": 240,
                "num_inputs": 2,
                "num_kept_concrete": 112,
                "num_kept_lambda": 74,
                "num_values_explored": 635,
                "num_values_kept": 186,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 635
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8702038116753101,
            "num_unique_values": 203,
            "solution": "Map(lambda u1: Head(x2), Drop(2, x2))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 22.87166454891995,
                "explored_percent_lambda": 56.16264294790343,
                "explored_percent_none": 20.96569250317662,
                "kept_percent_concrete": 27.46113989637306,
                "kept_percent_lambda": 72.53886010362694,
                "num_examples": 2,
                "num_explored_concrete": 180,
                "num_explored_lambda": 442,
                "num_explored_none": 165,
                "num_inputs": 2,
                "num_kept_concrete": 53,
                "num_kept_lambda": 140,
                "num_values_explored": 787,
                "num_values_kept": 193,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 787
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.172748265787959,
            "num_unique_values": 251,
            "solution": "Scanl1(lambda u1, u2: Head(x2), ZipWith(lambda u1, u2: Last(x2), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 28.418549346016647,
                "explored_percent_lambda": 39.357907253269914,
                "explored_percent_none": 32.22354340071344,
                "kept_percent_concrete": 40.66390041493776,
                "kept_percent_lambda": 59.33609958506224,
                "num_examples": 3,
                "num_explored_concrete": 239,
                "num_explored_lambda": 331,
                "num_explored_none": 271,
                "num_inputs": 2,
                "num_kept_concrete": 98,
                "num_kept_lambda": 143,
                "num_values_explored": 841,
                "num_values_kept": 241,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 841
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5716155394911766,
            "num_unique_values": 311,
            "solution": "IntDivide(Sum(x1), Head(x2))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 39.93115318416523,
                "explored_percent_lambda": 42.3407917383821,
                "explored_percent_none": 17.72805507745267,
                "kept_percent_concrete": 55.81395348837209,
                "kept_percent_lambda": 44.18604651162791,
                "num_examples": 4,
                "num_explored_concrete": 232,
                "num_explored_lambda": 246,
                "num_explored_none": 103,
                "num_inputs": 2,
                "num_kept_concrete": 168,
                "num_kept_lambda": 133,
                "num_values_explored": 581,
                "num_values_kept": 301,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 581
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.198319248855114,
            "num_unique_values": 1150,
            "solution": "Access(Access(4, x1), Map(lambda u1: (lambda v1: IntDivide(Multiply(3, 4), v1))(u1), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 78.47634650829409,
                "explored_percent_lambda": 13.946344460372721,
                "explored_percent_none": 7.577309031333197,
                "kept_percent_concrete": 75.28483786152498,
                "kept_percent_lambda": 24.715162138475023,
                "num_examples": 5,
                "num_explored_concrete": 3832,
                "num_explored_lambda": 681,
                "num_explored_none": 370,
                "num_inputs": 1,
                "num_kept_concrete": 859,
                "num_kept_lambda": 282,
                "num_values_explored": 4883,
                "num_values_kept": 1141,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4883
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.6391035430133343,
            "num_unique_values": 546,
            "solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), Reverse(Scanl1(lambda u1, u2: Head(x2), x1)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 57.42379547689282,
                "explored_percent_lambda": 33.92330383480826,
                "explored_percent_none": 8.652900688298919,
                "kept_percent_concrete": 65.48507462686567,
                "kept_percent_lambda": 34.514925373134325,
                "num_examples": 5,
                "num_explored_concrete": 584,
                "num_explored_lambda": 345,
                "num_explored_none": 88,
                "num_inputs": 2,
                "num_kept_concrete": 351,
                "num_kept_lambda": 185,
                "num_values_explored": 1017,
                "num_values_kept": 536,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1017
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9483423978090286,
            "num_unique_values": 250,
            "solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 27.385377942998762,
                "explored_percent_lambda": 43.12267657992565,
                "explored_percent_none": 29.49194547707559,
                "kept_percent_concrete": 49.166666666666664,
                "kept_percent_lambda": 50.833333333333336,
                "num_examples": 2,
                "num_explored_concrete": 221,
                "num_explored_lambda": 348,
                "num_explored_none": 238,
                "num_inputs": 2,
                "num_kept_concrete": 118,
                "num_kept_lambda": 122,
                "num_values_explored": 807,
                "num_values_kept": 240,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 807
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0937374476343393,
            "num_unique_values": 154,
            "solution": "Drop(IntDivide(1, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 36.96098562628337,
                "explored_percent_lambda": 33.26488706365503,
                "explored_percent_none": 29.7741273100616,
                "kept_percent_concrete": 51.74825174825175,
                "kept_percent_lambda": 48.25174825174825,
                "num_examples": 2,
                "num_explored_concrete": 180,
                "num_explored_lambda": 162,
                "num_explored_none": 145,
                "num_inputs": 3,
                "num_kept_concrete": 74,
                "num_kept_lambda": 69,
                "num_values_explored": 487,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 487
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 36.69499563984573,
            "num_unique_values": 1075,
            "solution": "Multiply(-1, Head(ZipWith(lambda u1, u2: (lambda v1: Subtract(Last(x1), v1))(u2), x2, Reverse(x2))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 71.1071107110711,
                "explored_percent_lambda": 15.541554155415541,
                "explored_percent_none": 13.351335133513352,
                "kept_percent_concrete": 78.68544600938966,
                "kept_percent_lambda": 21.314553990610328,
                "num_examples": 5,
                "num_explored_concrete": 2370,
                "num_explored_lambda": 518,
                "num_explored_none": 445,
                "num_inputs": 2,
                "num_kept_concrete": 838,
                "num_kept_lambda": 227,
                "num_values_explored": 3333,
                "num_values_kept": 1065,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 18920
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 33.68987597897649,
            "num_unique_values": 133,
            "solution": "Add(4, IntDivide(Subtract(2, x1), 4))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 23.623623623623622,
                "explored_percent_lambda": 13.863863863863864,
                "explored_percent_none": 62.512512512512515,
                "kept_percent_concrete": 82.25806451612904,
                "kept_percent_lambda": 17.741935483870968,
                "num_examples": 5,
                "num_explored_concrete": 472,
                "num_explored_lambda": 277,
                "num_explored_none": 1249,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 22,
                "num_values_explored": 1998,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 19404
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6119481343775988,
            "num_unique_values": 227,
            "solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 20.0,
                "explored_percent_lambda": 58.25396825396825,
                "explored_percent_none": 21.746031746031747,
                "kept_percent_concrete": 39.44954128440367,
                "kept_percent_lambda": 60.55045871559633,
                "num_examples": 3,
                "num_explored_concrete": 126,
                "num_explored_lambda": 367,
                "num_explored_none": 137,
                "num_inputs": 1,
                "num_kept_concrete": 86,
                "num_kept_lambda": 132,
                "num_values_explored": 630,
                "num_values_kept": 218,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 630
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 34.2039781473577,
            "num_unique_values": 829,
            "solution": "Add(x1, Subtract(Last(x2), Add(x1, Square(x1))))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 77.59060745278204,
                "explored_percent_lambda": 13.782542113323125,
                "explored_percent_none": 8.626850433894845,
                "kept_percent_concrete": 83.3943833943834,
                "kept_percent_lambda": 16.605616605616607,
                "num_examples": 5,
                "num_explored_concrete": 1520,
                "num_explored_lambda": 270,
                "num_explored_none": 169,
                "num_inputs": 2,
                "num_kept_concrete": 683,
                "num_kept_lambda": 136,
                "num_values_explored": 1959,
                "num_values_kept": 819,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 17361
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.0414908938109875,
            "num_unique_values": 537,
            "solution": "Scanl1(lambda u1, u2: Multiply(-1, Last(x1)), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 54.629629629629626,
                "explored_percent_lambda": 33.56481481481482,
                "explored_percent_none": 11.805555555555555,
                "kept_percent_concrete": 65.27514231499052,
                "kept_percent_lambda": 34.72485768500949,
                "num_examples": 3,
                "num_explored_concrete": 708,
                "num_explored_lambda": 435,
                "num_explored_none": 153,
                "num_inputs": 2,
                "num_kept_concrete": 344,
                "num_kept_lambda": 183,
                "num_values_explored": 1296,
                "num_values_kept": 527,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1296
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.556735198944807,
            "num_unique_values": 140,
            "solution": "Multiply(Square(x1), Min(Square(x1), Add(3, 4)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 21.504290762241293,
                "explored_percent_lambda": 12.317011610297829,
                "explored_percent_none": 66.17869762746088,
                "kept_percent_concrete": 82.44274809160305,
                "kept_percent_lambda": 17.557251908396946,
                "num_examples": 2,
                "num_explored_concrete": 426,
                "num_explored_lambda": 244,
                "num_explored_none": 1311,
                "num_inputs": 1,
                "num_kept_concrete": 108,
                "num_kept_lambda": 23,
                "num_values_explored": 1981,
                "num_values_kept": 131,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1981
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 32.13533736765385,
            "num_unique_values": 251,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Min(1, (lambda v1: Subtract(v1, x2))(v1)))(u2), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 31.74404015056462,
                "explored_percent_lambda": 42.03262233375157,
                "explored_percent_none": 26.223337515683813,
                "kept_percent_concrete": 51.45228215767635,
                "kept_percent_lambda": 48.54771784232365,
                "num_examples": 5,
                "num_explored_concrete": 253,
                "num_explored_lambda": 335,
                "num_explored_none": 209,
                "num_inputs": 2,
                "num_kept_concrete": 124,
                "num_kept_lambda": 117,
                "num_values_explored": 797,
                "num_values_kept": 241,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 14616
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.157200099900365,
            "num_unique_values": 309,
            "solution": "Square(IntDivide(Subtract(Last(x1), Sum(x1)), 3))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 35.56116015132409,
                "explored_percent_lambda": 44.51450189155107,
                "explored_percent_none": 19.92433795712484,
                "kept_percent_concrete": 53.51170568561873,
                "kept_percent_lambda": 46.48829431438127,
                "num_examples": 3,
                "num_explored_concrete": 282,
                "num_explored_lambda": 353,
                "num_explored_none": 158,
                "num_inputs": 2,
                "num_kept_concrete": 160,
                "num_kept_lambda": 139,
                "num_values_explored": 793,
                "num_values_kept": 299,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 793
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.018697652965784,
            "num_unique_values": 266,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 23.214285714285715,
                "explored_percent_lambda": 57.005494505494504,
                "explored_percent_none": 19.78021978021978,
                "kept_percent_concrete": 37.7431906614786,
                "kept_percent_lambda": 62.2568093385214,
                "num_examples": 2,
                "num_explored_concrete": 169,
                "num_explored_lambda": 415,
                "num_explored_none": 144,
                "num_inputs": 1,
                "num_kept_concrete": 97,
                "num_kept_lambda": 160,
                "num_values_explored": 728,
                "num_values_kept": 257,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 728
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.10745176486671,
            "num_unique_values": 538,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Max(Add(-1, -1), (lambda v1: Subtract(-1, v1))(v1)))(u2), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 36.89584751531654,
                "explored_percent_lambda": 45.67733151803948,
                "explored_percent_none": 17.426820966643977,
                "kept_percent_concrete": 37.24007561436673,
                "kept_percent_lambda": 62.75992438563327,
                "num_examples": 4,
                "num_explored_concrete": 542,
                "num_explored_lambda": 671,
                "num_explored_none": 256,
                "num_inputs": 1,
                "num_kept_concrete": 197,
                "num_kept_lambda": 332,
                "num_values_explored": 1469,
                "num_values_kept": 529,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1469
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.7738304678350687,
            "num_unique_values": 522,
            "solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), Scanl1(lambda u1, u2: (lambda v1: Multiply(3, v1))(u2), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 54.4375,
                "explored_percent_lambda": 26.9375,
                "explored_percent_none": 18.625,
                "kept_percent_concrete": 63.671875,
                "kept_percent_lambda": 36.328125,
                "num_examples": 5,
                "num_explored_concrete": 871,
                "num_explored_lambda": 431,
                "num_explored_none": 298,
                "num_inputs": 2,
                "num_kept_concrete": 326,
                "num_kept_lambda": 186,
                "num_values_explored": 1600,
                "num_values_kept": 512,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1600
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 27.392283158376813,
            "num_unique_values": 1418,
            "solution": "Add(Min(x3, x1), Multiply(-1, Sum(x2)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 81.97139595783254,
                "explored_percent_lambda": 5.8148123279393005,
                "explored_percent_none": 12.213791714228162,
                "kept_percent_concrete": 83.08457711442786,
                "kept_percent_lambda": 16.915422885572138,
                "num_examples": 2,
                "num_explored_concrete": 12208,
                "num_explored_lambda": 866,
                "num_explored_none": 1819,
                "num_inputs": 3,
                "num_kept_concrete": 1169,
                "num_kept_lambda": 238,
                "num_values_explored": 14893,
                "num_values_kept": 1407,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 14893
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 22.33548411913216,
            "num_unique_values": 1759,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Max(Minimum(x1), (lambda v1: IntDivide(v1, 2))(v1)))(u1), Scanl1(lambda u1, u2: 2, x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 57.19013558236362,
                "explored_percent_lambda": 31.194619408561973,
                "explored_percent_none": 11.61524500907441,
                "kept_percent_concrete": 37.31428571428572,
                "kept_percent_lambda": 62.68571428571428,
                "num_examples": 2,
                "num_explored_concrete": 5357,
                "num_explored_lambda": 2922,
                "num_explored_none": 1088,
                "num_inputs": 1,
                "num_kept_concrete": 653,
                "num_kept_lambda": 1097,
                "num_values_explored": 9367,
                "num_values_kept": 1750,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 9367
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8600258249789476,
            "num_unique_values": 270,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 27.531645569620252,
                "explored_percent_lambda": 45.09493670886076,
                "explored_percent_none": 27.373417721518987,
                "kept_percent_concrete": 37.93103448275862,
                "kept_percent_lambda": 62.06896551724138,
                "num_examples": 2,
                "num_explored_concrete": 174,
                "num_explored_lambda": 285,
                "num_explored_none": 173,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 162,
                "num_values_explored": 632,
                "num_values_kept": 261,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 632
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 37.33591888472438,
            "num_unique_values": 204,
            "solution": "Add(Subtract(x1, x2), Square(Min(x2, 0)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 24.700415749572024,
                "explored_percent_lambda": 10.66275372951822,
                "explored_percent_none": 64.63683052090975,
                "kept_percent_concrete": 86.08247422680412,
                "kept_percent_lambda": 13.917525773195877,
                "num_examples": 2,
                "num_explored_concrete": 1010,
                "num_explored_lambda": 436,
                "num_explored_none": 2643,
                "num_inputs": 2,
                "num_kept_concrete": 167,
                "num_kept_lambda": 27,
                "num_values_explored": 4089,
                "num_values_kept": 194,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 20737
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.766021167859435,
            "num_unique_values": 358,
            "solution": "Map(lambda u1: Add(IntDivide(Add(x2, 1), 4), -1), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 42.524142524142526,
                "explored_percent_lambda": 14.152514152514152,
                "explored_percent_none": 43.32334332334332,
                "kept_percent_concrete": 67.52873563218391,
                "kept_percent_lambda": 32.47126436781609,
                "num_examples": 4,
                "num_explored_concrete": 1277,
                "num_explored_lambda": 425,
                "num_explored_none": 1301,
                "num_inputs": 2,
                "num_kept_concrete": 235,
                "num_kept_lambda": 113,
                "num_values_explored": 3003,
                "num_values_kept": 348,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3003
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5566038247197866,
            "num_unique_values": 216,
            "solution": "Map(lambda u1: (lambda v1: Subtract(v1, 1))(u1), Take(2, x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 22.955974842767297,
                "explored_percent_lambda": 50.943396226415096,
                "explored_percent_none": 26.10062893081761,
                "kept_percent_concrete": 39.80582524271845,
                "kept_percent_lambda": 60.19417475728155,
                "num_examples": 3,
                "num_explored_concrete": 146,
                "num_explored_lambda": 324,
                "num_explored_none": 166,
                "num_inputs": 2,
                "num_kept_concrete": 82,
                "num_kept_lambda": 124,
                "num_values_explored": 636,
                "num_values_kept": 206,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 636
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.910457506775856,
            "num_unique_values": 756,
            "solution": "Subtract(Square(Add(2, 4)), If(IsOdd(Head(x1)), 2, 4))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 65.16369902354968,
                "explored_percent_lambda": 16.484778862722575,
                "explored_percent_none": 18.351522113727743,
                "kept_percent_concrete": 70.54886211512718,
                "kept_percent_lambda": 29.451137884872825,
                "num_examples": 4,
                "num_explored_concrete": 2269,
                "num_explored_lambda": 574,
                "num_explored_none": 639,
                "num_inputs": 1,
                "num_kept_concrete": 527,
                "num_kept_lambda": 220,
                "num_values_explored": 3482,
                "num_values_kept": 747,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3482
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8705027289688587,
            "num_unique_values": 130,
            "solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 91.78644763860369,
                "explored_percent_lambda": 6.776180698151951,
                "explored_percent_none": 1.4373716632443532,
                "kept_percent_concrete": 82.64462809917356,
                "kept_percent_lambda": 17.355371900826448,
                "num_examples": 5,
                "num_explored_concrete": 447,
                "num_explored_lambda": 33,
                "num_explored_none": 7,
                "num_inputs": 1,
                "num_kept_concrete": 100,
                "num_kept_lambda": 21,
                "num_values_explored": 487,
                "num_values_kept": 121,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 487
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.19447080232203,
            "num_unique_values": 447,
            "solution": "Reverse(Map(lambda u1: (lambda v1: Add(x1, v1))(u1), Reverse(Take(2, x2))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 53.20388349514563,
                "explored_percent_lambda": 24.789644012944983,
                "explored_percent_none": 22.006472491909385,
                "kept_percent_concrete": 50.0,
                "kept_percent_lambda": 50.0,
                "num_examples": 2,
                "num_explored_concrete": 822,
                "num_explored_lambda": 383,
                "num_explored_none": 340,
                "num_inputs": 3,
                "num_kept_concrete": 218,
                "num_kept_lambda": 218,
                "num_values_explored": 1545,
                "num_values_kept": 436,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1545
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6628852505236864,
            "num_unique_values": 161,
            "solution": "IntDivide(Add(x1, 2), Square(IntDivide(x2, Multiply(3, 4))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 21.747865394274235,
                "explored_percent_lambda": 14.264188849824208,
                "explored_percent_none": 63.987945755901556,
                "kept_percent_concrete": 82.78145695364239,
                "kept_percent_lambda": 17.218543046357617,
                "num_examples": 2,
                "num_explored_concrete": 433,
                "num_explored_lambda": 284,
                "num_explored_none": 1274,
                "num_inputs": 2,
                "num_kept_concrete": 125,
                "num_kept_lambda": 26,
                "num_values_explored": 1991,
                "num_values_kept": 151,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1991
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8652848061174154,
            "num_unique_values": 250,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 33.649932157394844,
                "explored_percent_lambda": 35.0067842605156,
                "explored_percent_none": 31.34328358208955,
                "kept_percent_concrete": 53.13807531380753,
                "kept_percent_lambda": 46.86192468619247,
                "num_examples": 4,
                "num_explored_concrete": 248,
                "num_explored_lambda": 258,
                "num_explored_none": 231,
                "num_inputs": 3,
                "num_kept_concrete": 127,
                "num_kept_lambda": 112,
                "num_values_explored": 737,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 737
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.7074501868337393,
            "num_unique_values": 505,
            "solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 61.0312764158918,
                "explored_percent_lambda": 27.64158918005072,
                "explored_percent_none": 11.327134404057482,
                "kept_percent_concrete": 66.19433198380567,
                "kept_percent_lambda": 33.80566801619433,
                "num_examples": 4,
                "num_explored_concrete": 722,
                "num_explored_lambda": 327,
                "num_explored_none": 134,
                "num_inputs": 3,
                "num_kept_concrete": 327,
                "num_kept_lambda": 167,
                "num_values_explored": 1183,
                "num_values_kept": 494,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1183
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 438.6363084502518,
            "num_unique_values": 492,
            "solution": "Add(1, Max(x1, Min(Add(x1, 4), Square(Subtract(x1, x2)))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 26.81409151828451,
                "explored_percent_lambda": 9.075244112578977,
                "explored_percent_none": 64.11066436913652,
                "kept_percent_concrete": 86.72199170124482,
                "kept_percent_lambda": 13.278008298755188,
                "num_examples": 4,
                "num_explored_concrete": 2801,
                "num_explored_lambda": 948,
                "num_explored_none": 6697,
                "num_inputs": 2,
                "num_kept_concrete": 418,
                "num_kept_lambda": 64,
                "num_values_explored": 10446,
                "num_values_kept": 482,
                "temperature": 1.0,
                "total_num_restarts": 15,
                "total_num_values_explored": 249976
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.069178204983473,
            "num_unique_values": 406,
            "solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), Take(-1, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 32.54593175853018,
                "explored_percent_lambda": 53.10586176727909,
                "explored_percent_none": 14.348206474190727,
                "kept_percent_concrete": 37.02770780856423,
                "kept_percent_lambda": 62.97229219143577,
                "num_examples": 5,
                "num_explored_concrete": 372,
                "num_explored_lambda": 607,
                "num_explored_none": 164,
                "num_inputs": 1,
                "num_kept_concrete": 147,
                "num_kept_lambda": 250,
                "num_values_explored": 1143,
                "num_values_kept": 397,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1143
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5749438591301441,
            "num_unique_values": 264,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Max(v1, x3))(u1), Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 43.64937388193202,
                "explored_percent_lambda": 35.59928443649374,
                "explored_percent_none": 20.75134168157424,
                "kept_percent_concrete": 63.241106719367586,
                "kept_percent_lambda": 36.758893280632414,
                "num_examples": 5,
                "num_explored_concrete": 244,
                "num_explored_lambda": 199,
                "num_explored_none": 116,
                "num_inputs": 3,
                "num_kept_concrete": 160,
                "num_kept_lambda": 93,
                "num_values_explored": 559,
                "num_values_kept": 253,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 559
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 182.09604838117957,
            "num_unique_values": 215,
            "solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 20.56451612903226,
                "explored_percent_lambda": 51.344086021505376,
                "explored_percent_none": 28.091397849462364,
                "kept_percent_concrete": 36.407766990291265,
                "kept_percent_lambda": 63.592233009708735,
                "num_examples": 3,
                "num_explored_concrete": 153,
                "num_explored_lambda": 382,
                "num_explored_none": 209,
                "num_inputs": 1,
                "num_kept_concrete": 75,
                "num_kept_lambda": 131,
                "num_values_explored": 744,
                "num_values_kept": 206,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 86753
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.004704926162958,
            "num_unique_values": 247,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 27.364438839848678,
                "explored_percent_lambda": 43.12736443883985,
                "explored_percent_none": 29.508196721311474,
                "kept_percent_concrete": 46.835443037974684,
                "kept_percent_lambda": 53.164556962025316,
                "num_examples": 4,
                "num_explored_concrete": 217,
                "num_explored_lambda": 342,
                "num_explored_none": 234,
                "num_inputs": 2,
                "num_kept_concrete": 111,
                "num_kept_lambda": 126,
                "num_values_explored": 793,
                "num_values_kept": 237,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 793
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 601.0230209250003,
            "num_unique_values": 2413,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.83747481531229,
                "explored_percent_lambda": 13.190060443250504,
                "explored_percent_none": 8.972464741437205,
                "kept_percent_concrete": 65.44546211490425,
                "kept_percent_lambda": 34.554537885095755,
                "num_examples": 5,
                "num_explored_concrete": 11590,
                "num_explored_lambda": 1964,
                "num_explored_none": 1336,
                "num_inputs": 3,
                "num_kept_concrete": 1572,
                "num_kept_lambda": 830,
                "num_values_explored": 14890,
                "num_values_kept": 2402,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 293588
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.970197156071663,
            "num_unique_values": 232,
            "solution": "ZipWith(lambda u1, u2: Sum(x1), x1, Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 26.877470355731226,
                "explored_percent_lambda": 50.98814229249012,
                "explored_percent_none": 22.134387351778656,
                "kept_percent_concrete": 41.891891891891895,
                "kept_percent_lambda": 58.108108108108105,
                "num_examples": 5,
                "num_explored_concrete": 204,
                "num_explored_lambda": 387,
                "num_explored_none": 168,
                "num_inputs": 2,
                "num_kept_concrete": 93,
                "num_kept_lambda": 129,
                "num_values_explored": 759,
                "num_values_kept": 222,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 759
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 47.13709507510066,
            "num_unique_values": 797,
            "solution": "Min(Subtract(x1, 3), Add(2, Subtract(x1, Head(x2))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 62.044877222692634,
                "explored_percent_lambda": 6.212955122777307,
                "explored_percent_none": 31.74216765453006,
                "kept_percent_concrete": 85.00635324015248,
                "kept_percent_lambda": 14.993646759847522,
                "num_examples": 5,
                "num_explored_concrete": 5862,
                "num_explored_lambda": 587,
                "num_explored_none": 2999,
                "num_inputs": 2,
                "num_kept_concrete": 669,
                "num_kept_lambda": 118,
                "num_values_explored": 9448,
                "num_values_kept": 787,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 25822
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.4286864418536425,
            "num_unique_values": 179,
            "solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 19.168173598553345,
                "explored_percent_lambda": 28.84267631103074,
                "explored_percent_none": 51.98915009041591,
                "kept_percent_concrete": 39.64497041420118,
                "kept_percent_lambda": 60.35502958579882,
                "num_examples": 2,
                "num_explored_concrete": 212,
                "num_explored_lambda": 319,
                "num_explored_none": 575,
                "num_inputs": 2,
                "num_kept_concrete": 67,
                "num_kept_lambda": 102,
                "num_values_explored": 1106,
                "num_values_kept": 169,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1106
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 59.11599602550268,
            "num_unique_values": 645,
            "solution": "Subtract(Add(x1, Multiply(-1, Square(Square(3)))), Square(3))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 32.88245976579623,
                "explored_percent_lambda": 10.357567787588453,
                "explored_percent_none": 56.759972446615315,
                "kept_percent_concrete": 89.46540880503144,
                "kept_percent_lambda": 10.534591194968554,
                "num_examples": 4,
                "num_explored_concrete": 5251,
                "num_explored_lambda": 1654,
                "num_explored_none": 9064,
                "num_inputs": 1,
                "num_kept_concrete": 569,
                "num_kept_lambda": 67,
                "num_values_explored": 15969,
                "num_values_kept": 636,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 32225
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5923766791820526,
            "num_unique_values": 216,
            "solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 24.390243902439025,
                "explored_percent_lambda": 37.957317073170735,
                "explored_percent_none": 37.65243902439025,
                "kept_percent_concrete": 46.601941747572816,
                "kept_percent_lambda": 53.398058252427184,
                "num_examples": 4,
                "num_explored_concrete": 160,
                "num_explored_lambda": 249,
                "num_explored_none": 247,
                "num_inputs": 2,
                "num_kept_concrete": 96,
                "num_kept_lambda": 110,
                "num_values_explored": 656,
                "num_values_kept": 206,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 656
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.28518128208816,
            "num_unique_values": 1202,
            "solution": "Add(3, Subtract(Multiply(-1, Sum(Drop(3, Reverse(x1)))), Square(4)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 80.99440013575429,
                "explored_percent_lambda": 12.981503478703546,
                "explored_percent_none": 6.024096385542169,
                "kept_percent_concrete": 77.87091366303437,
                "kept_percent_lambda": 22.12908633696563,
                "num_examples": 3,
                "num_explored_concrete": 4773,
                "num_explored_lambda": 765,
                "num_explored_none": 355,
                "num_inputs": 1,
                "num_kept_concrete": 929,
                "num_kept_lambda": 264,
                "num_values_explored": 5893,
                "num_values_kept": 1193,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 5893
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.068516759201884,
            "num_unique_values": 530,
            "solution": "Scanl1(lambda u1, u2: Add(Head(x2), -1), Map(lambda u1: Add(x1, -1), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 35.140997830802604,
                "explored_percent_lambda": 36.22559652928417,
                "explored_percent_none": 28.63340563991323,
                "kept_percent_concrete": 39.03846153846154,
                "kept_percent_lambda": 60.96153846153846,
                "num_examples": 2,
                "num_explored_concrete": 648,
                "num_explored_lambda": 668,
                "num_explored_none": 528,
                "num_inputs": 2,
                "num_kept_concrete": 203,
                "num_kept_lambda": 317,
                "num_values_explored": 1844,
                "num_values_kept": 520,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1844
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 213.965860247612,
            "num_unique_values": 146,
            "solution": "Subtract(IntDivide(Add(x1, 3), Multiply(3, Subtract(-1, 1))), 2)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 24.33349491032477,
                "explored_percent_lambda": 13.814832767813863,
                "explored_percent_none": 61.851672321861365,
                "kept_percent_concrete": 75.18248175182482,
                "kept_percent_lambda": 24.817518248175183,
                "num_examples": 4,
                "num_explored_concrete": 502,
                "num_explored_lambda": 285,
                "num_explored_none": 1276,
                "num_inputs": 1,
                "num_kept_concrete": 103,
                "num_kept_lambda": 34,
                "num_values_explored": 2063,
                "num_values_kept": 137,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 119211
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.47797104716301,
            "num_unique_values": 1378,
            "solution": "Scanl1(lambda u1, u2: Add(1, Subtract(IntDivide(Last(x1), Head(x2)), 3)), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 81.12874779541447,
                "explored_percent_lambda": 13.015873015873016,
                "explored_percent_none": 5.855379188712522,
                "kept_percent_concrete": 73.31871345029239,
                "kept_percent_lambda": 26.681286549707604,
                "num_examples": 2,
                "num_explored_concrete": 6900,
                "num_explored_lambda": 1107,
                "num_explored_none": 498,
                "num_inputs": 2,
                "num_kept_concrete": 1003,
                "num_kept_lambda": 365,
                "num_values_explored": 8505,
                "num_values_kept": 1368,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 8505
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 296.0887087918818,
            "num_unique_values": 2256,
            "solution": "Sum(Scanl1(lambda u1, u2: Subtract(x2, 3), Take(Minimum(x1), x1)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 83.43186520839491,
                "explored_percent_lambda": 5.276381909547739,
                "explored_percent_none": 11.291752882057345,
                "kept_percent_concrete": 87.66696349065005,
                "kept_percent_lambda": 12.333036509349956,
                "num_examples": 5,
                "num_explored_concrete": 11290,
                "num_explored_lambda": 714,
                "num_explored_none": 1528,
                "num_inputs": 2,
                "num_kept_concrete": 1969,
                "num_kept_lambda": 277,
                "num_values_explored": 13532,
                "num_values_kept": 2246,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 152630
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5726940333843231,
            "num_unique_values": 265,
            "solution": "Scanl1(lambda u1, u2: Subtract(1, 4), ZipWith(lambda u1, u2: (lambda v1: Subtract(v1, 4))(u2), x1, Sort(x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 39.464285714285715,
                "explored_percent_lambda": 46.42857142857143,
                "explored_percent_none": 14.107142857142858,
                "kept_percent_concrete": 49.609375,
                "kept_percent_lambda": 50.390625,
                "num_examples": 3,
                "num_explored_concrete": 221,
                "num_explored_lambda": 260,
                "num_explored_none": 79,
                "num_inputs": 1,
                "num_kept_concrete": 127,
                "num_kept_lambda": 129,
                "num_values_explored": 560,
                "num_values_kept": 256,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 560
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.353663505986333,
            "num_unique_values": 771,
            "solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 67.37891737891738,
                "explored_percent_lambda": 22.507122507122507,
                "explored_percent_none": 10.113960113960115,
                "kept_percent_concrete": 75.03285151116951,
                "kept_percent_lambda": 24.967148488830485,
                "num_examples": 5,
                "num_explored_concrete": 1419,
                "num_explored_lambda": 474,
                "num_explored_none": 213,
                "num_inputs": 2,
                "num_kept_concrete": 571,
                "num_kept_lambda": 190,
                "num_values_explored": 2106,
                "num_values_kept": 761,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2106
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 37.633223444223404,
            "num_unique_values": 1029,
            "solution": "Reverse(ZipWith(lambda u1, u2: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u2), x1, Reverse(x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 49.36002625533312,
                "explored_percent_lambda": 40.82704299310797,
                "explored_percent_none": 9.81293075155891,
                "kept_percent_concrete": 34.6078431372549,
                "kept_percent_lambda": 65.3921568627451,
                "num_examples": 2,
                "num_explored_concrete": 1504,
                "num_explored_lambda": 1244,
                "num_explored_none": 299,
                "num_inputs": 1,
                "num_kept_concrete": 353,
                "num_kept_lambda": 667,
                "num_values_explored": 3047,
                "num_values_kept": 1020,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 15331
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7063852939754725,
            "num_unique_values": 245,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u1), x2, x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 29.124820659971306,
                "explored_percent_lambda": 37.01578192252511,
                "explored_percent_none": 33.85939741750359,
                "kept_percent_concrete": 55.12820512820513,
                "kept_percent_lambda": 44.87179487179487,
                "num_examples": 4,
                "num_explored_concrete": 203,
                "num_explored_lambda": 258,
                "num_explored_none": 236,
                "num_inputs": 3,
                "num_kept_concrete": 129,
                "num_kept_lambda": 105,
                "num_values_explored": 697,
                "num_values_kept": 234,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 697
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.766335602849722,
            "num_unique_values": 771,
            "solution": "Map(lambda u1: Add(1, Multiply(3, IntDivide(Head(x1), 4))), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 41.344755131727815,
                "explored_percent_lambda": 27.97801842573137,
                "explored_percent_none": 30.67722644254081,
                "kept_percent_concrete": 37.92650918635171,
                "kept_percent_lambda": 62.07349081364829,
                "num_examples": 2,
                "num_explored_concrete": 2558,
                "num_explored_lambda": 1731,
                "num_explored_none": 1898,
                "num_inputs": 1,
                "num_kept_concrete": 289,
                "num_kept_lambda": 473,
                "num_values_explored": 6187,
                "num_values_kept": 762,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 6187
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.8619639016688,
            "num_unique_values": 2421,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 87.55076142131979,
                "explored_percent_lambda": 5.75507614213198,
                "explored_percent_none": 6.694162436548224,
                "kept_percent_concrete": 87.4688796680498,
                "kept_percent_lambda": 12.531120331950207,
                "num_examples": 4,
                "num_explored_concrete": 13798,
                "num_explored_lambda": 907,
                "num_explored_none": 1055,
                "num_inputs": 3,
                "num_kept_concrete": 2108,
                "num_kept_lambda": 302,
                "num_values_explored": 15760,
                "num_values_kept": 2410,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 323690
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 601.177671642974,
            "num_unique_values": 2108,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.01516195727085,
                "explored_percent_lambda": 38.6026878015162,
                "explored_percent_none": 8.382150241212956,
                "kept_percent_concrete": 35.06431634111482,
                "kept_percent_lambda": 64.93568365888518,
                "num_examples": 3,
                "num_explored_concrete": 6154,
                "num_explored_lambda": 4481,
                "num_explored_none": 973,
                "num_inputs": 1,
                "num_kept_concrete": 736,
                "num_kept_lambda": 1363,
                "num_values_explored": 11608,
                "num_values_kept": 2099,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 235499
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 268.9226187970489,
            "num_unique_values": 678,
            "solution": "Subtract(IntDivide(x1, Add(x1, Multiply(-1, Multiply(3, Square(4))))), 2)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 29.57549990035209,
                "explored_percent_lambda": 10.184016475121238,
                "explored_percent_none": 60.240483624526675,
                "kept_percent_concrete": 87.29446935724962,
                "kept_percent_lambda": 12.705530642750373,
                "num_examples": 4,
                "num_explored_concrete": 4452,
                "num_explored_lambda": 1533,
                "num_explored_none": 9068,
                "num_inputs": 1,
                "num_kept_concrete": 584,
                "num_kept_lambda": 85,
                "num_values_explored": 15053,
                "num_values_kept": 669,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 142172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 43.50466542132199,
            "num_unique_values": 1269,
            "solution": "Scanl1(lambda u1, u2: Square(Sum(Scanl1(lambda u1, u2: 4, x1))), Map(lambda u1: (lambda v1: Square(v1))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 70.48493636217174,
                "explored_percent_lambda": 21.765748348638635,
                "explored_percent_none": 7.749315289189624,
                "kept_percent_concrete": 53.095238095238095,
                "kept_percent_lambda": 46.904761904761905,
                "num_examples": 2,
                "num_explored_concrete": 4375,
                "num_explored_lambda": 1351,
                "num_explored_none": 481,
                "num_inputs": 1,
                "num_kept_concrete": 669,
                "num_kept_lambda": 591,
                "num_values_explored": 6207,
                "num_values_kept": 1260,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 20458
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.052119497209787,
            "num_unique_values": 945,
            "solution": "Map(lambda u1: If(IsOdd(Sum(x1)), Square(3), Sum(Drop(1, x1))), x3)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 69.2229815236649,
                "explored_percent_lambda": 19.665907365223994,
                "explored_percent_none": 11.11111111111111,
                "kept_percent_concrete": 67.45182012847965,
                "kept_percent_lambda": 32.54817987152034,
                "num_examples": 5,
                "num_explored_concrete": 2735,
                "num_explored_lambda": 777,
                "num_explored_none": 439,
                "num_inputs": 3,
                "num_kept_concrete": 630,
                "num_kept_lambda": 304,
                "num_values_explored": 3951,
                "num_values_kept": 934,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3951
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.5126629415899515,
            "num_unique_values": 403,
            "solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 43.04775280898876,
                "explored_percent_lambda": 37.85112359550562,
                "explored_percent_none": 19.10112359550562,
                "kept_percent_concrete": 35.36895674300254,
                "kept_percent_lambda": 64.63104325699746,
                "num_examples": 2,
                "num_explored_concrete": 613,
                "num_explored_lambda": 539,
                "num_explored_none": 272,
                "num_inputs": 2,
                "num_kept_concrete": 139,
                "num_kept_lambda": 254,
                "num_values_explored": 1424,
                "num_values_kept": 393,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1424
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.4121360052376986,
            "num_unique_values": 455,
            "solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Multiply(v1, v1))(v1)))(v1)))(u1), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 33.146330060776066,
                "explored_percent_lambda": 40.86021505376344,
                "explored_percent_none": 25.993454885460494,
                "kept_percent_concrete": 25.336322869955158,
                "kept_percent_lambda": 74.66367713004485,
                "num_examples": 3,
                "num_explored_concrete": 709,
                "num_explored_lambda": 874,
                "num_explored_none": 556,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 333,
                "num_values_explored": 2139,
                "num_values_kept": 446,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2139
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 601.0516186133027,
            "num_unique_values": 2900,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 91.04420488613893,
                "explored_percent_lambda": 5.581425017541622,
                "explored_percent_none": 3.3743700963194487,
                "kept_percent_concrete": 87.88508134302526,
                "kept_percent_lambda": 12.114918656974732,
                "num_examples": 5,
                "num_explored_concrete": 14273,
                "num_explored_lambda": 875,
                "num_explored_none": 529,
                "num_inputs": 3,
                "num_kept_concrete": 2539,
                "num_kept_lambda": 350,
                "num_values_explored": 15677,
                "num_values_kept": 2889,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 309818
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.1625655926764,
            "num_unique_values": 1362,
            "solution": "Scanl1(lambda u1, u2: Min(-1, IntDivide(x1, Head(x3))), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 72.03465126610395,
                "explored_percent_lambda": 9.395824078187472,
                "explored_percent_none": 18.569524655708573,
                "kept_percent_concrete": 76.16580310880829,
                "kept_percent_lambda": 23.83419689119171,
                "num_examples": 4,
                "num_explored_concrete": 6486,
                "num_explored_lambda": 846,
                "num_explored_none": 1672,
                "num_inputs": 3,
                "num_kept_concrete": 1029,
                "num_kept_lambda": 322,
                "num_values_explored": 9004,
                "num_values_kept": 1351,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 9004
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.0727863498032093,
            "num_unique_values": 248,
            "solution": "Scanl1(lambda u1, u2: 0, ZipWith(lambda u1, u2: (lambda v1: Subtract(4, v1))(u2), x1, Drop(1, x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 22.70967741935484,
                "explored_percent_lambda": 48.38709677419355,
                "explored_percent_none": 28.903225806451612,
                "kept_percent_concrete": 37.23849372384937,
                "kept_percent_lambda": 62.76150627615063,
                "num_examples": 2,
                "num_explored_concrete": 176,
                "num_explored_lambda": 375,
                "num_explored_none": 224,
                "num_inputs": 1,
                "num_kept_concrete": 89,
                "num_kept_lambda": 150,
                "num_values_explored": 775,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 775
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 65.71191489323974,
            "num_unique_values": 758,
            "solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 76.14147909967846,
                "explored_percent_lambda": 13.440514469453376,
                "explored_percent_none": 10.418006430868168,
                "kept_percent_concrete": 77.54010695187166,
                "kept_percent_lambda": 22.459893048128343,
                "num_examples": 3,
                "num_explored_concrete": 2368,
                "num_explored_lambda": 418,
                "num_explored_none": 324,
                "num_inputs": 2,
                "num_kept_concrete": 580,
                "num_kept_lambda": 168,
                "num_values_explored": 3110,
                "num_values_kept": 748,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 35847
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.331480782479,
            "num_unique_values": 715,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.507474609152116,
                "explored_percent_lambda": 6.898322492297159,
                "explored_percent_none": 61.594202898550726,
                "kept_percent_concrete": 92.34042553191489,
                "kept_percent_lambda": 7.659574468085107,
                "num_examples": 4,
                "num_explored_concrete": 5522,
                "num_explored_lambda": 1209,
                "num_explored_none": 10795,
                "num_inputs": 2,
                "num_kept_concrete": 651,
                "num_kept_lambda": 54,
                "num_values_explored": 17526,
                "num_values_kept": 705,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 349359
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 123.48431706801057,
            "num_unique_values": 589,
            "solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Multiply(2, v1))(u1), x1))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 54.760250173731755,
                "explored_percent_lambda": 29.186935371785964,
                "explored_percent_none": 16.05281445448228,
                "kept_percent_concrete": 72.41379310344827,
                "kept_percent_lambda": 27.586206896551722,
                "num_examples": 5,
                "num_explored_concrete": 788,
                "num_explored_lambda": 420,
                "num_explored_none": 231,
                "num_inputs": 1,
                "num_kept_concrete": 420,
                "num_kept_lambda": 160,
                "num_values_explored": 1439,
                "num_values_kept": 580,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 65678
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 245.35086685977876,
            "num_unique_values": 500,
            "solution": "Multiply(Subtract(-1, Multiply(x2, 4)), Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 56.39810426540284,
                "explored_percent_lambda": 14.494470774091628,
                "explored_percent_none": 29.10742496050553,
                "kept_percent_concrete": 78.9795918367347,
                "kept_percent_lambda": 21.020408163265305,
                "num_examples": 4,
                "num_explored_concrete": 1428,
                "num_explored_lambda": 367,
                "num_explored_none": 737,
                "num_inputs": 2,
                "num_kept_concrete": 387,
                "num_kept_lambda": 103,
                "num_values_explored": 2532,
                "num_values_kept": 490,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 138790
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3550674263388,
            "num_unique_values": 715,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.53954590097637,
                "explored_percent_lambda": 8.925992258362701,
                "explored_percent_none": 61.53446184066093,
                "kept_percent_concrete": 91.64305949008498,
                "kept_percent_lambda": 8.356940509915015,
                "num_examples": 3,
                "num_explored_concrete": 5113,
                "num_explored_lambda": 1545,
                "num_explored_none": 10651,
                "num_inputs": 1,
                "num_kept_concrete": 647,
                "num_kept_lambda": 59,
                "num_values_explored": 17309,
                "num_values_kept": 706,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 341383
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6694887466728687,
            "num_unique_values": 480,
            "solution": "Map(lambda u1: Multiply(3, Add(1, Square(4))), Drop(3, Take(4, x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 50.138350857775315,
                "explored_percent_lambda": 24.571112340896512,
                "explored_percent_none": 25.29053680132817,
                "kept_percent_concrete": 59.148936170212764,
                "kept_percent_lambda": 40.851063829787236,
                "num_examples": 3,
                "num_explored_concrete": 906,
                "num_explored_lambda": 444,
                "num_explored_none": 457,
                "num_inputs": 2,
                "num_kept_concrete": 278,
                "num_kept_lambda": 192,
                "num_values_explored": 1807,
                "num_values_kept": 470,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1807
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 33.65678463689983,
            "num_unique_values": 498,
            "solution": "Filter(lambda u1: IsEven(Last(x1)), Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 43.960396039603964,
                "explored_percent_lambda": 40.33003300330033,
                "explored_percent_none": 15.709570957095709,
                "kept_percent_concrete": 47.034764826175866,
                "kept_percent_lambda": 52.965235173824134,
                "num_examples": 5,
                "num_explored_concrete": 666,
                "num_explored_lambda": 611,
                "num_explored_none": 238,
                "num_inputs": 1,
                "num_kept_concrete": 230,
                "num_kept_lambda": 259,
                "num_values_explored": 1515,
                "num_values_kept": 489,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 15055
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 156.47930006496608,
            "num_unique_values": 858,
            "solution": "Max(Sum(x1), Multiply(3, Max(-1, IntDivide(Last(x1), 3))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 62.77548209366391,
                "explored_percent_lambda": 19.55922865013774,
                "explored_percent_none": 17.665289256198346,
                "kept_percent_concrete": 71.14252061248527,
                "kept_percent_lambda": 28.857479387514722,
                "num_examples": 5,
                "num_explored_concrete": 1823,
                "num_explored_lambda": 568,
                "num_explored_none": 513,
                "num_inputs": 1,
                "num_kept_concrete": 604,
                "num_kept_lambda": 245,
                "num_values_explored": 2904,
                "num_values_kept": 849,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 80487
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.6280818302184,
            "num_unique_values": 1422,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.67793583348728,
                "explored_percent_lambda": 10.641049325697395,
                "explored_percent_none": 19.681014840815322,
                "kept_percent_concrete": 76.07926397735315,
                "kept_percent_lambda": 23.92073602264685,
                "num_examples": 2,
                "num_explored_concrete": 11315,
                "num_explored_lambda": 1728,
                "num_explored_none": 3196,
                "num_inputs": 1,
                "num_kept_concrete": 1075,
                "num_kept_lambda": 338,
                "num_values_explored": 16239,
                "num_values_kept": 1413,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 316294
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.216731874272227,
            "num_unique_values": 1179,
            "solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Head(x1), Square(4))), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 58.95876876306289,
                "explored_percent_lambda": 24.586737602128064,
                "explored_percent_none": 16.454493634809044,
                "kept_percent_concrete": 61.36752136752137,
                "kept_percent_lambda": 38.63247863247863,
                "num_examples": 4,
                "num_explored_concrete": 3103,
                "num_explored_lambda": 1294,
                "num_explored_none": 866,
                "num_inputs": 1,
                "num_kept_concrete": 718,
                "num_kept_lambda": 452,
                "num_values_explored": 5263,
                "num_values_kept": 1170,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 5263
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.6937738191336,
            "num_unique_values": 1193,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.72882910424946,
                "explored_percent_lambda": 25.70314888413329,
                "explored_percent_none": 27.56802201161724,
                "kept_percent_concrete": 36.6554054054054,
                "kept_percent_lambda": 63.3445945945946,
                "num_examples": 2,
                "num_explored_concrete": 6114,
                "num_explored_lambda": 3363,
                "num_explored_none": 3607,
                "num_inputs": 1,
                "num_kept_concrete": 434,
                "num_kept_lambda": 750,
                "num_values_explored": 13084,
                "num_values_kept": 1184,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 262683
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.96041101589799,
            "num_unique_values": 868,
            "solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 54.68666309587574,
                "explored_percent_lambda": 27.138011069451885,
                "explored_percent_none": 18.17532583467238,
                "kept_percent_concrete": 37.60186263096624,
                "kept_percent_lambda": 62.39813736903376,
                "num_examples": 2,
                "num_explored_concrete": 3063,
                "num_explored_lambda": 1520,
                "num_explored_none": 1018,
                "num_inputs": 1,
                "num_kept_concrete": 323,
                "num_kept_lambda": 536,
                "num_values_explored": 5601,
                "num_values_kept": 859,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 5601
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3577015809715,
            "num_unique_values": 662,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.63266031144532,
                "explored_percent_lambda": 10.953875303451952,
                "explored_percent_none": 53.41346438510273,
                "kept_percent_concrete": 83.15467075038285,
                "kept_percent_lambda": 16.84532924961715,
                "num_examples": 2,
                "num_explored_concrete": 6018,
                "num_explored_lambda": 1850,
                "num_explored_none": 9021,
                "num_inputs": 1,
                "num_kept_concrete": 543,
                "num_kept_lambda": 110,
                "num_values_explored": 16889,
                "num_values_kept": 653,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 338861
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 119.92417188361287,
            "num_unique_values": 692,
            "solution": "Subtract(If(IsOdd(x1), Add(x1, x1), IntDivide(Square(3), -1)), 2)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 30.54124530941932,
                "explored_percent_lambda": 15.594988233797622,
                "explored_percent_none": 53.863766456783054,
                "kept_percent_concrete": 75.84187408491947,
                "kept_percent_lambda": 24.15812591508053,
                "num_examples": 2,
                "num_explored_concrete": 4802,
                "num_explored_lambda": 2452,
                "num_explored_none": 8469,
                "num_inputs": 1,
                "num_kept_concrete": 518,
                "num_kept_lambda": 165,
                "num_values_explored": 15723,
                "num_values_kept": 683,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 62675
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.296361733227968,
            "num_unique_values": 265,
            "solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 23.771289537712896,
                "explored_percent_lambda": 23.381995133819952,
                "explored_percent_none": 52.846715328467155,
                "kept_percent_concrete": 61.1764705882353,
                "kept_percent_lambda": 38.8235294117647,
                "num_examples": 2,
                "num_explored_concrete": 977,
                "num_explored_lambda": 961,
                "num_explored_none": 2172,
                "num_inputs": 2,
                "num_kept_concrete": 156,
                "num_kept_lambda": 99,
                "num_values_explored": 4110,
                "num_values_kept": 255,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4110
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3381014168262,
            "num_unique_values": 702,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.605429049273123,
                "explored_percent_lambda": 15.701788241348257,
                "explored_percent_none": 55.69278270937862,
                "kept_percent_concrete": 69.36416184971098,
                "kept_percent_lambda": 30.63583815028902,
                "num_examples": 2,
                "num_explored_concrete": 4447,
                "num_explored_lambda": 2441,
                "num_explored_none": 8658,
                "num_inputs": 2,
                "num_kept_concrete": 480,
                "num_kept_lambda": 212,
                "num_values_explored": 15546,
                "num_values_kept": 692,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 323170
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3578955866396,
            "num_unique_values": 708,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.144745122718692,
                "explored_percent_lambda": 14.927627438640654,
                "explored_percent_none": 54.927627438640656,
                "kept_percent_concrete": 74.35530085959886,
                "kept_percent_lambda": 25.644699140401148,
                "num_examples": 2,
                "num_explored_concrete": 4790,
                "num_explored_lambda": 2372,
                "num_explored_none": 8728,
                "num_inputs": 2,
                "num_kept_concrete": 519,
                "num_kept_lambda": 179,
                "num_values_explored": 15890,
                "num_values_kept": 698,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 316816
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3650568444282,
            "num_unique_values": 706,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.981346309813464,
                "explored_percent_lambda": 13.369517749079792,
                "explored_percent_none": 55.64913594110674,
                "kept_percent_concrete": 75.86206896551724,
                "kept_percent_lambda": 24.137931034482758,
                "num_examples": 2,
                "num_explored_concrete": 4966,
                "num_explored_lambda": 2143,
                "num_explored_none": 8920,
                "num_inputs": 2,
                "num_kept_concrete": 528,
                "num_kept_lambda": 168,
                "num_values_explored": 16029,
                "num_values_kept": 696,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 319615
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.6931838449091,
            "num_unique_values": 1176,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.45985401459854,
                "explored_percent_lambda": 26.562043795620436,
                "explored_percent_none": 26.978102189781023,
                "kept_percent_concrete": 36.93230505569837,
                "kept_percent_lambda": 63.06769494430163,
                "num_examples": 2,
                "num_explored_concrete": 6365,
                "num_explored_lambda": 3639,
                "num_explored_none": 3696,
                "num_inputs": 1,
                "num_kept_concrete": 431,
                "num_kept_lambda": 736,
                "num_values_explored": 13700,
                "num_values_kept": 1167,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 272623
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.356645828113,
            "num_unique_values": 686,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.70969438438614,
                "explored_percent_lambda": 11.949979547712266,
                "explored_percent_none": 52.34032606790159,
                "kept_percent_concrete": 89.06942392909896,
                "kept_percent_lambda": 10.930576070901035,
                "num_examples": 3,
                "num_explored_concrete": 6111,
                "num_explored_lambda": 2045,
                "num_explored_none": 8957,
                "num_inputs": 1,
                "num_kept_concrete": 603,
                "num_kept_lambda": 74,
                "num_values_explored": 17113,
                "num_values_kept": 677,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 337787
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.86
}