{
    "num_tasks": 100,
    "num_tasks_solved": 89,
    "results": [
        {
            "elapsed_time": 2.0135497376322746,
            "num_unique_values": 219,
            "solution": "Map(lambda u1: 1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 19.20980926430518,
                "explored_percent_lambda": 56.130790190735695,
                "explored_percent_none": 24.659400544959126,
                "kept_percent_concrete": 30.476190476190474,
                "kept_percent_lambda": 69.52380952380952,
                "num_examples": 2,
                "num_explored_concrete": 141,
                "num_explored_lambda": 412,
                "num_explored_none": 181,
                "num_inputs": 1,
                "num_kept_concrete": 64,
                "num_kept_lambda": 146,
                "num_values_explored": 734,
                "num_values_kept": 210,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 734
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.020815223455429,
            "num_unique_values": 262,
            "solution": "Scanl1(lambda u1, u2: x2, ZipWith(lambda u1, u2: (lambda v1: Max(1, v1))(u1), x1, x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 32.17821782178218,
                "explored_percent_lambda": 40.59405940594059,
                "explored_percent_none": 27.22772277227723,
                "kept_percent_concrete": 58.73015873015873,
                "kept_percent_lambda": 41.26984126984127,
                "num_examples": 3,
                "num_explored_concrete": 260,
                "num_explored_lambda": 328,
                "num_explored_none": 220,
                "num_inputs": 2,
                "num_kept_concrete": 148,
                "num_kept_lambda": 104,
                "num_values_explored": 808,
                "num_values_kept": 252,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 808
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0246327817440033,
            "num_unique_values": 163,
            "solution": "Access(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 15.217391304347826,
                "explored_percent_lambda": 66.03260869565217,
                "explored_percent_none": 18.75,
                "kept_percent_concrete": 26.623376623376622,
                "kept_percent_lambda": 73.37662337662337,
                "num_examples": 5,
                "num_explored_concrete": 56,
                "num_explored_lambda": 243,
                "num_explored_none": 69,
                "num_inputs": 1,
                "num_kept_concrete": 41,
                "num_kept_lambda": 113,
                "num_values_explored": 368,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 368
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9874019753187895,
            "num_unique_values": 155,
            "solution": "Drop(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 11.11111111111111,
                "explored_percent_lambda": 68.94586894586895,
                "explored_percent_none": 19.943019943019944,
                "kept_percent_concrete": 22.602739726027398,
                "kept_percent_lambda": 77.3972602739726,
                "num_examples": 5,
                "num_explored_concrete": 39,
                "num_explored_lambda": 242,
                "num_explored_none": 70,
                "num_inputs": 1,
                "num_kept_concrete": 33,
                "num_kept_lambda": 113,
                "num_values_explored": 351,
                "num_values_kept": 146,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 351
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8427613321691751,
            "num_unique_values": 143,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 35.949367088607595,
                "explored_percent_lambda": 31.139240506329113,
                "explored_percent_none": 32.91139240506329,
                "kept_percent_concrete": 58.64661654135338,
                "kept_percent_lambda": 41.35338345864662,
                "num_examples": 4,
                "num_explored_concrete": 142,
                "num_explored_lambda": 123,
                "num_explored_none": 130,
                "num_inputs": 2,
                "num_kept_concrete": 78,
                "num_kept_lambda": 55,
                "num_values_explored": 395,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 395
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0157013516873121,
            "num_unique_values": 153,
            "solution": "Drop(1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 9.91501416430595,
                "explored_percent_lambda": 71.95467422096317,
                "explored_percent_none": 18.13031161473088,
                "kept_percent_concrete": 16.783216783216783,
                "kept_percent_lambda": 83.21678321678321,
                "num_examples": 4,
                "num_explored_concrete": 35,
                "num_explored_lambda": 254,
                "num_explored_none": 64,
                "num_inputs": 2,
                "num_kept_concrete": 24,
                "num_kept_lambda": 119,
                "num_values_explored": 353,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 353
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.986646693199873,
            "num_unique_values": 151,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 9.859154929577464,
                "explored_percent_lambda": 73.80281690140845,
                "explored_percent_none": 16.338028169014084,
                "kept_percent_concrete": 14.788732394366198,
                "kept_percent_lambda": 85.21126760563381,
                "num_examples": 2,
                "num_explored_concrete": 35,
                "num_explored_lambda": 262,
                "num_explored_none": 58,
                "num_inputs": 1,
                "num_kept_concrete": 21,
                "num_kept_lambda": 121,
                "num_values_explored": 355,
                "num_values_kept": 142,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 355
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.043081959709525,
            "num_unique_values": 152,
            "solution": "Drop(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 8.426966292134832,
                "explored_percent_lambda": 70.78651685393258,
                "explored_percent_none": 20.786516853932586,
                "kept_percent_concrete": 12.587412587412587,
                "kept_percent_lambda": 87.41258741258741,
                "num_examples": 2,
                "num_explored_concrete": 30,
                "num_explored_lambda": 252,
                "num_explored_none": 74,
                "num_inputs": 1,
                "num_kept_concrete": 18,
                "num_kept_lambda": 125,
                "num_values_explored": 356,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 356
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8458967208862305,
            "num_unique_values": 259,
            "solution": "Scanl1(lambda u1, u2: 3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 20.972644376899694,
                "explored_percent_lambda": 49.24012158054711,
                "explored_percent_none": 29.78723404255319,
                "kept_percent_concrete": 29.2,
                "kept_percent_lambda": 70.8,
                "num_examples": 4,
                "num_explored_concrete": 138,
                "num_explored_lambda": 324,
                "num_explored_none": 196,
                "num_inputs": 1,
                "num_kept_concrete": 73,
                "num_kept_lambda": 177,
                "num_values_explored": 658,
                "num_values_kept": 250,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 658
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9370233193039894,
            "num_unique_values": 163,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 28.860759493670887,
                "explored_percent_lambda": 43.79746835443038,
                "explored_percent_none": 27.341772151898734,
                "kept_percent_concrete": 45.751633986928105,
                "kept_percent_lambda": 54.248366013071895,
                "num_examples": 5,
                "num_explored_concrete": 114,
                "num_explored_lambda": 173,
                "num_explored_none": 108,
                "num_inputs": 2,
                "num_kept_concrete": 70,
                "num_kept_lambda": 83,
                "num_values_explored": 395,
                "num_values_kept": 153,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 395
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.9204653408378363,
            "num_unique_values": 367,
            "solution": "Head(Map(lambda u1: (lambda v1: IntDivide(v1, x1))(u1), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 56.75316034597472,
                "explored_percent_lambda": 13.972055888223553,
                "explored_percent_none": 29.27478376580173,
                "kept_percent_concrete": 75.35014005602241,
                "kept_percent_lambda": 24.649859943977592,
                "num_examples": 4,
                "num_explored_concrete": 853,
                "num_explored_lambda": 210,
                "num_explored_none": 440,
                "num_inputs": 2,
                "num_kept_concrete": 269,
                "num_kept_lambda": 88,
                "num_values_explored": 1503,
                "num_values_kept": 357,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1503
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19072827883064747,
            "num_unique_values": 70,
            "solution": "Max(x1, Square(4))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 97.82608695652173,
                "explored_percent_lambda": 2.1739130434782608,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 96.72131147540983,
                "kept_percent_lambda": 3.278688524590164,
                "num_examples": 2,
                "num_explored_concrete": 90,
                "num_explored_lambda": 2,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 2,
                "num_values_explored": 92,
                "num_values_kept": 61,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 92
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9591935873031616,
            "num_unique_values": 336,
            "solution": "Max(Access(2, x1), Multiply(2, Min(4, Head(x1))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 34.02328589909444,
                "explored_percent_lambda": 45.92496765847348,
                "explored_percent_none": 20.051746442432083,
                "kept_percent_concrete": 59.63302752293578,
                "kept_percent_lambda": 40.36697247706422,
                "num_examples": 4,
                "num_explored_concrete": 263,
                "num_explored_lambda": 355,
                "num_explored_none": 155,
                "num_inputs": 1,
                "num_kept_concrete": 195,
                "num_kept_lambda": 132,
                "num_values_explored": 773,
                "num_values_kept": 327,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 773
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.466317569836974,
            "num_unique_values": 275,
            "solution": "Multiply(4, Count(lambda u1: (lambda v1: Less(v1, 1))(u1), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 39.55223880597015,
                "explored_percent_lambda": 38.059701492537314,
                "explored_percent_none": 22.388059701492537,
                "kept_percent_concrete": 48.1203007518797,
                "kept_percent_lambda": 51.8796992481203,
                "num_examples": 2,
                "num_explored_concrete": 371,
                "num_explored_lambda": 357,
                "num_explored_none": 210,
                "num_inputs": 1,
                "num_kept_concrete": 128,
                "num_kept_lambda": 138,
                "num_values_explored": 938,
                "num_values_kept": 266,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 938
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4510235544294119,
            "num_unique_values": 267,
            "solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 36.82170542635659,
                "explored_percent_lambda": 45.93023255813954,
                "explored_percent_none": 17.248062015503876,
                "kept_percent_concrete": 52.52918287937743,
                "kept_percent_lambda": 47.47081712062257,
                "num_examples": 5,
                "num_explored_concrete": 190,
                "num_explored_lambda": 237,
                "num_explored_none": 89,
                "num_inputs": 2,
                "num_kept_concrete": 135,
                "num_kept_lambda": 122,
                "num_values_explored": 516,
                "num_values_kept": 257,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 516
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.9188706781715155,
            "num_unique_values": 470,
            "solution": "Sum(Reverse(Map(lambda u1: (lambda v1: Subtract(1, v1))(u1), x1)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 36.25429553264605,
                "explored_percent_lambda": 30.06872852233677,
                "explored_percent_none": 33.67697594501718,
                "kept_percent_concrete": 45.98698481561822,
                "kept_percent_lambda": 54.01301518438178,
                "num_examples": 3,
                "num_explored_concrete": 633,
                "num_explored_lambda": 525,
                "num_explored_none": 588,
                "num_inputs": 1,
                "num_kept_concrete": 212,
                "num_kept_lambda": 249,
                "num_values_explored": 1746,
                "num_values_kept": 461,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1746
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8599652107805014,
            "num_unique_values": 260,
            "solution": "Scanl1(lambda u1, u2: Sum(Take(3, x2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 28.075253256150507,
                "explored_percent_lambda": 49.204052098408106,
                "explored_percent_none": 22.72069464544139,
                "kept_percent_concrete": 48.0,
                "kept_percent_lambda": 52.0,
                "num_examples": 2,
                "num_explored_concrete": 194,
                "num_explored_lambda": 340,
                "num_explored_none": 157,
                "num_inputs": 2,
                "num_kept_concrete": 120,
                "num_kept_lambda": 130,
                "num_values_explored": 691,
                "num_values_kept": 250,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 691
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8750485964119434,
            "num_unique_values": 245,
            "solution": "ZipWith(lambda u1, u2: (lambda v1, v2: Min(v1, v2))(u1, u2), Sort(x1), Drop(1, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 24.73604826546003,
                "explored_percent_lambda": 44.34389140271493,
                "explored_percent_none": 30.920060331825038,
                "kept_percent_concrete": 26.694915254237287,
                "kept_percent_lambda": 73.30508474576271,
                "num_examples": 3,
                "num_explored_concrete": 164,
                "num_explored_lambda": 294,
                "num_explored_none": 205,
                "num_inputs": 1,
                "num_kept_concrete": 63,
                "num_kept_lambda": 173,
                "num_values_explored": 663,
                "num_values_kept": 236,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 663
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.3708218932151794,
            "num_unique_values": 198,
            "solution": "Sum(Drop(x1, Take(4, x2)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 23.15270935960591,
                "explored_percent_lambda": 39.73727422003284,
                "explored_percent_none": 37.11001642036125,
                "kept_percent_concrete": 51.06382978723404,
                "kept_percent_lambda": 48.93617021276596,
                "num_examples": 3,
                "num_explored_concrete": 141,
                "num_explored_lambda": 242,
                "num_explored_none": 226,
                "num_inputs": 2,
                "num_kept_concrete": 96,
                "num_kept_lambda": 92,
                "num_values_explored": 609,
                "num_values_kept": 188,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 609
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9831123538315296,
            "num_unique_values": 204,
            "solution": "Map(lambda u1: Head(x2), Drop(2, x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 20.763723150357997,
                "explored_percent_lambda": 54.653937947494036,
                "explored_percent_none": 24.58233890214797,
                "kept_percent_concrete": 26.804123711340207,
                "kept_percent_lambda": 73.19587628865979,
                "num_examples": 2,
                "num_explored_concrete": 174,
                "num_explored_lambda": 458,
                "num_explored_none": 206,
                "num_inputs": 2,
                "num_kept_concrete": 52,
                "num_kept_lambda": 142,
                "num_values_explored": 838,
                "num_values_kept": 194,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 838
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.272021545097232,
            "num_unique_values": 251,
            "solution": "Scanl1(lambda u1, u2: Head(x2), ZipWith(lambda u1, u2: Last(x2), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 29.51388888888889,
                "explored_percent_lambda": 39.81481481481482,
                "explored_percent_none": 30.671296296296298,
                "kept_percent_concrete": 41.49377593360996,
                "kept_percent_lambda": 58.50622406639004,
                "num_examples": 3,
                "num_explored_concrete": 255,
                "num_explored_lambda": 344,
                "num_explored_none": 265,
                "num_inputs": 2,
                "num_kept_concrete": 100,
                "num_kept_lambda": 141,
                "num_values_explored": 864,
                "num_values_kept": 241,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 864
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.3480067048221827,
            "num_unique_values": 610,
            "solution": "Min(Add(1, 4), Add(Minimum(x1), Count(lambda u1: (lambda v1: IsEven(v1))(u1), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 56.43212508884151,
                "explored_percent_lambda": 26.226012793176974,
                "explored_percent_none": 17.34186211798152,
                "kept_percent_concrete": 71.0,
                "kept_percent_lambda": 29.0,
                "num_examples": 4,
                "num_explored_concrete": 794,
                "num_explored_lambda": 369,
                "num_explored_none": 244,
                "num_inputs": 2,
                "num_kept_concrete": 426,
                "num_kept_lambda": 174,
                "num_values_explored": 1407,
                "num_values_kept": 600,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1407
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 12.309981543570757,
            "num_unique_values": 1378,
            "solution": "Access(Access(4, x1), Map(lambda u1: (lambda v1: IntDivide(Multiply(3, 4), v1))(u1), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 81.90086402910414,
                "explored_percent_lambda": 10.989843868425043,
                "explored_percent_none": 7.10929210247082,
                "kept_percent_concrete": 76.69831994156318,
                "kept_percent_lambda": 23.301680058436816,
                "num_examples": 5,
                "num_explored_concrete": 5403,
                "num_explored_lambda": 725,
                "num_explored_none": 469,
                "num_inputs": 1,
                "num_kept_concrete": 1050,
                "num_kept_lambda": 319,
                "num_values_explored": 6597,
                "num_values_kept": 1369,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 6597
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.6522190291434526,
            "num_unique_values": 546,
            "solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 58.32521908471276,
                "explored_percent_lambda": 33.49561830574489,
                "explored_percent_none": 8.179162609542356,
                "kept_percent_concrete": 66.7910447761194,
                "kept_percent_lambda": 33.208955223880594,
                "num_examples": 5,
                "num_explored_concrete": 599,
                "num_explored_lambda": 344,
                "num_explored_none": 84,
                "num_inputs": 2,
                "num_kept_concrete": 358,
                "num_kept_lambda": 178,
                "num_values_explored": 1027,
                "num_values_kept": 536,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1027
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.088207671418786,
            "num_unique_values": 249,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Min(2, (lambda v1: IntDivide(v1, x1))(v1)))(u1), x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 29.23832923832924,
                "explored_percent_lambda": 45.45454545454545,
                "explored_percent_none": 25.307125307125308,
                "kept_percent_concrete": 49.37238493723849,
                "kept_percent_lambda": 50.62761506276151,
                "num_examples": 2,
                "num_explored_concrete": 238,
                "num_explored_lambda": 370,
                "num_explored_none": 206,
                "num_inputs": 2,
                "num_kept_concrete": 118,
                "num_kept_lambda": 121,
                "num_values_explored": 814,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 814
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.1172070130705833,
            "num_unique_values": 154,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 35.84521384928717,
                "explored_percent_lambda": 35.64154786150713,
                "explored_percent_none": 28.513238289205702,
                "kept_percent_concrete": 48.95104895104895,
                "kept_percent_lambda": 51.04895104895105,
                "num_examples": 2,
                "num_explored_concrete": 176,
                "num_explored_lambda": 175,
                "num_explored_none": 140,
                "num_inputs": 3,
                "num_kept_concrete": 70,
                "num_kept_lambda": 73,
                "num_values_explored": 491,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 491
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 35.681315844878554,
            "num_unique_values": 926,
            "solution": "Head(ZipWith(lambda u1, u2: (lambda v1: Subtract(Last(x2), v1))(u2), x2, Reverse(x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 64.5550527903469,
                "explored_percent_lambda": 19.720965309200604,
                "explored_percent_none": 15.723981900452488,
                "kept_percent_concrete": 73.47161572052401,
                "kept_percent_lambda": 26.528384279475983,
                "num_examples": 5,
                "num_explored_concrete": 1712,
                "num_explored_lambda": 523,
                "num_explored_none": 417,
                "num_inputs": 2,
                "num_kept_concrete": 673,
                "num_kept_lambda": 243,
                "num_values_explored": 2652,
                "num_values_kept": 916,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 18688
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.115308014675975,
            "num_unique_values": 236,
            "solution": "Subtract(Subtract(Square(3), IntDivide(x1, 4)), Add(1, 4))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 26.119766309639726,
                "explored_percent_lambda": 9.323271665043817,
                "explored_percent_none": 64.55696202531645,
                "kept_percent_concrete": 92.0704845814978,
                "kept_percent_lambda": 7.929515418502203,
                "num_examples": 5,
                "num_explored_concrete": 1073,
                "num_explored_lambda": 383,
                "num_explored_none": 2652,
                "num_inputs": 1,
                "num_kept_concrete": 209,
                "num_kept_lambda": 18,
                "num_values_explored": 4108,
                "num_values_kept": 227,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4108
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6370132118463516,
            "num_unique_values": 231,
            "solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 20.123839009287927,
                "explored_percent_lambda": 57.43034055727554,
                "explored_percent_none": 22.445820433436534,
                "kept_percent_concrete": 38.288288288288285,
                "kept_percent_lambda": 61.711711711711715,
                "num_examples": 3,
                "num_explored_concrete": 130,
                "num_explored_lambda": 371,
                "num_explored_none": 145,
                "num_inputs": 1,
                "num_kept_concrete": 85,
                "num_kept_lambda": 137,
                "num_values_explored": 646,
                "num_values_kept": 222,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 646
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 34.152399683371186,
            "num_unique_values": 816,
            "solution": "Add(-1, Subtract(Last(x2), Multiply(Add(x1, -1), Add(x1, 1))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 78.16091954022988,
                "explored_percent_lambda": 14.211076280041798,
                "explored_percent_none": 7.628004179728317,
                "kept_percent_concrete": 83.12655086848635,
                "kept_percent_lambda": 16.87344913151365,
                "num_examples": 5,
                "num_explored_concrete": 1496,
                "num_explored_lambda": 272,
                "num_explored_none": 146,
                "num_inputs": 2,
                "num_kept_concrete": 670,
                "num_kept_lambda": 136,
                "num_values_explored": 1914,
                "num_values_kept": 806,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 17234
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.119675999507308,
            "num_unique_values": 538,
            "solution": "Scanl1(lambda u1, u2: Multiply(-1, Last(x1)), Map(lambda u1: Head(x2), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 56.58572479764533,
                "explored_percent_lambda": 31.71449595290655,
                "explored_percent_none": 11.699779249448124,
                "kept_percent_concrete": 64.96212121212122,
                "kept_percent_lambda": 35.03787878787879,
                "num_examples": 3,
                "num_explored_concrete": 769,
                "num_explored_lambda": 431,
                "num_explored_none": 159,
                "num_inputs": 2,
                "num_kept_concrete": 343,
                "num_kept_lambda": 185,
                "num_values_explored": 1359,
                "num_values_kept": 528,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1359
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.570852557197213,
            "num_unique_values": 143,
            "solution": "Multiply(Square(x1), Max(4, Add(x1, 3)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 22.321873442949677,
                "explored_percent_lambda": 11.858495266567015,
                "explored_percent_none": 65.81963129048331,
                "kept_percent_concrete": 82.08955223880596,
                "kept_percent_lambda": 17.91044776119403,
                "num_examples": 2,
                "num_explored_concrete": 448,
                "num_explored_lambda": 238,
                "num_explored_none": 1321,
                "num_inputs": 1,
                "num_kept_concrete": 110,
                "num_kept_lambda": 24,
                "num_values_explored": 2007,
                "num_values_kept": 134,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2007
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9753469582647085,
            "num_unique_values": 252,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.15841584158416,
                "explored_percent_lambda": 42.07920792079208,
                "explored_percent_none": 23.762376237623762,
                "kept_percent_concrete": 51.239669421487605,
                "kept_percent_lambda": 48.760330578512395,
                "num_examples": 5,
                "num_explored_concrete": 276,
                "num_explored_lambda": 340,
                "num_explored_none": 192,
                "num_inputs": 2,
                "num_kept_concrete": 124,
                "num_kept_lambda": 118,
                "num_values_explored": 808,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 808
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.531496472656727,
            "num_unique_values": 387,
            "solution": "If(IsEven(Sum(x1)), Square(Minimum(x2)), Square(Last(x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 42.73255813953488,
                "explored_percent_lambda": 40.89147286821706,
                "explored_percent_none": 16.375968992248062,
                "kept_percent_concrete": 50.6631299734748,
                "kept_percent_lambda": 49.3368700265252,
                "num_examples": 3,
                "num_explored_concrete": 441,
                "num_explored_lambda": 422,
                "num_explored_none": 169,
                "num_inputs": 2,
                "num_kept_concrete": 191,
                "num_kept_lambda": 186,
                "num_values_explored": 1032,
                "num_values_kept": 377,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1032
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9935086444020271,
            "num_unique_values": 263,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 22.10095497953615,
                "explored_percent_lambda": 57.298772169167805,
                "explored_percent_none": 20.600272851296044,
                "kept_percent_concrete": 36.22047244094488,
                "kept_percent_lambda": 63.77952755905512,
                "num_examples": 2,
                "num_explored_concrete": 162,
                "num_explored_lambda": 420,
                "num_explored_none": 151,
                "num_inputs": 1,
                "num_kept_concrete": 92,
                "num_kept_lambda": 162,
                "num_values_explored": 733,
                "num_values_kept": 254,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 733
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 32.49471287801862,
            "num_unique_values": 256,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 25.36806342015855,
                "explored_percent_lambda": 49.49037372593431,
                "explored_percent_none": 25.141562853907136,
                "kept_percent_concrete": 31.57894736842105,
                "kept_percent_lambda": 68.42105263157895,
                "num_examples": 4,
                "num_explored_concrete": 224,
                "num_explored_lambda": 437,
                "num_explored_none": 222,
                "num_inputs": 1,
                "num_kept_concrete": 78,
                "num_kept_lambda": 169,
                "num_values_explored": 883,
                "num_values_kept": 247,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 13957
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.4823396895080805,
            "num_unique_values": 527,
            "solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 51.23626373626374,
                "explored_percent_lambda": 29.945054945054945,
                "explored_percent_none": 18.818681318681318,
                "kept_percent_concrete": 60.928433268858804,
                "kept_percent_lambda": 39.071566731141196,
                "num_examples": 5,
                "num_explored_concrete": 746,
                "num_explored_lambda": 436,
                "num_explored_none": 274,
                "num_inputs": 2,
                "num_kept_concrete": 315,
                "num_kept_lambda": 202,
                "num_values_explored": 1456,
                "num_values_kept": 517,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1456
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 165.86302604340017,
            "num_unique_values": 1011,
            "solution": "Subtract(Multiply(-1, Sum(x2)), If(IsEven(x1), 3, Multiply(x1, -1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 79.60802613159123,
                "explored_percent_lambda": 6.719552029864675,
                "explored_percent_none": 13.672421838544096,
                "kept_percent_concrete": 82.0,
                "kept_percent_lambda": 18.0,
                "num_examples": 2,
                "num_explored_concrete": 6824,
                "num_explored_lambda": 576,
                "num_explored_none": 1172,
                "num_inputs": 3,
                "num_kept_concrete": 820,
                "num_kept_lambda": 180,
                "num_values_explored": 8572,
                "num_values_kept": 1000,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 92737
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8730767667293549,
            "num_unique_values": 265,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 21.08626198083067,
                "explored_percent_lambda": 51.43769968051118,
                "explored_percent_none": 27.476038338658146,
                "kept_percent_concrete": 29.6875,
                "kept_percent_lambda": 70.3125,
                "num_examples": 2,
                "num_explored_concrete": 132,
                "num_explored_lambda": 322,
                "num_explored_none": 172,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 180,
                "num_values_explored": 626,
                "num_values_kept": 256,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 626
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8574245888739824,
            "num_unique_values": 264,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), Map(lambda u1: Head(x1), x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 30.44822256568779,
                "explored_percent_lambda": 43.276661514683155,
                "explored_percent_none": 26.27511591962906,
                "kept_percent_concrete": 38.03921568627451,
                "kept_percent_lambda": 61.96078431372549,
                "num_examples": 2,
                "num_explored_concrete": 197,
                "num_explored_lambda": 280,
                "num_explored_none": 170,
                "num_inputs": 1,
                "num_kept_concrete": 97,
                "num_kept_lambda": 158,
                "num_values_explored": 647,
                "num_values_kept": 255,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 647
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.683844931423664,
            "num_unique_values": 126,
            "solution": "Add(Subtract(x1, x2), Square(IntDivide(3, x2)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 23.076923076923077,
                "explored_percent_lambda": 12.32741617357002,
                "explored_percent_none": 64.5956607495069,
                "kept_percent_concrete": 79.3103448275862,
                "kept_percent_lambda": 20.689655172413794,
                "num_examples": 2,
                "num_explored_concrete": 468,
                "num_explored_lambda": 250,
                "num_explored_none": 1310,
                "num_inputs": 2,
                "num_kept_concrete": 92,
                "num_kept_lambda": 24,
                "num_values_explored": 2028,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2028
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.549820406362414,
            "num_unique_values": 361,
            "solution": "Map(lambda u1: Add(Max(4, IntDivide(x2, 4)), -1), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 43.52103120759837,
                "explored_percent_lambda": 14.789687924016283,
                "explored_percent_none": 41.689280868385346,
                "kept_percent_concrete": 68.09116809116809,
                "kept_percent_lambda": 31.90883190883191,
                "num_examples": 4,
                "num_explored_concrete": 1283,
                "num_explored_lambda": 436,
                "num_explored_none": 1229,
                "num_inputs": 2,
                "num_kept_concrete": 239,
                "num_kept_lambda": 112,
                "num_values_explored": 2948,
                "num_values_kept": 351,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2948
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.594630865380168,
            "num_unique_values": 221,
            "solution": "Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Take(2, x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 21.962616822429908,
                "explored_percent_lambda": 49.22118380062305,
                "explored_percent_none": 28.81619937694704,
                "kept_percent_concrete": 39.33649289099526,
                "kept_percent_lambda": 60.66350710900474,
                "num_examples": 3,
                "num_explored_concrete": 141,
                "num_explored_lambda": 316,
                "num_explored_none": 185,
                "num_inputs": 2,
                "num_kept_concrete": 83,
                "num_kept_lambda": 128,
                "num_values_explored": 642,
                "num_values_kept": 211,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 642
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.381570816040039,
            "num_unique_values": 516,
            "solution": "Subtract(Square(Add(2, 4)), If(IsOdd(Head(x1)), 2, 4))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 51.00539480137322,
                "explored_percent_lambda": 23.589995095635114,
                "explored_percent_none": 25.40461010299166,
                "kept_percent_concrete": 64.49704142011835,
                "kept_percent_lambda": 35.50295857988166,
                "num_examples": 4,
                "num_explored_concrete": 1040,
                "num_explored_lambda": 481,
                "num_explored_none": 518,
                "num_inputs": 1,
                "num_kept_concrete": 327,
                "num_kept_lambda": 180,
                "num_values_explored": 2039,
                "num_values_kept": 507,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2039
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.805141769349575,
            "num_unique_values": 129,
            "solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 92.67734553775743,
                "explored_percent_lambda": 7.322654462242563,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 73.33333333333333,
                "kept_percent_lambda": 26.666666666666668,
                "num_examples": 5,
                "num_explored_concrete": 405,
                "num_explored_lambda": 32,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 88,
                "num_kept_lambda": 32,
                "num_values_explored": 437,
                "num_values_kept": 120,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 437
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7904442939907312,
            "num_unique_values": 237,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 32.341526520051744,
                "explored_percent_lambda": 30.91849935316947,
                "explored_percent_none": 36.73997412677878,
                "kept_percent_concrete": 52.21238938053097,
                "kept_percent_lambda": 47.78761061946903,
                "num_examples": 2,
                "num_explored_concrete": 250,
                "num_explored_lambda": 239,
                "num_explored_none": 284,
                "num_inputs": 3,
                "num_kept_concrete": 118,
                "num_kept_lambda": 108,
                "num_values_explored": 773,
                "num_values_kept": 226,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 773
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6437622252851725,
            "num_unique_values": 186,
            "solution": "Max(Add(x1, 2), Add(x1, Add(x2, 3)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 21.867199201198204,
                "explored_percent_lambda": 14.278582126809786,
                "explored_percent_none": 63.854218671992015,
                "kept_percent_concrete": 83.52272727272727,
                "kept_percent_lambda": 16.477272727272727,
                "num_examples": 2,
                "num_explored_concrete": 438,
                "num_explored_lambda": 286,
                "num_explored_none": 1279,
                "num_inputs": 2,
                "num_kept_concrete": 147,
                "num_kept_lambda": 29,
                "num_values_explored": 2003,
                "num_values_kept": 176,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2003
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7650211118161678,
            "num_unique_values": 244,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, (lambda v1: Add(x1, v1))(v1)))(u2), x2, x3)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 35.10928961748634,
                "explored_percent_lambda": 35.51912568306011,
                "explored_percent_none": 29.371584699453553,
                "kept_percent_concrete": 56.223175965665234,
                "kept_percent_lambda": 43.776824034334766,
                "num_examples": 4,
                "num_explored_concrete": 257,
                "num_explored_lambda": 260,
                "num_explored_none": 215,
                "num_inputs": 3,
                "num_kept_concrete": 131,
                "num_kept_lambda": 102,
                "num_values_explored": 732,
                "num_values_kept": 233,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 732
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.5227564964443445,
            "num_unique_values": 768,
            "solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 72.62008733624454,
                "explored_percent_lambda": 17.816593886462883,
                "explored_percent_none": 9.563318777292576,
                "kept_percent_concrete": 73.44782034346103,
                "kept_percent_lambda": 26.55217965653897,
                "num_examples": 4,
                "num_explored_concrete": 1663,
                "num_explored_lambda": 408,
                "num_explored_none": 219,
                "num_inputs": 3,
                "num_kept_concrete": 556,
                "num_kept_lambda": 201,
                "num_values_explored": 2290,
                "num_values_kept": 757,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2290
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.5570538844913,
            "num_unique_values": 122,
            "solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 22.22222222222222,
                "explored_percent_lambda": 11.814982403217698,
                "explored_percent_none": 65.96279537456007,
                "kept_percent_concrete": 85.71428571428571,
                "kept_percent_lambda": 14.285714285714286,
                "num_examples": 4,
                "num_explored_concrete": 442,
                "num_explored_lambda": 235,
                "num_explored_none": 1312,
                "num_inputs": 2,
                "num_kept_concrete": 96,
                "num_kept_lambda": 16,
                "num_values_explored": 1989,
                "num_values_kept": 112,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 174677
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.0810214448720217,
            "num_unique_values": 248,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), Take(3, x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 29.30817610062893,
                "explored_percent_lambda": 50.691823899371066,
                "explored_percent_none": 20.0,
                "kept_percent_concrete": 45.60669456066945,
                "kept_percent_lambda": 54.39330543933055,
                "num_examples": 5,
                "num_explored_concrete": 233,
                "num_explored_lambda": 403,
                "num_explored_none": 159,
                "num_inputs": 1,
                "num_kept_concrete": 109,
                "num_kept_lambda": 130,
                "num_values_explored": 795,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 795
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5943319890648127,
            "num_unique_values": 263,
            "solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 40.03115264797508,
                "explored_percent_lambda": 32.71028037383178,
                "explored_percent_none": 27.258566978193148,
                "kept_percent_concrete": 68.25396825396825,
                "kept_percent_lambda": 31.746031746031747,
                "num_examples": 5,
                "num_explored_concrete": 257,
                "num_explored_lambda": 210,
                "num_explored_none": 175,
                "num_inputs": 3,
                "num_kept_concrete": 172,
                "num_kept_lambda": 80,
                "num_values_explored": 642,
                "num_values_kept": 252,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 642
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 33.33931014314294,
            "num_unique_values": 458,
            "solution": "Reverse(Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), Reverse(x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 42.54261363636363,
                "explored_percent_lambda": 38.77840909090909,
                "explored_percent_none": 18.678977272727273,
                "kept_percent_concrete": 45.657015590200444,
                "kept_percent_lambda": 54.342984409799556,
                "num_examples": 3,
                "num_explored_concrete": 599,
                "num_explored_lambda": 546,
                "num_explored_none": 263,
                "num_inputs": 1,
                "num_kept_concrete": 205,
                "num_kept_lambda": 244,
                "num_values_explored": 1408,
                "num_values_kept": 449,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 15894
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9849545154720545,
            "num_unique_values": 243,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 30.429447852760735,
                "explored_percent_lambda": 40.98159509202454,
                "explored_percent_none": 28.588957055214724,
                "kept_percent_concrete": 48.497854077253216,
                "kept_percent_lambda": 51.502145922746784,
                "num_examples": 4,
                "num_explored_concrete": 248,
                "num_explored_lambda": 334,
                "num_explored_none": 233,
                "num_inputs": 2,
                "num_kept_concrete": 113,
                "num_kept_lambda": 120,
                "num_values_explored": 815,
                "num_values_kept": 233,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 815
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 505.9184919036925,
            "num_unique_values": 2106,
            "solution": "Scanl1(lambda u1, u2: (lambda v1: Min(Access(x2, x3), (lambda v1: Max(-1, v1))(v1)))(u2), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 74.99181133311497,
                "explored_percent_lambda": 13.232885686210285,
                "explored_percent_none": 11.775302980674747,
                "kept_percent_concrete": 65.44152744630071,
                "kept_percent_lambda": 34.55847255369928,
                "num_examples": 5,
                "num_explored_concrete": 9158,
                "num_explored_lambda": 1616,
                "num_explored_none": 1438,
                "num_inputs": 3,
                "num_kept_concrete": 1371,
                "num_kept_lambda": 724,
                "num_values_explored": 12212,
                "num_values_kept": 2095,
                "temperature": 1.0,
                "total_num_restarts": 17,
                "total_num_values_explored": 251166
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9887282382696867,
            "num_unique_values": 229,
            "solution": "ZipWith(lambda u1, u2: Sum(x1), x2, Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 27.770534550195567,
                "explored_percent_lambda": 51.62972620599739,
                "explored_percent_none": 20.59973924380704,
                "kept_percent_concrete": 41.0958904109589,
                "kept_percent_lambda": 58.9041095890411,
                "num_examples": 5,
                "num_explored_concrete": 213,
                "num_explored_lambda": 396,
                "num_explored_none": 158,
                "num_inputs": 2,
                "num_kept_concrete": 90,
                "num_kept_lambda": 129,
                "num_values_explored": 767,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 767
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.2373586911708117,
            "num_unique_values": 276,
            "solution": "Min(Subtract(x1, 3), Subtract(Add(x1, 2), Head(x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 34.27947598253275,
                "explored_percent_lambda": 21.324599708879184,
                "explored_percent_none": 44.395924308588064,
                "kept_percent_concrete": 62.78195488721804,
                "kept_percent_lambda": 37.21804511278196,
                "num_examples": 5,
                "num_explored_concrete": 471,
                "num_explored_lambda": 293,
                "num_explored_none": 610,
                "num_inputs": 2,
                "num_kept_concrete": 167,
                "num_kept_lambda": 99,
                "num_values_explored": 1374,
                "num_values_kept": 266,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1374
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 87.14237917214632,
            "num_unique_values": 1344,
            "solution": "Map(lambda u1: (lambda v1: IntDivide(v1, x1))(u1), Map(lambda u1: (lambda v1: IntDivide(v1, 4))(u1), x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 66.35870810109185,
                "explored_percent_lambda": 16.988623348858518,
                "explored_percent_none": 16.65266855004963,
                "kept_percent_concrete": 58.02098950524738,
                "kept_percent_lambda": 41.97901049475262,
                "num_examples": 2,
                "num_explored_concrete": 8691,
                "num_explored_lambda": 2225,
                "num_explored_none": 2181,
                "num_inputs": 2,
                "num_kept_concrete": 774,
                "num_kept_lambda": 560,
                "num_values_explored": 13097,
                "num_values_kept": 1334,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 41650
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 72.39577502198517,
            "num_unique_values": 347,
            "solution": "Subtract(Subtract(x1, Square(Square(3))), Square(3))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 28.946560196560196,
                "explored_percent_lambda": 12.438574938574938,
                "explored_percent_none": 58.61486486486486,
                "kept_percent_concrete": 80.4733727810651,
                "kept_percent_lambda": 19.526627218934912,
                "num_examples": 4,
                "num_explored_concrete": 1885,
                "num_explored_lambda": 810,
                "num_explored_none": 3817,
                "num_inputs": 1,
                "num_kept_concrete": 272,
                "num_kept_lambda": 66,
                "num_values_explored": 6512,
                "num_values_kept": 338,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 38393
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5186887234449387,
            "num_unique_values": 219,
            "solution": "Map(lambda u1: (lambda v1: If(IsOdd(x2), v1, 3))(u1), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 27.24550898203593,
                "explored_percent_lambda": 39.37125748502994,
                "explored_percent_none": 33.383233532934135,
                "kept_percent_concrete": 47.84688995215311,
                "kept_percent_lambda": 52.15311004784689,
                "num_examples": 4,
                "num_explored_concrete": 182,
                "num_explored_lambda": 263,
                "num_explored_none": 223,
                "num_inputs": 2,
                "num_kept_concrete": 100,
                "num_kept_lambda": 109,
                "num_values_explored": 668,
                "num_values_kept": 209,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 668
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 15.236460452899337,
            "num_unique_values": 1382,
            "solution": "Add(3, Subtract(Multiply(-1, Sum(Drop(3, Reverse(x1)))), Square(4)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 82.610831388923,
                "explored_percent_lambda": 10.598059683163454,
                "explored_percent_none": 6.7911089279135455,
                "kept_percent_concrete": 79.60670065549891,
                "kept_percent_lambda": 20.39329934450109,
                "num_examples": 3,
                "num_explored_concrete": 6727,
                "num_explored_lambda": 863,
                "num_explored_none": 553,
                "num_inputs": 1,
                "num_kept_concrete": 1093,
                "num_kept_lambda": 280,
                "num_values_explored": 8143,
                "num_values_kept": 1373,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 8143
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.26050665602088,
            "num_unique_values": 456,
            "solution": "Reverse(Scanl1(lambda u1, u2: Add(x1, -1), Map(lambda u1: (lambda v1: Add(-1, v1))(u1), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 33.650615901455765,
                "explored_percent_lambda": 35.94624860022397,
                "explored_percent_none": 30.403135498320268,
                "kept_percent_concrete": 36.54708520179372,
                "kept_percent_lambda": 63.45291479820628,
                "num_examples": 2,
                "num_explored_concrete": 601,
                "num_explored_lambda": 642,
                "num_explored_none": 543,
                "num_inputs": 2,
                "num_kept_concrete": 163,
                "num_kept_lambda": 283,
                "num_values_explored": 1786,
                "num_values_kept": 446,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1786
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.614160368219018,
            "num_unique_values": 240,
            "solution": "Subtract(IntDivide(Subtract(Square(3), x1), Add(2, 4)), 4)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 26.50688182249644,
                "explored_percent_lambda": 11.343141907925961,
                "explored_percent_none": 62.1499762695776,
                "kept_percent_concrete": 82.68398268398268,
                "kept_percent_lambda": 17.316017316017316,
                "num_examples": 4,
                "num_explored_concrete": 1117,
                "num_explored_lambda": 478,
                "num_explored_none": 2619,
                "num_inputs": 1,
                "num_kept_concrete": 191,
                "num_kept_lambda": 40,
                "num_values_explored": 4214,
                "num_values_kept": 231,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4214
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.85507347993553,
            "num_unique_values": 1575,
            "solution": "Scanl1(lambda u1, u2: Add(-1, Add(-1, IntDivide(Last(x1), Head(x2)))), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 82.20520959760994,
                "explored_percent_lambda": 11.520866399029035,
                "explored_percent_none": 6.273924003361031,
                "kept_percent_concrete": 74.63258785942492,
                "kept_percent_lambda": 25.36741214057508,
                "num_examples": 2,
                "num_explored_concrete": 8805,
                "num_explored_lambda": 1234,
                "num_explored_none": 672,
                "num_inputs": 2,
                "num_kept_concrete": 1168,
                "num_kept_lambda": 397,
                "num_values_explored": 10711,
                "num_values_kept": 1565,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 26108
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.9589750058949,
            "num_unique_values": 2497,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 84.04228542662975,
                "explored_percent_lambda": 5.254215957714574,
                "explored_percent_none": 10.703498615655676,
                "kept_percent_concrete": 88.29915560916767,
                "kept_percent_lambda": 11.700844390832328,
                "num_examples": 5,
                "num_explored_concrete": 13356,
                "num_explored_lambda": 835,
                "num_explored_none": 1701,
                "num_inputs": 2,
                "num_kept_concrete": 2196,
                "num_kept_lambda": 291,
                "num_values_explored": 15892,
                "num_values_kept": 2487,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 315828
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.2212370969355106,
            "num_unique_values": 542,
            "solution": "Scanl1(lambda u1, u2: Subtract(-1, 2), Map(lambda u1: Subtract(Minimum(x1), 4), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 66.89466484268125,
                "explored_percent_lambda": 27.428180574555405,
                "explored_percent_none": 5.677154582763338,
                "kept_percent_concrete": 57.97373358348968,
                "kept_percent_lambda": 42.02626641651032,
                "num_examples": 3,
                "num_explored_concrete": 978,
                "num_explored_lambda": 401,
                "num_explored_none": 83,
                "num_inputs": 1,
                "num_kept_concrete": 309,
                "num_kept_lambda": 224,
                "num_values_explored": 1462,
                "num_values_kept": 533,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1462
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.7013579085469246,
            "num_unique_values": 785,
            "solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 71.46974063400576,
                "explored_percent_lambda": 22.01729106628242,
                "explored_percent_none": 6.512968299711815,
                "kept_percent_concrete": 72.38709677419355,
                "kept_percent_lambda": 27.612903225806452,
                "num_examples": 5,
                "num_explored_concrete": 1240,
                "num_explored_lambda": 382,
                "num_explored_none": 113,
                "num_inputs": 2,
                "num_kept_concrete": 561,
                "num_kept_lambda": 214,
                "num_values_explored": 1735,
                "num_values_kept": 775,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1735
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.139265045523643,
            "num_unique_values": 1286,
            "solution": "Reverse(Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), Reverse(x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 49.33158010081087,
                "explored_percent_lambda": 40.14902476440938,
                "explored_percent_none": 10.51939513477975,
                "kept_percent_concrete": 33.046202036021924,
                "kept_percent_lambda": 66.95379796397808,
                "num_examples": 2,
                "num_explored_concrete": 2251,
                "num_explored_lambda": 1832,
                "num_explored_none": 480,
                "num_inputs": 1,
                "num_kept_concrete": 422,
                "num_kept_lambda": 855,
                "num_values_explored": 4563,
                "num_values_kept": 1277,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 4563
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.672716062515974,
            "num_unique_values": 243,
            "solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u1), x2, x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 28.21997105643994,
                "explored_percent_lambda": 35.74529667149059,
                "explored_percent_none": 36.03473227206946,
                "kept_percent_concrete": 55.60344827586207,
                "kept_percent_lambda": 44.39655172413793,
                "num_examples": 4,
                "num_explored_concrete": 195,
                "num_explored_lambda": 247,
                "num_explored_none": 249,
                "num_inputs": 3,
                "num_kept_concrete": 129,
                "num_kept_lambda": 103,
                "num_values_explored": 691,
                "num_values_kept": 232,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 691
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 24.818762730807066,
            "num_unique_values": 1030,
            "solution": "Map(lambda u1: Add(-1, Subtract(Head(x1), IntDivide(Head(x1), 4))), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 45.757829198029924,
                "explored_percent_lambda": 25.778273394665923,
                "explored_percent_none": 28.463897407304152,
                "kept_percent_concrete": 41.429970617042116,
                "kept_percent_lambda": 58.570029382957884,
                "num_examples": 2,
                "num_explored_concrete": 4924,
                "num_explored_lambda": 2774,
                "num_explored_none": 3063,
                "num_inputs": 1,
                "num_kept_concrete": 423,
                "num_kept_lambda": 598,
                "num_values_explored": 10761,
                "num_values_kept": 1021,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 10761
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.9488373380154,
            "num_unique_values": 2525,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 87.34768721164083,
                "explored_percent_lambda": 5.690287471903466,
                "explored_percent_none": 6.962025316455696,
                "kept_percent_concrete": 88.26571201272871,
                "kept_percent_lambda": 11.73428798727128,
                "num_examples": 4,
                "num_explored_concrete": 14767,
                "num_explored_lambda": 962,
                "num_explored_none": 1177,
                "num_inputs": 3,
                "num_kept_concrete": 2219,
                "num_kept_lambda": 295,
                "num_values_explored": 16906,
                "num_values_kept": 2514,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 331836
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 601.1714263800532,
            "num_unique_values": 2229,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.05214386681325,
                "explored_percent_lambda": 37.89068635149992,
                "explored_percent_none": 8.057169781686822,
                "kept_percent_concrete": 37.027027027027025,
                "kept_percent_lambda": 62.972972972972975,
                "num_examples": 3,
                "num_explored_concrete": 6883,
                "num_explored_lambda": 4825,
                "num_explored_none": 1026,
                "num_inputs": 1,
                "num_kept_concrete": 822,
                "num_kept_lambda": 1398,
                "num_values_explored": 12734,
                "num_values_kept": 2220,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 252286
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.4241419043392,
            "num_unique_values": 814,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.998877035373386,
                "explored_percent_lambda": 9.124087591240876,
                "explored_percent_none": 58.87703537338574,
                "kept_percent_concrete": 89.3167701863354,
                "kept_percent_lambda": 10.683229813664596,
                "num_examples": 4,
                "num_explored_concrete": 5699,
                "num_explored_lambda": 1625,
                "num_explored_none": 10486,
                "num_inputs": 1,
                "num_kept_concrete": 719,
                "num_kept_lambda": 86,
                "num_values_explored": 17810,
                "num_values_kept": 805,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 343734
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 13.511230062693357,
            "num_unique_values": 1258,
            "solution": "Scanl1(lambda u1, u2: Square(Sum(Scanl1(lambda u1, u2: 4, x1))), Map(lambda u1: (lambda v1: Square(v1))(u1), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 70.52566671805148,
                "explored_percent_lambda": 21.489132110374594,
                "explored_percent_none": 7.985201171573917,
                "kept_percent_concrete": 52.281825460368296,
                "kept_percent_lambda": 47.718174539631704,
                "num_examples": 2,
                "num_explored_concrete": 4575,
                "num_explored_lambda": 1394,
                "num_explored_none": 518,
                "num_inputs": 1,
                "num_kept_concrete": 653,
                "num_kept_lambda": 596,
                "num_values_explored": 6487,
                "num_values_kept": 1249,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 6487
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 24.531505534425378,
            "num_unique_values": 1921,
            "solution": "Map(lambda u1: If(IsOdd(Sum(x1)), Square(3), Sum(Drop(1, x1))), x3)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 82.05239542625561,
                "explored_percent_lambda": 10.41395281516862,
                "explored_percent_none": 7.533651758575771,
                "kept_percent_concrete": 75.49738219895288,
                "kept_percent_lambda": 24.50261780104712,
                "num_examples": 5,
                "num_explored_concrete": 11338,
                "num_explored_lambda": 1439,
                "num_explored_none": 1041,
                "num_inputs": 3,
                "num_kept_concrete": 1442,
                "num_kept_lambda": 468,
                "num_values_explored": 13818,
                "num_values_kept": 1910,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 13818
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.298163644969463,
            "num_unique_values": 505,
            "solution": "Scanl1(lambda u1, u2: Last(x2), Take(3, Map(lambda u1: Add(-1, -1), x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 54.76784822765851,
                "explored_percent_lambda": 32.10184722915626,
                "explored_percent_none": 13.130304543185222,
                "kept_percent_concrete": 45.45454545454545,
                "kept_percent_lambda": 54.54545454545455,
                "num_examples": 2,
                "num_explored_concrete": 1097,
                "num_explored_lambda": 643,
                "num_explored_none": 263,
                "num_inputs": 2,
                "num_kept_concrete": 225,
                "num_kept_lambda": 270,
                "num_values_explored": 2003,
                "num_values_kept": 495,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2003
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 51.316189056262374,
            "num_unique_values": 1128,
            "solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square(v1))(v1)))(u1), Map(lambda u1: (lambda v1: Square(v1))(u1), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 49.82141034799469,
                "explored_percent_lambda": 24.97193591182774,
                "explored_percent_none": 25.20665374017757,
                "kept_percent_concrete": 45.1295799821269,
                "kept_percent_lambda": 54.8704200178731,
                "num_examples": 3,
                "num_explored_concrete": 4882,
                "num_explored_lambda": 2447,
                "num_explored_none": 2470,
                "num_inputs": 1,
                "num_kept_concrete": 505,
                "num_kept_lambda": 614,
                "num_values_explored": 9799,
                "num_values_kept": 1119,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 23612
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 66.71405949816108,
            "num_unique_values": 1184,
            "solution": "If(IsEven(x2), 2, Subtract(Sum(Scanl1(lambda u1, u2: x2, x1)), Maximum(x3)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 81.6539655659046,
                "explored_percent_lambda": 11.882585379621789,
                "explored_percent_none": 6.46344905447361,
                "kept_percent_concrete": 80.98891730605285,
                "kept_percent_lambda": 19.011082693947145,
                "num_examples": 5,
                "num_explored_concrete": 2893,
                "num_explored_lambda": 421,
                "num_explored_none": 229,
                "num_inputs": 3,
                "num_kept_concrete": 950,
                "num_kept_lambda": 223,
                "num_values_explored": 3543,
                "num_values_kept": 1173,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 37025
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 38.931134233251214,
            "num_unique_values": 958,
            "solution": "Scanl1(lambda u1, u2: Min(-1, IntDivide(x1, Head(x3))), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 66.21862028068789,
                "explored_percent_lambda": 11.543783356394544,
                "explored_percent_none": 22.23759636291757,
                "kept_percent_concrete": 71.91129883843718,
                "kept_percent_lambda": 28.08870116156283,
                "num_examples": 4,
                "num_explored_concrete": 3350,
                "num_explored_lambda": 584,
                "num_explored_none": 1125,
                "num_inputs": 3,
                "num_kept_concrete": 681,
                "num_kept_lambda": 266,
                "num_values_explored": 5059,
                "num_values_kept": 947,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 22083
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.73413904197514,
            "num_unique_values": 1380,
            "solution": "Take(-1, Scanl1(lambda u1, u2: 0, Map(lambda u1: Subtract(4, Access(1, x1)), x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 67.82102784319157,
                "explored_percent_lambda": 26.430253497714364,
                "explored_percent_none": 5.748718659094058,
                "kept_percent_concrete": 52.589350838803796,
                "kept_percent_lambda": 47.410649161196204,
                "num_examples": 2,
                "num_explored_concrete": 4896,
                "num_explored_lambda": 1908,
                "num_explored_none": 415,
                "num_inputs": 1,
                "num_kept_concrete": 721,
                "num_kept_lambda": 650,
                "num_values_explored": 7219,
                "num_values_kept": 1371,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 7219
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 168.20466660521924,
            "num_unique_values": 1773,
            "solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 89.17283727650351,
                "explored_percent_lambda": 7.44085244717356,
                "explored_percent_none": 3.3863102763229187,
                "kept_percent_concrete": 86.89733408961996,
                "kept_percent_lambda": 13.102665910380034,
                "num_examples": 3,
                "num_explored_concrete": 9875,
                "num_explored_lambda": 824,
                "num_explored_none": 375,
                "num_inputs": 2,
                "num_kept_concrete": 1532,
                "num_kept_lambda": 231,
                "num_values_explored": 11074,
                "num_values_kept": 1763,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 98117
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3397599346936,
            "num_unique_values": 776,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.76794069712423,
                "explored_percent_lambda": 6.00914778402818,
                "explored_percent_none": 60.22291151884759,
                "kept_percent_concrete": 93.73368146214099,
                "kept_percent_lambda": 6.266318537859008,
                "num_examples": 4,
                "num_explored_concrete": 6423,
                "num_explored_lambda": 1143,
                "num_explored_none": 11455,
                "num_inputs": 2,
                "num_kept_concrete": 718,
                "num_kept_lambda": 48,
                "num_values_explored": 19021,
                "num_values_kept": 766,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 375451
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 153.2719932217151,
            "num_unique_values": 588,
            "solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Multiply(2, v1))(u1), x1))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 56.582633053221286,
                "explored_percent_lambda": 29.061624649859944,
                "explored_percent_none": 14.355742296918768,
                "kept_percent_concrete": 73.05699481865285,
                "kept_percent_lambda": 26.94300518134715,
                "num_examples": 5,
                "num_explored_concrete": 808,
                "num_explored_lambda": 415,
                "num_explored_none": 205,
                "num_inputs": 1,
                "num_kept_concrete": 423,
                "num_kept_lambda": 156,
                "num_values_explored": 1428,
                "num_values_kept": 579,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 88089
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 15.692068124189973,
            "num_unique_values": 1213,
            "solution": "Multiply(Subtract(-1, Multiply(x2, 4)), Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 77.35398046144253,
                "explored_percent_lambda": 5.477031802120141,
                "explored_percent_none": 17.16898773643733,
                "kept_percent_concrete": 87.78054862842893,
                "kept_percent_lambda": 12.219451371571072,
                "num_examples": 4,
                "num_explored_concrete": 7443,
                "num_explored_lambda": 527,
                "num_explored_none": 1652,
                "num_inputs": 2,
                "num_kept_concrete": 1056,
                "num_kept_lambda": 147,
                "num_values_explored": 9622,
                "num_values_kept": 1203,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 9622
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 201.39225132763386,
            "num_unique_values": 563,
            "solution": "Add(4, Multiply(4, Min(3, Multiply(3, Subtract(2, Square(x1))))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 27.507073247406478,
                "explored_percent_lambda": 9.965419679346118,
                "explored_percent_none": 62.527507073247406,
                "kept_percent_concrete": 88.62815884476534,
                "kept_percent_lambda": 11.371841155234657,
                "num_examples": 3,
                "num_explored_concrete": 3500,
                "num_explored_lambda": 1268,
                "num_explored_none": 7956,
                "num_inputs": 1,
                "num_kept_concrete": 491,
                "num_kept_lambda": 63,
                "num_values_explored": 12724,
                "num_values_kept": 554,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 119192
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.437791720032692,
            "num_unique_values": 716,
            "solution": "Map(lambda u1: Multiply(3, Add(1, Square(4))), Drop(3, Take(4, x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 63.21571238348868,
                "explored_percent_lambda": 18.974700399467377,
                "explored_percent_none": 17.80958721704394,
                "kept_percent_concrete": 62.74787535410765,
                "kept_percent_lambda": 37.25212464589235,
                "num_examples": 3,
                "num_explored_concrete": 1899,
                "num_explored_lambda": 570,
                "num_explored_none": 535,
                "num_inputs": 2,
                "num_kept_concrete": 443,
                "num_kept_lambda": 263,
                "num_values_explored": 3004,
                "num_values_kept": 706,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3004
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 156.24726519919932,
            "num_unique_values": 764,
            "solution": "Filter(lambda u1: IsEven(Minimum(x1)), Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 55.3230543318649,
                "explored_percent_lambda": 31.05726872246696,
                "explored_percent_none": 13.619676945668136,
                "kept_percent_concrete": 51.65562913907285,
                "kept_percent_lambda": 48.34437086092715,
                "num_examples": 5,
                "num_explored_concrete": 1507,
                "num_explored_lambda": 846,
                "num_explored_none": 371,
                "num_inputs": 1,
                "num_kept_concrete": 390,
                "num_kept_lambda": 365,
                "num_values_explored": 2724,
                "num_values_kept": 755,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 72677
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 138.90094012208283,
            "num_unique_values": 1677,
            "solution": "Multiply(3, IntDivide(Max(-1, Max(Sum(x1), Last(x1))), 3))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 77.59827124922823,
                "explored_percent_lambda": 9.611031076353159,
                "explored_percent_none": 12.790697674418604,
                "kept_percent_concrete": 79.0167865707434,
                "kept_percent_lambda": 20.983213429256594,
                "num_examples": 5,
                "num_explored_concrete": 7541,
                "num_explored_lambda": 934,
                "num_explored_none": 1243,
                "num_inputs": 1,
                "num_kept_concrete": 1318,
                "num_kept_lambda": 350,
                "num_values_explored": 9718,
                "num_values_kept": 1668,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 73462
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 38.89945235475898,
            "num_unique_values": 701,
            "solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 56.77132146204311,
                "explored_percent_lambda": 22.1883786316776,
                "explored_percent_none": 21.040299906279287,
                "kept_percent_concrete": 61.127167630057805,
                "kept_percent_lambda": 38.872832369942195,
                "num_examples": 2,
                "num_explored_concrete": 2423,
                "num_explored_lambda": 947,
                "num_explored_none": 898,
                "num_inputs": 1,
                "num_kept_concrete": 423,
                "num_kept_lambda": 269,
                "num_values_explored": 4268,
                "num_values_kept": 692,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 20395
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.242377145215869,
            "num_unique_values": 1239,
            "solution": "Scanl1(lambda u1, u2: Add(3, Max(Head(x1), Square(4))), Take(2, x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 60.161968540725745,
                "explored_percent_lambda": 23.56330789596636,
                "explored_percent_none": 16.274723563307894,
                "kept_percent_concrete": 60.89430894308943,
                "kept_percent_lambda": 39.10569105691057,
                "num_examples": 4,
                "num_explored_concrete": 3863,
                "num_explored_lambda": 1513,
                "num_explored_none": 1045,
                "num_inputs": 1,
                "num_kept_concrete": 749,
                "num_kept_lambda": 481,
                "num_values_explored": 6421,
                "num_values_kept": 1230,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 6421
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.6399400960654,
            "num_unique_values": 1172,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.91329612355685,
                "explored_percent_lambda": 25.483599663582844,
                "explored_percent_none": 28.60310421286031,
                "kept_percent_concrete": 37.23129836629407,
                "kept_percent_lambda": 62.76870163370593,
                "num_examples": 2,
                "num_explored_concrete": 6005,
                "num_explored_lambda": 3333,
                "num_explored_none": 3741,
                "num_inputs": 1,
                "num_kept_concrete": 433,
                "num_kept_lambda": 730,
                "num_values_explored": 13079,
                "num_values_kept": 1163,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 263260
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 12.288593476638198,
            "num_unique_values": 864,
            "solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 53.58024691358025,
                "explored_percent_lambda": 27.319223985890652,
                "explored_percent_none": 19.1005291005291,
                "kept_percent_concrete": 36.14035087719298,
                "kept_percent_lambda": 63.85964912280702,
                "num_examples": 2,
                "num_explored_concrete": 3038,
                "num_explored_lambda": 1549,
                "num_explored_none": 1083,
                "num_inputs": 1,
                "num_kept_concrete": 309,
                "num_kept_lambda": 546,
                "num_values_explored": 5670,
                "num_values_kept": 855,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 5670
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3616916574538,
            "num_unique_values": 657,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.431111111111115,
                "explored_percent_lambda": 10.749629629629629,
                "explored_percent_none": 53.81925925925926,
                "kept_percent_concrete": 83.48765432098766,
                "kept_percent_lambda": 16.512345679012345,
                "num_examples": 2,
                "num_explored_concrete": 5979,
                "num_explored_lambda": 1814,
                "num_explored_none": 9082,
                "num_inputs": 1,
                "num_kept_concrete": 541,
                "num_kept_lambda": 107,
                "num_values_explored": 16875,
                "num_values_kept": 648,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 335082
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 166.9138807747513,
            "num_unique_values": 464,
            "solution": "Subtract(If(IsEven(x1), IntDivide(Square(3), -1), Add(x1, x1)), 2)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 25.086484552069663,
                "explored_percent_lambda": 19.491828700942385,
                "explored_percent_none": 55.42168674698795,
                "kept_percent_concrete": 65.71428571428571,
                "kept_percent_lambda": 34.285714285714285,
                "num_examples": 2,
                "num_explored_concrete": 2103,
                "num_explored_lambda": 1634,
                "num_explored_none": 4646,
                "num_inputs": 1,
                "num_kept_concrete": 299,
                "num_kept_lambda": 156,
                "num_values_explored": 8383,
                "num_values_kept": 455,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 86981
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.408624649047852,
            "num_unique_values": 270,
            "solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 20.76089695137314,
                "explored_percent_lambda": 25.79994960947342,
                "explored_percent_none": 53.439153439153436,
                "kept_percent_concrete": 56.92307692307692,
                "kept_percent_lambda": 43.07692307692308,
                "num_examples": 2,
                "num_explored_concrete": 824,
                "num_explored_lambda": 1024,
                "num_explored_none": 2121,
                "num_inputs": 2,
                "num_kept_concrete": 148,
                "num_kept_lambda": 112,
                "num_values_explored": 3969,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3969
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3474501110613,
            "num_unique_values": 690,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.977199536261754,
                "explored_percent_lambda": 15.129460260208683,
                "explored_percent_none": 55.89334020352956,
                "kept_percent_concrete": 70.0,
                "kept_percent_lambda": 30.0,
                "num_examples": 2,
                "num_explored_concrete": 4499,
                "num_explored_lambda": 2349,
                "num_explored_none": 8678,
                "num_inputs": 2,
                "num_kept_concrete": 476,
                "num_kept_lambda": 204,
                "num_values_explored": 15526,
                "num_values_kept": 680,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 320098
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3700923621655,
            "num_unique_values": 651,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.884687238291566,
                "explored_percent_lambda": 15.70572698576306,
                "explored_percent_none": 54.409585775945374,
                "kept_percent_concrete": 74.10296411856474,
                "kept_percent_lambda": 25.897035881435258,
                "num_examples": 2,
                "num_explored_concrete": 4639,
                "num_explored_lambda": 2438,
                "num_explored_none": 8446,
                "num_inputs": 2,
                "num_kept_concrete": 475,
                "num_kept_lambda": 166,
                "num_values_explored": 15523,
                "num_values_kept": 641,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 312863
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.3565210923553,
            "num_unique_values": 658,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.523757754044894,
                "explored_percent_lambda": 14.465690349811345,
                "explored_percent_none": 55.01055189614376,
                "kept_percent_concrete": 72.53086419753086,
                "kept_percent_lambda": 27.469135802469136,
                "num_examples": 2,
                "num_explored_concrete": 4773,
                "num_explored_lambda": 2262,
                "num_explored_none": 8602,
                "num_inputs": 2,
                "num_kept_concrete": 470,
                "num_kept_lambda": 178,
                "num_values_explored": 15637,
                "num_values_kept": 648,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 317131
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 600.6938113644719,
            "num_unique_values": 1191,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.76317143067088,
                "explored_percent_lambda": 26.254684400029394,
                "explored_percent_none": 26.98214416929973,
                "kept_percent_concrete": 37.30964467005076,
                "kept_percent_lambda": 62.69035532994924,
                "num_examples": 2,
                "num_explored_concrete": 6364,
                "num_explored_lambda": 3573,
                "num_explored_none": 3672,
                "num_inputs": 1,
                "num_kept_concrete": 441,
                "num_kept_lambda": 741,
                "num_values_explored": 13609,
                "num_values_kept": 1182,
                "temperature": 1.0,
                "total_num_restarts": 20,
                "total_num_values_explored": 273092
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 447.86787363514304,
            "num_unique_values": 620,
            "solution": "Add(3, Max(Add(x1, x1), Multiply(Square(4), Add(3, 4))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 32.47825258746587,
                "explored_percent_lambda": 11.842021715664487,
                "explored_percent_none": 55.679725696869646,
                "kept_percent_concrete": 89.85270049099836,
                "kept_percent_lambda": 10.147299509001636,
                "num_examples": 3,
                "num_explored_concrete": 5115,
                "num_explored_lambda": 1865,
                "num_explored_none": 8769,
                "num_inputs": 1,
                "num_kept_concrete": 549,
                "num_kept_lambda": 62,
                "num_values_explored": 15749,
                "num_values_kept": 611,
                "temperature": 1.0,
                "total_num_restarts": 15,
                "total_num_values_explored": 252259
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.89
}